Program.Sub.ScreenSU.Start
Gui.F_Label_Est..create
Gui.F_Label_Est..caption("DICE Label Estimator")
Gui.F_Label_Est..size(16125,11475)
Gui.F_Label_Est..minx(0)
Gui.F_Label_Est..miny(0)
Gui.F_Label_Est..position(0,0)
Gui.F_Label_Est..event(UnLoad,f_label_est_unload)
Gui.F_Label_Est..forecolor(0)
Gui.F_Label_Est..fontstyle(True,False,False,False)
Gui.F_Label_Est..BackColor(-2147483633)
Gui.F_Label_Est..maxbutton(False)
Gui.F_Label_Est..mousepointer(0)
Gui.F_Label_Est..ContextMenuCreate("ctxPrevEst")
Gui.F_Label_Est..ContextMenuAddItem("ctxPrevEst","Load",0,"Load Est")
Gui.F_Label_Est..ContextMenuAddItem("ctxPrevEst","Copy",0,"Copy Est")
Gui.F_Label_Est..ContextMenuAddItem("ctxPrevEst","Archive",0,"Archive Est")
Gui.F_Label_Est..ContextMenuAddItem("ctxPrevEst","Delete",0,"Delete Est")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxPrevEst","Load","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxPrevEst","Copy","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxPrevEst","Archive","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxPrevEst","Delete","MenuClick")
Gui.F_Label_Est..ContextMenuCreate("ctxMaterialBottom")
Gui.F_Label_Est..ContextMenuAddItem("ctxMaterialBottom","Delete",0,"Delete Row")
Gui.F_Label_Est..ContextMenuAddItem("ctxMaterialBottom","Copy",0,"Copy Row")
Gui.F_Label_Est..ContextMenuAddItem("ctxMaterialBottom","Change",0,"Change Part")
Gui.F_Label_Est..ContextMenuAddItem("ctxMaterialBottom","Comment",0,"Add Comment OP Code")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxMaterialBottom","Delete","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxMaterialBottom","Copy","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxMaterialBottom","Change","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxMaterialBottom","Comment","MenuClick")
Gui.F_Label_Est..ContextMenuCreate("ctxMaterialTop")
Gui.F_Label_Est..ContextMenuAddItem("ctxMaterialTop","Comment",0,"Add Comment OP Code")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxMaterialTop","Comment","MenuClick")
Gui.F_Label_Est..ContextMenuCreate("ctxLaborBottom")
Gui.F_Label_Est..ContextMenuAddItem("ctxLaborBottom","Delete",0,"Delete Row")
Gui.F_Label_Est..ContextMenuAddItem("ctxLaborBottom","Copy",0,"Copy Row")
Gui.F_Label_Est..ContextMenuAddItem("ctxLaborBottom","Change",0,"Change WC")
Gui.F_Label_Est..ContextMenuAddItem("ctxLaborBottom","Comment",0,"Add Comment OP Code")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxLaborBottom","Delete","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxLaborBottom","Copy","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxLaborBottom","Change","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxLaborBottom","Comment","MenuClick")
Gui.F_Label_Est..ContextMenuCreate("ctxLaborTop")
Gui.F_Label_Est..ContextMenuAddItem("ctxLaborTop","Comment",0,"Add Comment OP Code")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxLaborTop","Comment","MenuClick")
Gui.F_Label_Est..ContextMenuCreate("ctxSummaryTop")
Gui.F_Label_Est..ContextMenuAddItem("ctxSummaryTop","Comments",0,"Comments")
Gui.F_Label_Est..ContextMenuAddItem("ctxSummaryTop","Export",0,"Export")
Gui.F_Label_Est..ContextMenuAddItem("ctxSummaryTop","Delete",0,"Delete Row")
Gui.F_Label_Est..ContextMenuAddItem("ctxSummaryTop","Copy",0,"Copy Row")
Gui.F_Label_Est..ContextMenuAddItem("ctxSummaryTop","Up1",0,"Move Up 1")
Gui.F_Label_Est..ContextMenuAddItem("ctxSummaryTop","Down1",0,"Move Down 1")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxSummaryTop","Comments","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxSummaryTop","Export","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxSummaryTop","Delete","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxSummaryTop","Copy","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxSummaryTop","Up1","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxSummaryTop","Down1","MenuClick")
Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxSummaryTop","Move","MenuClick")
Gui.F_Label_Est..Sizeable(False)
Gui.F_Label_Est.tabx1.create(tab)
Gui.F_Label_Est.tabx1.TabStop(False)
Gui.F_Label_Est.tabx1.TabIndex(299)
Gui.F_Label_Est.tabx1.size(15810,5865)
Gui.F_Label_Est.tabx1.position(105,4500)
Gui.F_Label_Est.tabx1.Tabs(8)
Gui.F_Label_Est.tabx1.SetTab(0)
Gui.F_Label_Est.tabx1.Caption("Estimating")
Gui.F_Label_Est.tabx1.SetTab(1)
Gui.F_Label_Est.tabx1.Caption("Material")
Gui.F_Label_Est.tabx1.SetTab(2)
Gui.F_Label_Est.tabx1.Caption("Labor")
Gui.F_Label_Est.tabx1.SetTab(3)
Gui.F_Label_Est.tabx1.Caption("Packaging")
Gui.F_Label_Est.tabx1.SetTab(4)
Gui.F_Label_Est.tabx1.Caption("Attributes")
Gui.F_Label_Est.tabx1.SetTab(5)
Gui.F_Label_Est.tabx1.Caption("Pricing")
Gui.F_Label_Est.tabx1.SetTab(6)
Gui.F_Label_Est.tabx1.Caption("Summary")
Gui.F_Label_Est.tabx1.SetTab(7)
Gui.F_Label_Est.tabx1.Caption("Freight")
Gui.F_Label_Est.frame2.create(frame)
Gui.F_Label_Est.frame2.TabStop(True)
Gui.F_Label_Est.frame2.TabIndex(800)
Gui.F_Label_Est.frame2.caption("Shipping Information")
Gui.F_Label_Est.frame2.parent("tabx1",7)
Gui.F_Label_Est.frame2.size(9870,1845)
Gui.F_Label_Est.frame2.position(150,230)
Gui.F_Label_Est.txtHArea.create(textbox,"",True,405,300,0,195,540,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHArea.parent("frame2")
Gui.F_Label_Est.txtHArea.event(GotFocus,Focus)
Gui.F_Label_Est.txtHArea.maxLength(2)
Gui.F_Label_Est.txtHArea.defaultvalue("")
Gui.F_Label_Est.txtHArea.controlgroup(2)
Gui.F_Label_Est.txtHArea.tabstop(True)
Gui.F_Label_Est.txtHArea.tabindex(801)
Gui.F_Label_Est.lbl44.create(label,"Area",True,465,255,1,200,350,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl44.parent("frame2")
Gui.F_Label_Est.lbl44.defaultvalue("")
Gui.F_Label_Est.lbl45.create(label,"Branch",True,615,255,1,800,350,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl45.parent("frame2")
Gui.F_Label_Est.lbl45.defaultvalue("")
Gui.F_Label_Est.txtHBranch.create(textbox,"",True,405,300,0,795,540,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHBranch.parent("frame2")
Gui.F_Label_Est.txtHBranch.event(GotFocus,Focus)
Gui.F_Label_Est.txtHBranch.maxLength(2)
Gui.F_Label_Est.txtHBranch.defaultvalue("")
Gui.F_Label_Est.txtHBranch.controlgroup(2)
Gui.F_Label_Est.txtHBranch.tabstop(True)
Gui.F_Label_Est.txtHBranch.tabindex(802)
Gui.F_Label_Est.lbl47.create(label,"Terms",True,1155,255,1,200,1020,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl47.parent("frame2")
Gui.F_Label_Est.lbl47.defaultvalue("")
Gui.F_Label_Est.txtHTerms.create(textbox,"",True,1215,300,0,195,1215,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHTerms.parent("frame2")
Gui.F_Label_Est.txtHTerms.event(GotFocus,Focus)
Gui.F_Label_Est.txtHTerms.maxLength(10)
Gui.F_Label_Est.txtHTerms.defaultvalue("")
Gui.F_Label_Est.txtHTerms.controlgroup(2)
Gui.F_Label_Est.txtHTerms.tabstop(True)
Gui.F_Label_Est.txtHTerms.tabindex(810)
Gui.F_Label_Est.cmdTerms.create(button)
Gui.F_Label_Est.cmdTerms.caption("^")
Gui.F_Label_Est.cmdTerms.size(495,330)
Gui.F_Label_Est.cmdTerms.position(1485,1215)
Gui.F_Label_Est.cmdTerms.parent("frame2")
Gui.F_Label_Est.cmdTerms.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdTerms.defaultvalue("")
Gui.F_Label_Est.cmdTerms.tabstop(True)
Gui.F_Label_Est.cmdTerms.tabindex(811)
Gui.F_Label_Est.lbl49.create(label,"Process Group",True,1425,255,1,5825,350,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl49.parent("frame2")
Gui.F_Label_Est.lbl49.defaultvalue("")
Gui.F_Label_Est.ddlHProcessGrp.create(dropdownlist)
Gui.F_Label_Est.ddlHProcessGrp.size(1560,330)
Gui.F_Label_Est.ddlHProcessGrp.position(5820,540)
Gui.F_Label_Est.ddlHProcessGrp.parent("frame2")
Gui.F_Label_Est.ddlHProcessGrp.defaultvalue("")
Gui.F_Label_Est.ddlHProcessGrp.controlgroup(2)
Gui.F_Label_Est.ddlHProcessGrp.tabstop(True)
Gui.F_Label_Est.ddlHProcessGrp.tabindex(807)
Gui.F_Label_Est.lbl51.create(label,"Carrier",True,840,255,1,4205,350,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl51.parent("frame2")
Gui.F_Label_Est.lbl51.defaultvalue("")
Gui.F_Label_Est.txtHCarrier.create(textbox,"",True,900,300,0,4170,540,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHCarrier.parent("frame2")
Gui.F_Label_Est.txtHCarrier.event(GotFocus,Focus)
Gui.F_Label_Est.txtHCarrier.maxLength(25)
Gui.F_Label_Est.txtHCarrier.defaultvalue("")
Gui.F_Label_Est.txtHCarrier.controlgroup(2)
Gui.F_Label_Est.txtHCarrier.tabstop(True)
Gui.F_Label_Est.txtHCarrier.tabindex(805)
Gui.F_Label_Est.cmdCarrier.create(button)
Gui.F_Label_Est.cmdCarrier.caption("^")
Gui.F_Label_Est.cmdCarrier.size(495,330)
Gui.F_Label_Est.cmdCarrier.position(5145,540)
Gui.F_Label_Est.cmdCarrier.parent("frame2")
Gui.F_Label_Est.cmdCarrier.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdCarrier.defaultvalue("")
Gui.F_Label_Est.cmdCarrier.tabstop(True)
Gui.F_Label_Est.cmdCarrier.tabindex(806)
Gui.F_Label_Est.lbl52.create(label,"Ship Via",True,1935,255,1,1585,350,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl52.parent("frame2")
Gui.F_Label_Est.lbl52.defaultvalue("")
Gui.F_Label_Est.txtHShipVia.create(textbox,"",True,1800,300,0,1575,540,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHShipVia.parent("frame2")
Gui.F_Label_Est.txtHShipVia.event(GotFocus,Focus)
Gui.F_Label_Est.txtHShipVia.maxLength(20)
Gui.F_Label_Est.txtHShipVia.defaultvalue("")
Gui.F_Label_Est.txtHShipVia.controlgroup(2)
Gui.F_Label_Est.txtHShipVia.tabstop(True)
Gui.F_Label_Est.txtHShipVia.tabindex(803)
Gui.F_Label_Est.cmdShipVia.create(button)
Gui.F_Label_Est.cmdShipVia.caption("^")
Gui.F_Label_Est.cmdShipVia.size(495,330)
Gui.F_Label_Est.cmdShipVia.position(3450,540)
Gui.F_Label_Est.cmdShipVia.parent("frame2")
Gui.F_Label_Est.cmdShipVia.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdShipVia.defaultvalue("")
Gui.F_Label_Est.cmdShipVia.tabstop(True)
Gui.F_Label_Est.cmdShipVia.tabindex(804)
Gui.F_Label_Est.lbl53.create(label,"3rd Party Freight",True,1455,255,1,3900,1020,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl53.parent("frame2")
Gui.F_Label_Est.lbl53.defaultvalue("")
Gui.F_Label_Est.txtHTrdFreight.create(textbox,"",True,1215,300,0,3900,1215,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHTrdFreight.parent("frame2")
Gui.F_Label_Est.txtHTrdFreight.event(GotFocus,Focus)
Gui.F_Label_Est.txtHTrdFreight.maxLength(7)
Gui.F_Label_Est.txtHTrdFreight.defaultvalue("")
Gui.F_Label_Est.txtHTrdFreight.controlgroup(2)
Gui.F_Label_Est.txtHTrdFreight.tabstop(True)
Gui.F_Label_Est.txtHTrdFreight.tabindex(814)
Gui.F_Label_Est.cmdTrdFreight.create(button)
Gui.F_Label_Est.cmdTrdFreight.caption("^")
Gui.F_Label_Est.cmdTrdFreight.size(495,330)
Gui.F_Label_Est.cmdTrdFreight.position(5175,1215)
Gui.F_Label_Est.cmdTrdFreight.parent("frame2")
Gui.F_Label_Est.cmdTrdFreight.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdTrdFreight.defaultvalue("")
Gui.F_Label_Est.cmdTrdFreight.tabstop(True)
Gui.F_Label_Est.cmdTrdFreight.tabindex(815)
Gui.F_Label_Est.lbl54.create(label,"FOB",True,1110,255,1,7610,350,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl54.parent("frame2")
Gui.F_Label_Est.lbl54.defaultvalue("")
Gui.F_Label_Est.txtHFOB.create(textbox,"",True,1215,300,0,7530,540,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHFOB.parent("frame2")
Gui.F_Label_Est.txtHFOB.event(GotFocus,Focus)
Gui.F_Label_Est.txtHFOB.maxLength(14)
Gui.F_Label_Est.txtHFOB.defaultvalue("")
Gui.F_Label_Est.txtHFOB.controlgroup(2)
Gui.F_Label_Est.txtHFOB.tabstop(True)
Gui.F_Label_Est.txtHFOB.tabindex(808)
Gui.F_Label_Est.cmdFOB.create(button)
Gui.F_Label_Est.cmdFOB.caption("^")
Gui.F_Label_Est.cmdFOB.size(495,330)
Gui.F_Label_Est.cmdFOB.position(8880,540)
Gui.F_Label_Est.cmdFOB.parent("frame2")
Gui.F_Label_Est.cmdFOB.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdFOB.defaultvalue("")
Gui.F_Label_Est.cmdFOB.tabstop(True)
Gui.F_Label_Est.cmdFOB.tabindex(809)
Gui.F_Label_Est.lbl55.create(label,"Freight Zone",True,1935,255,1,5870,1020,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl55.parent("frame2")
Gui.F_Label_Est.lbl55.defaultvalue("")
Gui.F_Label_Est.txtHFreightZone.create(textbox,"",True,1215,300,0,5865,1215,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHFreightZone.parent("frame2")
Gui.F_Label_Est.txtHFreightZone.event(GotFocus,Focus)
Gui.F_Label_Est.txtHFreightZone.maxLength(10)
Gui.F_Label_Est.txtHFreightZone.defaultvalue("")
Gui.F_Label_Est.txtHFreightZone.controlgroup(2)
Gui.F_Label_Est.txtHFreightZone.tabstop(True)
Gui.F_Label_Est.txtHFreightZone.tabindex(816)
Gui.F_Label_Est.cmdFreightZone.create(button)
Gui.F_Label_Est.cmdFreightZone.caption("^")
Gui.F_Label_Est.cmdFreightZone.size(495,330)
Gui.F_Label_Est.cmdFreightZone.position(7140,1215)
Gui.F_Label_Est.cmdFreightZone.parent("frame2")
Gui.F_Label_Est.cmdFreightZone.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdFreightZone.defaultvalue("")
Gui.F_Label_Est.cmdFreightZone.tabstop(True)
Gui.F_Label_Est.cmdFreightZone.tabindex(817)
Gui.F_Label_Est.lbl62.create(label,"Project",True,855,255,1,2250,1020,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl62.parent("frame2")
Gui.F_Label_Est.lbl62.defaultvalue("")
Gui.F_Label_Est.cmdProject.create(button)
Gui.F_Label_Est.cmdProject.caption("^")
Gui.F_Label_Est.cmdProject.size(495,330)
Gui.F_Label_Est.cmdProject.position(3135,1215)
Gui.F_Label_Est.cmdProject.parent("frame2")
Gui.F_Label_Est.cmdProject.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdProject.defaultvalue("")
Gui.F_Label_Est.cmdProject.tabstop(True)
Gui.F_Label_Est.cmdProject.tabindex(813)
Gui.F_Label_Est.txtHProject.create(textbox,"",True,840,300,0,2250,1215,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHProject.parent("frame2")
Gui.F_Label_Est.txtHProject.event(GotFocus,Focus)
Gui.F_Label_Est.txtHProject.maxLength(7)
Gui.F_Label_Est.txtHProject.defaultvalue("")
Gui.F_Label_Est.txtHProject.controlgroup(2)
Gui.F_Label_Est.txtHProject.tabstop(True)
Gui.F_Label_Est.txtHProject.tabindex(812)
Gui.F_Label_Est.frame3.create(frame)
Gui.F_Label_Est.frame3.TabStop(True)
Gui.F_Label_Est.frame3.TabIndex(9999)
Gui.F_Label_Est.frame3.caption("Pricing Modifications")
Gui.F_Label_Est.frame3.parent("tabx1",5)
Gui.F_Label_Est.frame3.size(2520,2490)
Gui.F_Label_Est.frame3.position(16170,1170)
Gui.F_Label_Est.frame3.visible(False)
Gui.F_Label_Est.gsflexgrid11.create(GsGridControl)
Gui.F_Label_Est.gsflexgrid11.size(5235,1950)
Gui.F_Label_Est.gsflexgrid11.position(11945,-2760)
Gui.F_Label_Est.gsflexgrid11.parent("frame3")
Gui.F_Label_Est.CMDPAPPLY.create(button)
Gui.F_Label_Est.CMDPAPPLY.caption("Apply")
Gui.F_Label_Est.CMDPAPPLY.size(855,375)
Gui.F_Label_Est.CMDPAPPLY.position(200,1970)
Gui.F_Label_Est.CMDPAPPLY.parent("frame3")
Gui.F_Label_Est.CMDPAPPLY.defaultvalue("")
Gui.F_Label_Est.CMDPREMOVEPRICE.create(button)
Gui.F_Label_Est.CMDPREMOVEPRICE.caption("Remove")
Gui.F_Label_Est.CMDPREMOVEPRICE.size(855,375)
Gui.F_Label_Est.CMDPREMOVEPRICE.position(1385,1970)
Gui.F_Label_Est.CMDPREMOVEPRICE.parent("frame3")
Gui.F_Label_Est.CMDPREMOVEPRICE.defaultvalue("")
Gui.F_Label_Est.lblChargeType.create(label,"Charge Type",True,1365,255,1,195,255,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblChargeType.parent("frame3")
Gui.F_Label_Est.lblChargeType.defaultvalue("")
Gui.F_Label_Est.txtPAmount.create(textbox,"",True,1215,300,0,200,1550,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPAmount.parent("frame3")
Gui.F_Label_Est.txtPAmount.numericonly(1)
Gui.F_Label_Est.txtPAmount.defaultvalue("")
Gui.F_Label_Est.txtPAmount.controlgroup(2)
Gui.F_Label_Est.lblChargeAmt.create(label,"Charge Amount",True,1215,255,1,200,1355,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblChargeAmt.parent("frame3")
Gui.F_Label_Est.lblChargeAmt.defaultvalue("")
Gui.F_Label_Est.ddlPType.create(dropdownlist)
Gui.F_Label_Est.ddlPType.size(1455,330)
Gui.F_Label_Est.ddlPType.position(195,450)
Gui.F_Label_Est.ddlPType.parent("frame3")
Gui.F_Label_Est.ddlPType.defaultvalue("Upcharge")
Gui.F_Label_Est.ddlPType.controlgroup(2)
Gui.F_Label_Est.lbl77.create(label,"Amount Type",True,1935,255,1,200,810,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl77.parent("frame3")
Gui.F_Label_Est.lbl77.defaultvalue("")
Gui.F_Label_Est.ddlPAmtType.create(dropdownlist)
Gui.F_Label_Est.ddlPAmtType.size(1455,330)
Gui.F_Label_Est.ddlPAmtType.position(200,1005)
Gui.F_Label_Est.ddlPAmtType.parent("frame3")
Gui.F_Label_Est.ddlPAmtType.defaultvalue("Percent")
Gui.F_Label_Est.ddlPAmtType.controlgroup(2)
Gui.F_Label_Est.frame5.create(frame)
Gui.F_Label_Est.frame5.TabStop(True)
Gui.F_Label_Est.frame5.TabIndex(305)
Gui.F_Label_Est.frame5.caption("Tooling Filter for Browser")
Gui.F_Label_Est.frame5.parent("tabx1",1)
Gui.F_Label_Est.frame5.size(9855,960)
Gui.F_Label_Est.frame5.position(4350,45)
Gui.F_Label_Est.lbl64.create(label,"UM",True,1380,255,1,255,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl64.parent("frame5")
Gui.F_Label_Est.lbl64.defaultvalue("")
Gui.F_Label_Est.ddlMUM.create(dropdownlist)
Gui.F_Label_Est.ddlMUM.size(690,330)
Gui.F_Label_Est.ddlMUM.position(255,495)
Gui.F_Label_Est.ddlMUM.parent("frame5")
Gui.F_Label_Est.ddlMUM.defaultvalue("")
Gui.F_Label_Est.ddlMUM.controlgroup(2)
Gui.F_Label_Est.ddlMUM.tabstop(True)
Gui.F_Label_Est.ddlMUM.tabindex(305)
Gui.F_Label_Est.lbl65.create(label,"Label Shape",True,945,255,1,1060,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl65.parent("frame5")
Gui.F_Label_Est.lbl65.defaultvalue("")
Gui.F_Label_Est.lbl67.create(label,"Width Range",True,960,255,1,2410,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl67.parent("frame5")
Gui.F_Label_Est.lbl67.defaultvalue("")
Gui.F_Label_Est.lbl68.create(label,"Length Range",True,1050,255,1,3875,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl68.parent("frame5")
Gui.F_Label_Est.lbl68.defaultvalue("")
Gui.F_Label_Est.lbl69.create(label,"# ACR Die",True,870,255,1,6355,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl69.parent("frame5")
Gui.F_Label_Est.lbl69.defaultvalue("")
Gui.F_Label_Est.lbl72.create(label,"Gap Acr.",True,1065,255,1,7310,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl72.parent("frame5")
Gui.F_Label_Est.lbl72.defaultvalue("")
Gui.F_Label_Est.lbl73.create(label,"Gap Down",True,915,255,1,8100,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl73.parent("frame5")
Gui.F_Label_Est.lbl73.defaultvalue("")
Gui.F_Label_Est.lbl74.create(label,"Repeat",False,720,255,1,9000,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl74.parent("frame5")
Gui.F_Label_Est.lbl74.defaultvalue("")
Gui.F_Label_Est.ddlMLabelShape.create(dropdownlist)
Gui.F_Label_Est.ddlMLabelShape.size(1050,330)
Gui.F_Label_Est.ddlMLabelShape.position(1035,495)
Gui.F_Label_Est.ddlMLabelShape.parent("frame5")
Gui.F_Label_Est.ddlMLabelShape.defaultvalue("")
Gui.F_Label_Est.ddlMLabelShape.controlgroup(2)
Gui.F_Label_Est.ddlMLabelShape.tabstop(True)
Gui.F_Label_Est.ddlMLabelShape.tabindex(306)
Gui.F_Label_Est.txtMWidthF.create(textbox,"",True,570,300,0,2205,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMWidthF.parent("frame5")
Gui.F_Label_Est.txtMWidthF.numericonly(1)
Gui.F_Label_Est.txtMWidthF.event(GotFocus,Focus)
Gui.F_Label_Est.txtMWidthF.event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtMWidthF.defaultvalue("")
Gui.F_Label_Est.txtMWidthF.controlgroup(2)
Gui.F_Label_Est.txtMWidthF.tabstop(True)
Gui.F_Label_Est.txtMWidthF.tabindex(307)
Gui.F_Label_Est.txtMLengthF.create(textbox,"",True,570,300,0,3675,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMLengthF.parent("frame5")
Gui.F_Label_Est.txtMLengthF.numericonly(1)
Gui.F_Label_Est.txtMLengthF.event(GotFocus,Focus)
Gui.F_Label_Est.txtMLengthF.event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtMLengthF.defaultvalue("")
Gui.F_Label_Est.txtMLengthF.controlgroup(2)
Gui.F_Label_Est.txtMLengthF.tabstop(True)
Gui.F_Label_Est.txtMLengthF.tabindex(309)
Gui.F_Label_Est.txtMACRDie.create(textbox,"",True,885,300,0,6330,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMACRDie.parent("frame5")
Gui.F_Label_Est.txtMACRDie.event(GotFocus,Focus)
Gui.F_Label_Est.txtMACRDie.defaultvalue("")
Gui.F_Label_Est.txtMACRDie.controlgroup(2)
Gui.F_Label_Est.txtMACRDie.tabstop(True)
Gui.F_Label_Est.txtMACRDie.tabindex(312)
Gui.F_Label_Est.txtMGapAcross.create(textbox,"",True,720,300,0,7305,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMGapAcross.parent("frame5")
Gui.F_Label_Est.txtMGapAcross.event(GotFocus,Focus)
Gui.F_Label_Est.txtMGapAcross.defaultvalue("")
Gui.F_Label_Est.txtMGapAcross.controlgroup(2)
Gui.F_Label_Est.txtMGapAcross.tabstop(True)
Gui.F_Label_Est.txtMGapAcross.tabindex(313)
Gui.F_Label_Est.txtMGapDown.create(textbox,"",True,840,300,0,8085,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMGapDown.parent("frame5")
Gui.F_Label_Est.txtMGapDown.event(GotFocus,Focus)
Gui.F_Label_Est.txtMGapDown.defaultvalue("")
Gui.F_Label_Est.txtMGapDown.controlgroup(2)
Gui.F_Label_Est.txtMGapDown.tabstop(True)
Gui.F_Label_Est.txtMGapDown.tabindex(314)
Gui.F_Label_Est.txtMRepeat.create(textbox,"",False,630,300,0,9000,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMRepeat.parent("frame5")
Gui.F_Label_Est.txtMRepeat.event(GotFocus,Focus)
Gui.F_Label_Est.txtMRepeat.defaultvalue("")
Gui.F_Label_Est.txtMRepeat.controlgroup(2)
Gui.F_Label_Est.txtMRepeat.tabstop(True)
Gui.F_Label_Est.txtMRepeat.tabindex(315)
Gui.F_Label_Est.lbl70.create(label,"To",True,225,255,1,2760,545,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl70.parent("frame5")
Gui.F_Label_Est.lbl70.defaultvalue("")
Gui.F_Label_Est.txtMWidthT.create(textbox,"",True,570,300,0,3030,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMWidthT.parent("frame5")
Gui.F_Label_Est.txtMWidthT.numericonly(1)
Gui.F_Label_Est.txtMWidthT.event(GotFocus,Focus)
Gui.F_Label_Est.txtMWidthT.defaultvalue("")
Gui.F_Label_Est.txtMWidthT.controlgroup(2)
Gui.F_Label_Est.txtMWidthT.tabstop(True)
Gui.F_Label_Est.txtMWidthT.tabindex(308)
Gui.F_Label_Est.txtMLengthT.create(textbox,"",True,570,300,0,4515,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMLengthT.parent("frame5")
Gui.F_Label_Est.txtMLengthT.numericonly(1)
Gui.F_Label_Est.txtMLengthT.event(GotFocus,Focus)
Gui.F_Label_Est.txtMLengthT.defaultvalue("")
Gui.F_Label_Est.txtMLengthT.controlgroup(2)
Gui.F_Label_Est.txtMLengthT.tabstop(True)
Gui.F_Label_Est.txtMLengthT.tabindex(310)
Gui.F_Label_Est.lbl71.create(label,"To",True,225,255,1,4265,545,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl71.parent("frame5")
Gui.F_Label_Est.lbl71.defaultvalue("")
Gui.F_Label_Est.lbl75.create(label,"Material Used",True,990,255,1,5215,300,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl75.parent("frame5")
Gui.F_Label_Est.lbl75.defaultvalue("")
Gui.F_Label_Est.txtMMatUsed.create(textbox,"",True,1035,300,0,5205,495,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMMatUsed.parent("frame5")
Gui.F_Label_Est.txtMMatUsed.event(GotFocus,Focus)
Gui.F_Label_Est.txtMMatUsed.maxLength(20)
Gui.F_Label_Est.txtMMatUsed.defaultvalue("")
Gui.F_Label_Est.txtMMatUsed.controlgroup(2)
Gui.F_Label_Est.txtMMatUsed.tabstop(True)
Gui.F_Label_Est.txtMMatUsed.tabindex(311)
Gui.F_Label_Est.frame6.create(frame)
Gui.F_Label_Est.frame6.caption("Estimate History Filter")
Gui.F_Label_Est.frame6.parent("tabx1",0)
Gui.F_Label_Est.frame6.size(8955,1545)
Gui.F_Label_Est.frame6.position(10005,10005)
Gui.F_Label_Est.frame6.Visible(False)
Gui.F_Label_Est.txtPEEstNum.create(textbox,"",True,1320,300,0,200,545,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPEEstNum.parent("frame6")
Gui.F_Label_Est.txtPEEstNum.numericonly(2)
Gui.F_Label_Est.txtPEEstNum.event(GotFocus,Focus)
Gui.F_Label_Est.txtPEEstNum.defaultvalue("")
Gui.F_Label_Est.txtPEEstNum.tabstop(True)
Gui.F_Label_Est.txtPEEstNum.tabindex(35)
Gui.F_Label_Est.lbl85.create(label,"Customer ID",True,1215,255,1,1755,305,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl85.parent("frame6")
Gui.F_Label_Est.lbl85.defaultvalue("")
Gui.F_Label_Est.txtPECust.create(textbox,"",True,1215,300,0,1755,545,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPECust.parent("frame6")
Gui.F_Label_Est.txtPECust.event(Change,Prev_Click)
Gui.F_Label_Est.txtPECust.event(GotFocus,Focus)
Gui.F_Label_Est.txtPECust.maxLength(6)
Gui.F_Label_Est.txtPECust.defaultvalue("")
Gui.F_Label_Est.txtPECust.tabstop(True)
Gui.F_Label_Est.txtPECust.tabindex(36)
Gui.F_Label_Est.lbl86.create(label,"From Width",True,855,255,1,3205,305,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl86.parent("frame6")
Gui.F_Label_Est.lbl86.defaultvalue("")
Gui.F_Label_Est.txtPEFromWidth.create(textbox,"",True,855,300,0,3205,545,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPEFromWidth.parent("frame6")
Gui.F_Label_Est.txtPEFromWidth.numericonly(1)
Gui.F_Label_Est.txtPEFromWidth.event(GotFocus,Focus)
Gui.F_Label_Est.txtPEFromWidth.event(LostFocus,Prev_Click)
Gui.F_Label_Est.txtPEFromWidth.defaultvalue("")
Gui.F_Label_Est.txtPEFromWidth.tabstop(True)
Gui.F_Label_Est.txtPEFromWidth.tabindex(37)
Gui.F_Label_Est.lbl87.create(label,"To Width",True,855,255,1,4295,305,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl87.parent("frame6")
Gui.F_Label_Est.lbl87.defaultvalue("")
Gui.F_Label_Est.txtPEToWidth.create(textbox,"",True,855,300,0,4295,545,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPEToWidth.parent("frame6")
Gui.F_Label_Est.txtPEToWidth.numericonly(1)
Gui.F_Label_Est.txtPEToWidth.event(GotFocus,Focus)
Gui.F_Label_Est.txtPEToWidth.event(LostFocus,Prev_Click)
Gui.F_Label_Est.txtPEToWidth.defaultvalue("")
Gui.F_Label_Est.txtPEToWidth.tabstop(True)
Gui.F_Label_Est.txtPEToWidth.tabindex(38)
Gui.F_Label_Est.lbl88.create(label,"From Length",True,900,255,1,5385,305,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl88.parent("frame6")
Gui.F_Label_Est.lbl88.defaultvalue("")
Gui.F_Label_Est.txtPEFromLength.create(textbox,"",True,900,300,0,5385,545,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPEFromLength.parent("frame6")
Gui.F_Label_Est.txtPEFromLength.numericonly(1)
Gui.F_Label_Est.txtPEFromLength.event(GotFocus,Focus)
Gui.F_Label_Est.txtPEFromLength.event(LostFocus,Prev_Click)
Gui.F_Label_Est.txtPEFromLength.defaultvalue("")
Gui.F_Label_Est.txtPEFromLength.tabstop(True)
Gui.F_Label_Est.txtPEFromLength.tabindex(39)
Gui.F_Label_Est.lbl89.create(label,"To Length",True,900,255,1,6520,305,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl89.parent("frame6")
Gui.F_Label_Est.lbl89.defaultvalue("")
Gui.F_Label_Est.txtPEToLength.create(textbox,"",True,900,300,0,6525,540,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPEToLength.parent("frame6")
Gui.F_Label_Est.txtPEToLength.numericonly(1)
Gui.F_Label_Est.txtPEToLength.event(GotFocus,Focus)
Gui.F_Label_Est.txtPEToLength.event(LostFocus,Prev_Click)
Gui.F_Label_Est.txtPEToLength.defaultvalue("")
Gui.F_Label_Est.txtPEToLength.tabstop(True)
Gui.F_Label_Est.txtPEToLength.tabindex(40)
Gui.F_Label_Est.lbl90.create(label,"Num of Colors",True,1080,255,1,2075,890,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl90.parent("frame6")
Gui.F_Label_Est.lbl90.defaultvalue("")
Gui.F_Label_Est.txtPEColors.create(textbox,"",True,1000,300,0,2075,1095,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPEColors.parent("frame6")
Gui.F_Label_Est.txtPEColors.numericonly(1)
Gui.F_Label_Est.txtPEColors.event(GotFocus,Focus)
Gui.F_Label_Est.txtPEColors.event(LostFocus,Prev_Click)
Gui.F_Label_Est.txtPEColors.defaultvalue("")
Gui.F_Label_Est.txtPEColors.tabstop(True)
Gui.F_Label_Est.txtPEColors.tabindex(42)
Gui.F_Label_Est.lbl91.create(label,"Estimator",True,810,255,1,3310,890,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl91.parent("frame6")
Gui.F_Label_Est.lbl91.defaultvalue("")
Gui.F_Label_Est.txtPEEst.create(textbox,"",True,1215,300,0,3315,1095,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtPEEst.parent("frame6")
Gui.F_Label_Est.txtPEEst.event(GotFocus,Focus)
Gui.F_Label_Est.txtPEEst.maxLength(8)
Gui.F_Label_Est.txtPEEst.defaultvalue("")
Gui.F_Label_Est.txtPEEst.tabstop(True)
Gui.F_Label_Est.txtPEEst.tabindex(43)
Gui.F_Label_Est.lbl92.create(label,"From Date",True,1140,255,1,4805,890,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl92.parent("frame6")
Gui.F_Label_Est.lbl92.defaultvalue("")
Gui.F_Label_Est.dtpPEFromDate.create(datepicker)
Gui.F_Label_Est.dtpPEFromDate.size(1170,285)
Gui.F_Label_Est.dtpPEFromDate.position(4790,1095)
Gui.F_Label_Est.dtpPEFromDate.parent("frame6")
Gui.F_Label_Est.dtpPEFromDate.defaultvalue("")
Gui.F_Label_Est.dtpPEFromDate.tabstop(True)
Gui.F_Label_Est.dtpPEFromDate.tabindex(44)
Gui.F_Label_Est.lbl93.create(label,"To Date",True,705,255,1,6160,890,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl93.parent("frame6")
Gui.F_Label_Est.lbl93.defaultvalue("")
Gui.F_Label_Est.dtpPEToDate.create(datepicker)
Gui.F_Label_Est.dtpPEToDate.size(1170,285)
Gui.F_Label_Est.dtpPEToDate.position(6175,1095)
Gui.F_Label_Est.dtpPEToDate.parent("frame6")
Gui.F_Label_Est.dtpPEToDate.defaultvalue("")
Gui.F_Label_Est.dtpPEToDate.tabstop(True)
Gui.F_Label_Est.dtpPEToDate.tabindex(45)
Gui.F_Label_Est.cmdPEFilter.create(button)
Gui.F_Label_Est.cmdPEFilter.caption("Refresh")
Gui.F_Label_Est.cmdPEFilter.size(855,375)
Gui.F_Label_Est.cmdPEFilter.position(7815,1020)
Gui.F_Label_Est.cmdPEFilter.parent("frame6")
Gui.F_Label_Est.cmdPEFilter.event(Click,Prev_Click)
Gui.F_Label_Est.cmdPEFilter.tooltip("Apply Filter")
Gui.F_Label_Est.cmdPEFilter.defaultvalue("")
Gui.F_Label_Est.cmdPEFilter.tabstop(True)
Gui.F_Label_Est.cmdPEFilter.tabindex(46)
Gui.F_Label_Est.txtHistFinPart.create(textbox,"",True,1650,300,0,190,1095,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHistFinPart.parent("frame6")
Gui.F_Label_Est.txtHistFinPart.event(GotFocus,Focus)
Gui.F_Label_Est.txtHistFinPart.maxLength(20)
Gui.F_Label_Est.txtHistFinPart.defaultvalue("")
Gui.F_Label_Est.txtHistFinPart.tabstop(True)
Gui.F_Label_Est.txtHistFinPart.tabindex(442)
Gui.F_Label_Est.lblEst.create(label,"Estimate #",True,825,255,1,200,305,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblEst.parent("frame6")
Gui.F_Label_Est.lblEst.defaultvalue("")
Gui.F_Label_Est.lblHistFinPart.create(label,"Part",True,825,255,1,200,890,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblHistFinPart.parent("frame6")
Gui.F_Label_Est.lblHistFinPart.defaultvalue("")
Gui.F_Label_Est.cmdPEClear.Create(Button)
Gui.F_Label_Est.cmdPEClear.Size(855,375)
Gui.F_Label_Est.cmdPEClear.Position(7815,465)
Gui.F_Label_Est.cmdPEClear.Parent("frame6")
Gui.F_Label_Est.cmdPEClear.Caption("Clear")
Gui.F_Label_Est.cmdPEClear.Event(Click,Prev_Click)
Gui.F_Label_Est.gsfgMaterialBottom.create(GsGridControl)
Gui.F_Label_Est.gsfgMaterialBottom.size(15480,2400)
Gui.F_Label_Est.gsfgMaterialBottom.position(150,2595)
Gui.F_Label_Est.gsfgMaterialBottom.parent("tabx1",1)
Gui.F_Label_Est.gsfgMaterialBottom.ContextMenuAttach("ctxMaterialBottom")
Gui.F_Label_Est.gsfgMaterialBottom.Event(CellValueChanged,gsfgMaterialTop_CellValueChanged)
Gui.F_Label_Est.gsfgMaterialBottom.Event(RowCellClick,MLGrid_Click)
Gui.F_Label_Est.gsfgMaterialBottom.TabIndex(10006)
Gui.F_Label_Est.gsfgMaterialBottom.AllowMouseWheel(False)
Gui.F_Label_Est.gsfgLaborBottom.create(GsGridControl)
Gui.F_Label_Est.gsfgLaborBottom.size(12840,2340)
Gui.F_Label_Est.gsfgLaborBottom.position(45,2145)
Gui.F_Label_Est.gsfgLaborBottom.parent("tabx1",2)
Gui.F_Label_Est.gsfgLaborBottom.event(RowCellClick,MLGrid_Click)
Gui.F_Label_Est.gsfgLaborBottom.ContextMenuAttach("ctxLaborBottom")
Gui.F_Label_Est.gsfgLaborBottom.Event(CellValueChanged,gsfgLaborBottom_CellValueChanged)
Gui.F_Label_Est.gsfgLaborBottom.TabIndex(10008)
Gui.F_Label_Est.gsfgLaborBottom.AllowMouseWheel(False)
Gui.F_Label_Est.gsfgPricingInfo.create(GsGridControl)
Gui.F_Label_Est.gsfgPricingInfo.size(15570,3645)
Gui.F_Label_Est.gsfgPricingInfo.position(60,405)
Gui.F_Label_Est.gsfgPricingInfo.parent("tabx1",5)
Gui.F_Label_Est.gsfgPricingInfo.event(RowCellClick,gsfgpricinginfo_mousedown)
Gui.F_Label_Est.gsfgPricingInfo.event(CellValueChanged,gsfgpricinginfo_posttextmatrix)
Gui.F_Label_Est.gsfgPricingInfo.TabIndex(10010)
Gui.F_Label_Est.gsfgPricingInfo.AllowMouseWheel(False)
Gui.F_Label_Est.gsfgSummaryTop.create(GsGridControl)
Gui.F_Label_Est.gsfgSummaryTop.size(15615,5265)
Gui.F_Label_Est.gsfgSummaryTop.position(45,135)
Gui.F_Label_Est.gsfgSummaryTop.parent("tabx1",6)
Gui.F_Label_Est.gsfgSummaryTop.ContextMenuAttach("ctxSummaryTop")
Gui.F_Label_Est.gsfgSummaryTop.Event(CellValueChanged,gsfgSummaryTop_CellValueChanged)
Gui.F_Label_Est.gsfgSummaryTop.TabIndex(10011)
Gui.F_Label_Est.gsfgSummaryTop.AllowMouseWheel(False)
Gui.F_Label_Est.lbl25.create(label,"Labor and Material Sequences Summary",True,3060,255,1,15750,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl25.parent("tabx1",6)
Gui.F_Label_Est.lbl25.defaultvalue("")
Gui.F_Label_Est.gsfgHPrevEst.create(GsGridControl)
Gui.F_Label_Est.gsfgHPrevEst.size(15600,3870)
Gui.F_Label_Est.gsfgHPrevEst.position(45,60)
Gui.F_Label_Est.gsfgHPrevEst.parent("tabx1",0)
Gui.F_Label_Est.gsfgHPrevEst.event(RowCellClick,Prev_Click)
Gui.F_Label_Est.gsfgHPrevEst.ContextMenuAttach("ctxPrevEst")
Gui.F_Label_Est.gsfgHPrevEst.TabIndex(10003)
Gui.F_Label_Est.gsfgHPrevEst.AllowMouseWheel(False)
Gui.F_Label_Est.cmd19.create(button)
Gui.F_Label_Est.cmd19.caption("^")
Gui.F_Label_Est.cmd19.size(495,330)
Gui.F_Label_Est.cmd19.position(11325,245385)
Gui.F_Label_Est.cmd19.parent("tabx1",0)
Gui.F_Label_Est.cmd19.defaultvalue("")
Gui.F_Label_Est.cmdMAdd.create(button)
Gui.F_Label_Est.cmdMAdd.caption("Add")
Gui.F_Label_Est.cmdMAdd.size(705,300)
Gui.F_Label_Est.cmdMAdd.position(150,2190)
Gui.F_Label_Est.cmdMAdd.parent("tabx1",1)
Gui.F_Label_Est.cmdMAdd.event(Click,MaterialButtons)
Gui.F_Label_Est.cmdMAdd.defaultvalue("")
Gui.F_Label_Est.cmdMAdd.tabstop(True)
Gui.F_Label_Est.cmdMAdd.tabindex(317)
Gui.F_Label_Est.cmdMRemove.create(button)
Gui.F_Label_Est.cmdMRemove.caption("Remove")
Gui.F_Label_Est.cmdMRemove.size(900,300)
Gui.F_Label_Est.cmdMRemove.position(150,5100)
Gui.F_Label_Est.cmdMRemove.parent("tabx1",1)
Gui.F_Label_Est.cmdMRemove.event(Click,MaterialButtons)
Gui.F_Label_Est.cmdMRemove.defaultvalue("")
Gui.F_Label_Est.cmdMRemove.Visible(False)
Gui.F_Label_Est.lbl58.create(label,"Part",True,960,255,1,150,105,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl58.parent("tabx1",1)
Gui.F_Label_Est.lbl58.fontstyle(True,False,False,False,False)
Gui.F_Label_Est.lbl58.defaultvalue("")
Gui.F_Label_Est.lbl66.create(label,"Filter Material Grid",True,2550,240,1,15870,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl66.parent("tabx1",1)
Gui.F_Label_Est.lbl66.defaultvalue("")
Gui.F_Label_Est.cmd36.create(button)
Gui.F_Label_Est.cmd36.caption("Add")
Gui.F_Label_Est.cmd36.size(855,375)
Gui.F_Label_Est.cmd36.position(150,245385)
Gui.F_Label_Est.cmd36.parent("tabx1",2)
Gui.F_Label_Est.cmd36.defaultvalue("")
Gui.F_Label_Est.cmdLRemove.create(button)
Gui.F_Label_Est.cmdLRemove.caption("Remove")
Gui.F_Label_Est.cmdLRemove.size(900,300)
Gui.F_Label_Est.cmdLRemove.position(60,4515)
Gui.F_Label_Est.cmdLRemove.parent("tabx1",2)
Gui.F_Label_Est.cmdLRemove.event(Click,LaborButtons)
Gui.F_Label_Est.cmdLRemove.defaultvalue("")
Gui.F_Label_Est.cmdLRemove.Visible(False)
Gui.F_Label_Est.lbl109.create(label,"Workcenter",True,1515,255,1,75,45,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl109.parent("tabx1",2)
Gui.F_Label_Est.lbl109.fontstyle(True,False,False,False,False)
Gui.F_Label_Est.lbl109.defaultvalue("")
Gui.F_Label_Est.gsfgMaterialTop.create(GsGridControl)
Gui.F_Label_Est.gsfgMaterialTop.size(15495,645)
Gui.F_Label_Est.gsfgMaterialTop.position(150,1530)
Gui.F_Label_Est.gsfgMaterialTop.parent("tabx1",1)
Gui.F_Label_Est.gsfgMaterialTop.ContextMenuAttach("ctxMaterialTop")
Gui.F_Label_Est.gsfgMaterialTop.Event(CellValueChanged,gsfgMaterialTop_CellValueChanged)
Gui.F_Label_Est.gsfgMaterialTop.Event(RowCellClick,MLGrid_Click)
Gui.F_Label_Est.gsfgMaterialTop.TabIndex(10005)
Gui.F_Label_Est.gsfgMaterialTop.AllowMouseWheel(False)
Gui.F_Label_Est.txtMPart.create(textbox,"",True,1755,300,0,150,315,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMPart.parent("tabx1",1)
Gui.F_Label_Est.txtMPart.event(GotFocus,Focus)
Gui.F_Label_Est.txtMPart.maxLength(17)
Gui.F_Label_Est.txtMPart.defaultvalue("")
Gui.F_Label_Est.txtMPart.controlgroup(2)
Gui.F_Label_Est.txtMPart.tabstop(True)
Gui.F_Label_Est.txtMPart.tabindex(301)
Gui.F_Label_Est.txtMPartRev.create(textbox,"",True,450,300,0,1920,315,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMPartRev.parent("tabx1",1)
Gui.F_Label_Est.txtMPartRev.event(GotFocus,Focus)
Gui.F_Label_Est.txtMPartRev.maxLength(3)
Gui.F_Label_Est.txtMPartRev.defaultvalue("")
Gui.F_Label_Est.txtMPartRev.controlgroup(2)
Gui.F_Label_Est.txtMPartRev.tabstop(True)
Gui.F_Label_Est.txtMPartRev.tabindex(302)
Gui.F_Label_Est.cmdPart.create(button)
Gui.F_Label_Est.cmdPart.caption("^")
Gui.F_Label_Est.cmdPart.size(345,345)
Gui.F_Label_Est.cmdPart.position(2940,285)
Gui.F_Label_Est.cmdPart.parent("tabx1",1)
Gui.F_Label_Est.cmdPart.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdPart.defaultvalue("")
Gui.F_Label_Est.cmdPart.tabstop(True)
Gui.F_Label_Est.cmdPart.tabindex(304)
Gui.F_Label_Est.lbl79.create(label,"Description",True,1935,240,1,150,675,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl79.parent("tabx1",1)
Gui.F_Label_Est.lbl79.defaultvalue("")
Gui.F_Label_Est.txtMPartDesc.create(textbox,"",True,2835,300,0,150,870,False,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMPartDesc.parent("tabx1",1)
Gui.F_Label_Est.txtMPartDesc.maxLength(30)
Gui.F_Label_Est.txtMPartDesc.defaultvalue("")
Gui.F_Label_Est.txtMPartDesc.controlgroup(2)
Gui.F_Label_Est.txtLWC.create(textbox,"",True,1215,300,0,75,270,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtLWC.parent("tabx1",2)
Gui.F_Label_Est.txtLWC.event(GotFocus,Focus)
Gui.F_Label_Est.txtLWC.maxLength(20)
Gui.F_Label_Est.txtLWC.event(LostFocus,Lost_Focus_Browsers)
Gui.F_Label_Est.txtLWC.defaultvalue("")
Gui.F_Label_Est.txtLWC.controlgroup(2)
Gui.F_Label_Est.txtLWC.tabstop(True)
Gui.F_Label_Est.txtLWC.tabindex(401)
Gui.F_Label_Est.cmdWC.create(button)
Gui.F_Label_Est.cmdWC.caption("^")
Gui.F_Label_Est.cmdWC.size(345,345)
Gui.F_Label_Est.cmdWC.position(1305,255)
Gui.F_Label_Est.cmdWC.parent("tabx1",2)
Gui.F_Label_Est.cmdWC.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdWC.defaultvalue("")
Gui.F_Label_Est.cmdWC.tabstop(True)
Gui.F_Label_Est.cmdWC.tabindex(402)
Gui.F_Label_Est.gsfgLaborTop.create(GsGridControl)
Gui.F_Label_Est.gsfgLaborTop.size(11985,645)
Gui.F_Label_Est.gsfgLaborTop.position(45,690)
Gui.F_Label_Est.gsfgLaborTop.parent("tabx1",2)
Gui.F_Label_Est.gsfgLaborTop.ContextMenuAttach("ctxLaborTop")
Gui.F_Label_Est.gsfgLaborTop.event(RowCellClick,MLGrid_Click)
Gui.F_Label_Est.gsfgLaborTop.Event(CellValueChanged,gsfgLaborBottom_CellValueChanged)
Gui.F_Label_Est.gsfgLaborTop.TabIndex(10007)
Gui.F_Label_Est.gsfgLaborTop.AllowMouseWheel(False)
Gui.F_Label_Est.lbl56.create(label,"Description",True,2580,255,1,1695,45,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl56.parent("tabx1",2)
Gui.F_Label_Est.lbl56.fontstyle(True,False,False,False,False)
Gui.F_Label_Est.lbl56.defaultvalue("")
Gui.F_Label_Est.txtLWCDesc.create(textbox,"",True,2835,300,0,1695,285,False,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtLWCDesc.parent("tabx1",2)
Gui.F_Label_Est.txtLWCDesc.maxLength(30)
Gui.F_Label_Est.txtLWCDesc.defaultvalue("")
Gui.F_Label_Est.txtLWCDesc.controlgroup(2)
Gui.F_Label_Est.cmdLAdd.create(button)
Gui.F_Label_Est.cmdLAdd.caption("Add")
Gui.F_Label_Est.cmdLAdd.size(705,300)
Gui.F_Label_Est.cmdLAdd.position(45,1455)
Gui.F_Label_Est.cmdLAdd.parent("tabx1",2)
Gui.F_Label_Est.cmdLAdd.event(Click,LaborButtons)
Gui.F_Label_Est.cmdLAdd.defaultvalue("")
Gui.F_Label_Est.cmdLAdd.tabstop(True)
Gui.F_Label_Est.cmdLAdd.tabindex(403)
Gui.F_Label_Est.lbl57.create(label,"Check Selection(s)",True,2325,255,1,75,1905,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl57.parent("tabx1",2)
Gui.F_Label_Est.lbl57.defaultvalue("")
Gui.F_Label_Est.lbl60.create(label,"Part Information",True,1590,255,1,150,1260,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl60.parent("tabx1",1)
Gui.F_Label_Est.lbl60.fontstyle(True,False,False,False,False)
Gui.F_Label_Est.lbl60.defaultvalue("")
Gui.F_Label_Est.chkMCreateNonInv.create(checkbox)
Gui.F_Label_Est.chkMCreateNonInv.caption("Use Non-Inventory Part")
Gui.F_Label_Est.chkMCreateNonInv.size(2250,255)
Gui.F_Label_Est.chkMCreateNonInv.position(1845,1260)
Gui.F_Label_Est.chkMCreateNonInv.parent("tabx1",1)
Gui.F_Label_Est.chkMCreateNonInv.event(Click,MaterialButtons)
Gui.F_Label_Est.chkMCreateNonInv.defaultvalue("0")
Gui.F_Label_Est.chkMCreateNonInv.controlgroup(2)
Gui.F_Label_Est.chkMCreateNonInv.TabStop(True)
Gui.F_Label_Est.chkMCreateNonInv.TabIndex(316)
Gui.F_Label_Est.cmdMClear.create(button)
Gui.F_Label_Est.cmdMClear.caption("Clear")
Gui.F_Label_Est.cmdMClear.size(705,300)
Gui.F_Label_Est.cmdMClear.position(885,2190)
Gui.F_Label_Est.cmdMClear.parent("tabx1",1)
Gui.F_Label_Est.cmdMClear.event(Click,MaterialButtons)
Gui.F_Label_Est.cmdMClear.defaultvalue("")
Gui.F_Label_Est.cmdMClear.tabstop(True)
Gui.F_Label_Est.cmdMClear.tabindex(318)
Gui.F_Label_Est.ddlMView.create(dropdownlist)
Gui.F_Label_Est.ddlMView.size(2550,330)
Gui.F_Label_Est.ddlMView.position(15870,435)
Gui.F_Label_Est.ddlMView.parent("tabx1",1)
Gui.F_Label_Est.ddlMView.event(Click,MaterialButtons)
Gui.F_Label_Est.ddlMView.defaultvalue("All")
Gui.F_Label_Est.ddlMView.controlgroup(2)
Gui.F_Label_Est.cmdLClear.create(button)
Gui.F_Label_Est.cmdLClear.caption("Clear")
Gui.F_Label_Est.cmdLClear.size(795,300)
Gui.F_Label_Est.cmdLClear.position(825,1455)
Gui.F_Label_Est.cmdLClear.parent("tabx1",2)
Gui.F_Label_Est.cmdLClear.event(Click,LaborButtons)
Gui.F_Label_Est.cmdLClear.defaultvalue("")
Gui.F_Label_Est.cmdLClear.tabstop(True)
Gui.F_Label_Est.cmdLClear.tabindex(404)
Gui.F_Label_Est.gsfgSummaryBottom.create(GsGridControl)
Gui.F_Label_Est.gsfgSummaryBottom.visible(False)
Gui.F_Label_Est.gsfgSummaryBottom.size(3315,1200)
Gui.F_Label_Est.gsfgSummaryBottom.position(15750,440)
Gui.F_Label_Est.gsfgSummaryBottom.parent("tabx1",6)
Gui.F_Label_Est.gsfgSummaryBottom.AllowMouseWheel(False)
Gui.F_Label_Est.cmdPPrice.create(button)
Gui.F_Label_Est.cmdPPrice.caption("Refresh")
Gui.F_Label_Est.cmdPPrice.size(900,300)
Gui.F_Label_Est.cmdPPrice.position(45,45)
Gui.F_Label_Est.cmdPPrice.parent("tabx1",5)
Gui.F_Label_Est.cmdPPrice.event(Click,PricingTab)
Gui.F_Label_Est.cmdPPrice.defaultvalue("")
Gui.F_Label_Est.cmdPPrice.TabStop(True)
Gui.F_Label_Est.cmdPPrice.TabIndex(701)
Gui.F_Label_Est.cmdMCopy.create(button)
Gui.F_Label_Est.cmdMCopy.caption("Copy")
Gui.F_Label_Est.cmdMCopy.size(600,300)
Gui.F_Label_Est.cmdMCopy.position(1155,5100)
Gui.F_Label_Est.cmdMCopy.parent("tabx1",1)
Gui.F_Label_Est.cmdMCopy.event(Click,MaterialButtons)
Gui.F_Label_Est.cmdMCopy.defaultvalue("")
Gui.F_Label_Est.cmdMCopy.Visible(False)
Gui.F_Label_Est.cmdLCopy.create(button)
Gui.F_Label_Est.cmdLCopy.caption("Copy")
Gui.F_Label_Est.cmdLCopy.size(600,300)
Gui.F_Label_Est.cmdLCopy.position(1065,4515)
Gui.F_Label_Est.cmdLCopy.parent("tabx1",2)
Gui.F_Label_Est.cmdLCopy.event(Click,LaborButtons)
Gui.F_Label_Est.cmdLCopy.defaultvalue("")
Gui.F_Label_Est.cmdLCopy.Visible(False)
Gui.F_Label_Est.gsflexgridLHRQ.create(GsGridControl)
Gui.F_Label_Est.gsflexgridLHRQ.size(2655,2340)
Gui.F_Label_Est.gsflexgridLHRQ.position(12975,2145)
Gui.F_Label_Est.gsflexgridLHRQ.parent("tabx1",2)
Gui.F_Label_Est.gsflexgridLHRQ.TabIndex(10009)
Gui.F_Label_Est.dropdownlistLHRQ.create(dropdownlist)
Gui.F_Label_Est.dropdownlistLHRQ.size(1650,330)
Gui.F_Label_Est.dropdownlistLHRQ.position(12975,1755)
Gui.F_Label_Est.dropdownlistLHRQ.parent("tabx1",2)
Gui.F_Label_Est.dropdownlistLHRQ.event(Click,dropdownlistlhrq_change)
Gui.F_Label_Est.dropdownlistLHRQ.defaultvalue("")
Gui.F_Label_Est.dropdownlistLHRQ.TabStop(True)
Gui.F_Label_Est.dropdownlistLHRQ.TabIndex(405)
Gui.F_Label_Est.lblLHRQ.create(label,"Press Hrs./Run Qty",True,2205,255,1,13005,1515,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblLHRQ.parent("tabx1",2)
Gui.F_Label_Est.lblLHRQ.defaultvalue("")
Gui.F_Label_Est.txtMatLoc.create(textbox,"",True,480,300,0,2430,315,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtMatLoc.parent("tabx1",1)
Gui.F_Label_Est.txtMatLoc.event(LostFocus,Lost_Focus_Browsers)
Gui.F_Label_Est.txtMatLoc.defaultvalue("")
Gui.F_Label_Est.txtMatLoc.tabstop(True)
Gui.F_Label_Est.txtMatLoc.tabindex(303)
Gui.F_Label_Est.lbl_txtMatLoc.create(label,"Loc",True,465,255,1,2475,110,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl_txtMatLoc.parent("tabx1",1)
Gui.F_Label_Est.lbl_txtMatLoc.fontstyle(True,False,False,False,False)
Gui.F_Label_Est.lbl_txtMatLoc.defaultvalue("")
Gui.F_Label_Est.txtMatRev.create(label,"Rev",True,390,255,1,1920,105,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.txtMatRev.parent("tabx1",1)
Gui.F_Label_Est.txtMatRev.fontstyle(True,False,False,False,False)
Gui.F_Label_Est.txtMatRev.defaultvalue("")
Gui.F_Label_Est.txtSelectedEstNote.create(textboxm)
Gui.F_Label_Est.txtSelectedEstNote.size(6315,1185)
Gui.F_Label_Est.txtSelectedEstNote.position(9315,4245)
Gui.F_Label_Est.txtSelectedEstNote.parent("tabx1",0)
Gui.F_Label_Est.txtSelectedEstNote.defaultvalue("")
Gui.F_Label_Est.txtSelectedEstNote.TabIndex(10004)
Gui.F_Label_Est.lblSelectedNote.create(label,"Selected Estimate # Notes",True,2190,255,1,9315,4035,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblSelectedNote.parent("tabx1",0)
Gui.F_Label_Est.lblSelectedNote.defaultvalue("")
Gui.F_Label_Est.gfsgSummaryBottom.create(GsGridControl)
Gui.F_Label_Est.gfsgSummaryBottom.size(14805,645)
Gui.F_Label_Est.gfsgSummaryBottom.position(10005,10005)
Gui.F_Label_Est.gfsgSummaryBottom.parent("tabx1",6)
Gui.F_Label_Est.gfsgSummaryBottom.Visible(False)
Gui.F_Label_Est.txtSumOpCode.create(textbox,"",False,1620,300,0,10005,10005,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtSumOpCode.parent("tabx1",6)
Gui.F_Label_Est.txtSumOpCode.defaultvalue("")
Gui.F_Label_Est.txtSumOPDesc.create(textbox,"",False,3585,300,0,10005,10005,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtSumOPDesc.parent("tabx1",6)
Gui.F_Label_Est.txtSumOPDesc.defaultvalue("")
Gui.F_Label_Est.cmdSumOpCode.create(button)
Gui.F_Label_Est.cmdSumOpCode.caption("^")
Gui.F_Label_Est.cmdSumOpCode.size(345,345)
Gui.F_Label_Est.cmdSumOpCode.position(10005,10005)
Gui.F_Label_Est.cmdSumOpCode.parent("tabx1",6)
Gui.F_Label_Est.cmdSumOpCode.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdSumOpCode.defaultvalue("")
Gui.F_Label_Est.cmdSumOpCode.Visible(False)
Gui.F_Label_Est.lblSumOpCode.create(label,"OP Code",False,1260,240,1,10005,10005,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblSumOpCode.parent("tabx1",6)
Gui.F_Label_Est.lblSumOpCode.defaultvalue("")
Gui.F_Label_Est.lblOpCodeDesc.create(label,"OP Code Description",False,1935,240,1,10005,10005,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblOpCodeDesc.parent("tabx1",6)
Gui.F_Label_Est.lblOpCodeDesc.defaultvalue("")
Gui.F_Label_Est.txtSumOpVend.create(textbox,"",False,1620,300,0,10005,10005,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtSumOpVend.parent("tabx1",6)
Gui.F_Label_Est.txtSumOpVend.defaultvalue("")
Gui.F_Label_Est.cmdSumOPVend.create(button)
Gui.F_Label_Est.cmdSumOPVend.caption("^")
Gui.F_Label_Est.cmdSumOPVend.size(345,345)
Gui.F_Label_Est.cmdSumOPVend.position(10005,10005)
Gui.F_Label_Est.cmdSumOPVend.parent("tabx1",6)
Gui.F_Label_Est.cmdSumOPVend.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdSumOPVend.defaultvalue("")
Gui.F_Label_Est.cmdSumOPVend.Visible(False)
Gui.F_Label_Est.cmdSumOpAdd.create(button)
Gui.F_Label_Est.cmdSumOpAdd.caption("Add")
Gui.F_Label_Est.cmdSumOpAdd.size(705,300)
Gui.F_Label_Est.cmdSumOpAdd.position(10005,10005)
Gui.F_Label_Est.cmdSumOpAdd.parent("tabx1",6)
Gui.F_Label_Est.cmdSumOpAdd.event(Click,SummaryButtons)
Gui.F_Label_Est.cmdSumOpAdd.defaultvalue("")
Gui.F_Label_Est.cmdSumOpAdd.Visible(False)
Gui.F_Label_Est.cmdSumOpClear.create(button)
Gui.F_Label_Est.cmdSumOpClear.caption("Clear")
Gui.F_Label_Est.cmdSumOpClear.size(705,300)
Gui.F_Label_Est.cmdSumOpClear.position(10005,10005)
Gui.F_Label_Est.cmdSumOpClear.parent("tabx1",6)
Gui.F_Label_Est.cmdSumOpClear.event(Click,SummaryButtons)
Gui.F_Label_Est.cmdSumOpClear.defaultvalue("")
Gui.F_Label_Est.cmdSumOpClear.Visible(False)
Gui.F_Label_Est.lblSupOpVend.create(label,"Vendor",False,1935,240,1,10005,10005,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblSupOpVend.parent("tabx1",6)
Gui.F_Label_Est.lblSupOpVend.defaultvalue("")
Gui.F_Label_Est.cmdSumOPDelete.create(button)
Gui.F_Label_Est.cmdSumOPDelete.caption("Delete")
Gui.F_Label_Est.cmdSumOPDelete.size(705,300)
Gui.F_Label_Est.cmdSumOPDelete.position(10005,10005)
Gui.F_Label_Est.cmdSumOPDelete.parent("tabx1",6)
Gui.F_Label_Est.cmdSumOPDelete.event(Click,SummaryButtons)
Gui.F_Label_Est.cmdSumOPDelete.defaultvalue("")
Gui.F_Label_Est.cmdSumOPDelete.Visible(False)
Gui.F_Label_Est.chkMUseFilter.create(checkbox)
Gui.F_Label_Est.chkMUseFilter.caption("Use Tooling Filter")
Gui.F_Label_Est.chkMUseFilter.size(1935,255)
Gui.F_Label_Est.chkMUseFilter.position(4350,1260)
Gui.F_Label_Est.chkMUseFilter.parent("tabx1",1)
Gui.F_Label_Est.chkMUseFilter.event(Click,Label_Info_Lost_Focus)
Gui.F_Label_Est.chkMUseFilter.defaultvalue("")
Gui.F_Label_Est.chkMUseFilter.Visible(False)
Gui.F_Label_Est.lbldiecharge.Create(Label,"Die Charge",True,1215,255,0,60,4290,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbldiecharge.parent("tabx1",5)
Gui.F_Label_Est.txtPDieCharge.Create(TextBox,"",True,1215,300,0,60,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPDieCharge.parent("tabx1",5)
Gui.F_Label_Est.txtPDieCharge.NumericOnly(1)
Gui.F_Label_Est.txtPDieCharge.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPDieCharge.TabStop(True)
Gui.F_Label_Est.txtPDieCharge.TabIndex(702)
Gui.F_Label_Est.lblplatecharge.Create(Label,"Plate Charge",True,1215,255,0,2610,4290,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lblplatecharge.parent("tabx1",5)
Gui.F_Label_Est.txtPPlateCharge.Create(TextBox,"",True,1215,300,0,2610,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPPlateCharge.parent("tabx1",5)
Gui.F_Label_Est.txtPPlateCharge.NumericOnly(1)
Gui.F_Label_Est.txtPPlateCharge.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPPlateCharge.TabStop(True)
Gui.F_Label_Est.txtPPlateCharge.TabIndex(704)
Gui.F_Label_Est.lblproofcharge.Create(Label,"Artwork/Proof Charge",True,1215,360,0,8985,4185,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lblproofcharge.parent("tabx1",5)
Gui.F_Label_Est.txtPProofCharge.Create(TextBox,"",True,1215,300,0,8985,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPProofCharge.parent("tabx1",5)
Gui.F_Label_Est.txtPProofCharge.NumericOnly(1)
Gui.F_Label_Est.txtPProofCharge.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPProofCharge.TabStop(True)
Gui.F_Label_Est.txtPProofCharge.TabIndex(709)
Gui.F_Label_Est.chkRolls.create(checkbox)
Gui.F_Label_Est.chkRolls.caption("Rolls")
Gui.F_Label_Est.chkRolls.parent("tabx1",3)
Gui.F_Label_Est.chkRolls.size(795,255)
Gui.F_Label_Est.chkRolls.position(195,195)
Gui.F_Label_Est.chkRolls.defaultvalue("")
Gui.F_Label_Est.chkRolls.TabStop(True)
Gui.F_Label_Est.chkRolls.TabIndex(501)
Gui.F_Label_Est.chkRolls.Event(Click,PackagingChkbox)
Gui.F_Label_Est.lbl666.create(label,"Core Size",True,1005,255,1,360,525,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl666.parent("tabx1",3)
Gui.F_Label_Est.lbl666.defaultvalue("")
Gui.F_Label_Est.txtRCoreSize.create(textbox,"",True,1005,300,0,360,720,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtRCoreSize.parent("tabx1",3)
Gui.F_Label_Est.txtRCoreSize.event(GotFocus,Focus)
Gui.F_Label_Est.txtRCoreSize.defaultvalue("")
Gui.F_Label_Est.txtRCoreSize.tabstop(True)
Gui.F_Label_Est.txtRCoreSize.tabindex(502)
Gui.F_Label_Est.txtRCoreSize.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtRCoreSize.NumericOnly(1)
Gui.F_Label_Est.lbl667.create(label,"Labels/Roll",True,1005,255,1,360,1110,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl667.parent("tabx1",3)
Gui.F_Label_Est.lbl667.defaultvalue("")
Gui.F_Label_Est.txtRLblRoll.create(textbox,"",True,1005,300,0,360,1335,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtRLblRoll.parent("tabx1",3)
Gui.F_Label_Est.txtRLblRoll.event(GotFocus,Focus)
Gui.F_Label_Est.txtRLblRoll.defaultvalue("")
Gui.F_Label_Est.txtRLblRoll.tabstop(True)
Gui.F_Label_Est.txtRLblRoll.tabindex(503)
Gui.F_Label_Est.txtRLblRoll.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtRLblRoll.NumericOnly(1)
Gui.F_Label_Est.lbl668.create(label,"Roll OD",True,1005,255,1,360,2310,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl668.parent("tabx1",3)
Gui.F_Label_Est.lbl668.defaultvalue("")
Gui.F_Label_Est.txtRRollOD.create(textbox,"",True,1005,300,0,360,2520,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtRRollOD.parent("tabx1",3)
Gui.F_Label_Est.txtRRollOD.event(GotFocus,Focus)
Gui.F_Label_Est.txtRRollOD.defaultvalue("")
Gui.F_Label_Est.txtRRollOD.tabstop(True)
Gui.F_Label_Est.txtRRollOD.tabindex(505)
Gui.F_Label_Est.txtRRollOD.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtRRollOD.NumericOnly(1)
Gui.F_Label_Est.lbl669.create(label,"Rolls/Box",True,1005,255,1,360,1725,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl669.parent("tabx1",3)
Gui.F_Label_Est.lbl669.defaultvalue("")
Gui.F_Label_Est.txtRRollBox.create(textbox,"",True,1005,300,0,360,1935,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtRRollBox.parent("tabx1",3)
Gui.F_Label_Est.txtRRollBox.event(GotFocus,Focus)
Gui.F_Label_Est.txtRRollBox.defaultvalue("")
Gui.F_Label_Est.txtRRollBox.tabstop(True)
Gui.F_Label_Est.txtRRollBox.tabindex(504)
Gui.F_Label_Est.txtRRollBox.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtRRollBox.NumericOnly(1)
Gui.F_Label_Est.lbl670.create(label,"Lbs/Carton",True,1095,255,1,1860,3465,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl670.parent("tabx1",3)
Gui.F_Label_Est.lbl670.defaultvalue("")
Gui.F_Label_Est.txtLbsCart.create(textbox,"",True,840,300,0,1860,3660,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtLbsCart.parent("tabx1",3)
Gui.F_Label_Est.txtLbsCart.event(GotFocus,Focus)
Gui.F_Label_Est.txtLbsCart.defaultvalue("")
Gui.F_Label_Est.txtLbsCart.tabstop(True)
Gui.F_Label_Est.txtLbsCart.tabindex(512)
Gui.F_Label_Est.txtLbsCart.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtLbsCart.NumericOnly(1)
Gui.F_Label_Est.chkFanfold.create(checkbox)
Gui.F_Label_Est.chkFanfold.parent("tabx1",3)
Gui.F_Label_Est.chkFanfold.caption("Fanfold")
Gui.F_Label_Est.chkFanfold.size(990,255)
Gui.F_Label_Est.chkFanfold.position(1695,195)
Gui.F_Label_Est.chkFanfold.defaultvalue("")
Gui.F_Label_Est.chkFanfold.TabStop(True)
Gui.F_Label_Est.chkFanfold.TabIndex(508)
Gui.F_Label_Est.chkFanfold.Event(Click,PackagingChkbox)
Gui.F_Label_Est.lbl671.create(label,"Labels/Fold",True,1000,255,1,1860,530,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl671.parent("tabx1",3)
Gui.F_Label_Est.lbl671.defaultvalue("")
Gui.F_Label_Est.txtFLblFold.create(textbox,"",True,1005,300,0,1860,720,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtFLblFold.parent("tabx1",3)
Gui.F_Label_Est.txtFLblFold.event(GotFocus,Focus)
Gui.F_Label_Est.txtFLblFold.defaultvalue("")
Gui.F_Label_Est.txtFLblFold.tabstop(True)
Gui.F_Label_Est.txtFLblFold.tabindex(509)
Gui.F_Label_Est.txtFLblFold.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtFLblFold.NumericOnly(1)
Gui.F_Label_Est.lbl672.create(label,"Labels/Stack",True,1005,255,1,1860,1110,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl672.parent("tabx1",3)
Gui.F_Label_Est.lbl672.defaultvalue("")
Gui.F_Label_Est.txtFLblStack.create(textbox,"",True,1005,300,0,1860,1335,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtFLblStack.parent("tabx1",3)
Gui.F_Label_Est.txtFLblStack.event(GotFocus,Focus)
Gui.F_Label_Est.txtFLblStack.defaultvalue("")
Gui.F_Label_Est.txtFLblStack.tabstop(True)
Gui.F_Label_Est.txtFLblStack.tabindex(510)
Gui.F_Label_Est.txtFLblStack.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtFLblStack.NumericOnly(1)
Gui.F_Label_Est.lbl673.create(label,"Stacks/Box",True,1005,255,1,1860,1725,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl673.parent("tabx1",3)
Gui.F_Label_Est.lbl673.defaultvalue("")
Gui.F_Label_Est.txtFStackBox.create(textbox,"",True,1005,300,0,1860,1935,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtFStackBox.parent("tabx1",3)
Gui.F_Label_Est.txtFStackBox.event(GotFocus,Focus)
Gui.F_Label_Est.txtFStackBox.defaultvalue("")
Gui.F_Label_Est.txtFStackBox.tabstop(True)
Gui.F_Label_Est.txtFStackBox.tabindex(511)
Gui.F_Label_Est.txtFStackBox.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtFStackBox.NumericOnly(1)
Gui.F_Label_Est.lbl674.create(label,"Roll OD Actual",True,1545,255,1,360,2880,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl674.parent("tabx1",3)
Gui.F_Label_Est.lbl674.defaultvalue("")
Gui.F_Label_Est.txtRODAct.create(textbox,"",True,1005,300,0,360,3090,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtRODAct.parent("tabx1",3)
Gui.F_Label_Est.txtRODAct.event(GotFocus,Focus)
Gui.F_Label_Est.txtRODAct.defaultvalue("")
Gui.F_Label_Est.txtRODAct.tabstop(True)
Gui.F_Label_Est.txtRODAct.tabindex(506)
Gui.F_Label_Est.txtRODAct.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtRODAct.NumericOnly(1)
Gui.F_Label_Est.chkSheets.create(checkbox)
Gui.F_Label_Est.chkSheets.parent("tabx1",3)
Gui.F_Label_Est.chkSheets.caption("Sheets")
Gui.F_Label_Est.chkSheets.size(1020,255)
Gui.F_Label_Est.chkSheets.position(3285,195)
Gui.F_Label_Est.chkSheets.defaultvalue("")
Gui.F_Label_Est.chkSheets.TabStop(True)
Gui.F_Label_Est.chkSheets.TabIndex(513)
Gui.F_Label_Est.chkSheets.Event(Click,PackagingChkbox)
Gui.F_Label_Est.lbl675.create(label,"Labels/Sheet",True,1200,255,1,3450,525,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl675.parent("tabx1",3)
Gui.F_Label_Est.lbl675.defaultvalue("")
Gui.F_Label_Est.txtSLblSheet.create(textbox,"",True,1005,300,0,3450,720,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtSLblSheet.parent("tabx1",3)
Gui.F_Label_Est.txtSLblSheet.event(GotFocus,Focus)
Gui.F_Label_Est.txtSLblSheet.defaultvalue("")
Gui.F_Label_Est.txtSLblSheet.tabstop(True)
Gui.F_Label_Est.txtSLblSheet.tabindex(514)
Gui.F_Label_Est.txtSLblSheet.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtSLblSheet.NumericOnly(1)
Gui.F_Label_Est.lbl676.create(label,"Sheets/Stack",True,1215,255,1,3450,1110,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl676.parent("tabx1",3)
Gui.F_Label_Est.lbl676.defaultvalue("")
Gui.F_Label_Est.txtSSheetStack.create(textbox,"",True,1005,300,0,3450,1335,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtSSheetStack.parent("tabx1",3)
Gui.F_Label_Est.txtSSheetStack.event(GotFocus,Focus)
Gui.F_Label_Est.txtSSheetStack.defaultvalue("")
Gui.F_Label_Est.txtSSheetStack.tabstop(True)
Gui.F_Label_Est.txtSSheetStack.tabindex(515)
Gui.F_Label_Est.txtSSheetStack.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtSSheetStack.NumericOnly(1)
Gui.F_Label_Est.lbl677.create(label,"Stacks/Box",True,1005,255,1,3450,1725,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl677.parent("tabx1",3)
Gui.F_Label_Est.lbl677.defaultvalue("")
Gui.F_Label_Est.txtSStackBox.Create(TextBox,"",True,1005,300,0,3450,1935,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtSStackBox.parent("tabx1",3)
Gui.F_Label_Est.txtSStackBox.Event(GotFocus,Focus)
Gui.F_Label_Est.txtSStackBox.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtSStackBox.TabStop(True)
Gui.F_Label_Est.txtSStackBox.TabIndex(516)
Gui.F_Label_Est.txtSStackBox.NumericOnly(1)
Gui.F_Label_Est.lbl678.Create(Label,"Wind Direction",True,1275,255,0,360,3465,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl678.parent("tabx1",3)
Gui.F_Label_Est.ddlRWindDir.Create(DropDownList)
Gui.F_Label_Est.ddlRWindDir.parent("tabx1",3)
Gui.F_Label_Est.ddlRWindDir.Size(1095,330)
Gui.F_Label_Est.ddlRWindDir.Position(360,3660)
Gui.F_Label_Est.ddlRWindDir.TabStop(True)
Gui.F_Label_Est.ddlRWindDir.TabIndex(507)
Gui.F_Label_Est.chkOPinfeed.Create(CheckBox)
Gui.F_Label_Est.chkOPinfeed.Size(1125,360)
Gui.F_Label_Est.chkOPinfeed.Position(4875,195)
Gui.F_Label_Est.chkOPinfeed.parent("tabx1",4)
Gui.F_Label_Est.chkOPinfeed.Caption("Pinfeeds")
Gui.F_Label_Est.chkOPinfeed.TabStop(True)
Gui.F_Label_Est.chkOPinfeed.TabIndex(609)
Gui.F_Label_Est.chkOPerfed.Create(CheckBox)
Gui.F_Label_Est.chkOPerfed.Size(1050,360)
Gui.F_Label_Est.chkOPerfed.Position(4875,585)
Gui.F_Label_Est.chkOPerfed.parent("tabx1",4)
Gui.F_Label_Est.chkOPerfed.Caption("Perfed")
Gui.F_Label_Est.chkOPerfed.TabStop(True)
Gui.F_Label_Est.chkOPerfed.TabIndex(610)
Gui.F_Label_Est.chkOAutoApplied.Create(CheckBox)
Gui.F_Label_Est.chkOAutoApplied.Size(1560,360)
Gui.F_Label_Est.chkOAutoApplied.Position(4875,975)
Gui.F_Label_Est.chkOAutoApplied.parent("tabx1",4)
Gui.F_Label_Est.chkOAutoApplied.Caption("Auto Applied")
Gui.F_Label_Est.chkOAutoApplied.TabStop(True)
Gui.F_Label_Est.chkOAutoApplied.TabIndex(611)
Gui.F_Label_Est.chkOAirEject.Create(CheckBox)
Gui.F_Label_Est.chkOAirEject.Size(1560,360)
Gui.F_Label_Est.chkOAirEject.Position(4875,1365)
Gui.F_Label_Est.chkOAirEject.parent("tabx1",4)
Gui.F_Label_Est.chkOAirEject.Caption("Air Eject Holes")
Gui.F_Label_Est.chkOAirEject.TabStop(True)
Gui.F_Label_Est.chkOAirEject.TabIndex(612)
Gui.F_Label_Est.txtOFaceCut.Create(TextBox,"",True,2475,300,0,105,315,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOFaceCut.parent("tabx1",4)
Gui.F_Label_Est.txtOFaceCut.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOFaceCut.TabStop(True)
Gui.F_Label_Est.txtOFaceCut.TabIndex(601)
Gui.F_Label_Est.txtOFaceCut.MaxLength(500)
Gui.F_Label_Est.lbl4.Create(Label,"Face Cut Desc",True,1350,255,0,105,105,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl4.parent("tabx1",4)
Gui.F_Label_Est.lbl7.Create(Label,"Back Cut Desc",True,1350,255,0,105,675,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl7.parent("tabx1",4)
Gui.F_Label_Est.txtOBackCut.Create(TextBox,"",True,2490,300,0,105,885,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOBackCut.parent("tabx1",4)
Gui.F_Label_Est.txtOBackCut.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOBackCut.TabStop(True)
Gui.F_Label_Est.txtOBackCut.TabIndex(602)
Gui.F_Label_Est.txtOBackCut.MaxLength(500)
Gui.F_Label_Est.lbl8.Create(Label,"Shape",True,675,255,0,105,1245,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl8.parent("tabx1",4)
Gui.F_Label_Est.txtOShape.Create(TextBox,"",True,1215,300,0,105,1455,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOShape.parent("tabx1",4)
Gui.F_Label_Est.txtOShape.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOShape.TabStop(True)
Gui.F_Label_Est.txtOShape.TabIndex(603)
Gui.F_Label_Est.txtOShape.MaxLength(50)
Gui.F_Label_Est.lbl18.Create(Label,"Ink Type",True,945,255,0,105,1815,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl18.parent("tabx1",4)
Gui.F_Label_Est.txtOInkType.Create(TextBox,"",True,1215,300,0,105,2025,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOInkType.parent("tabx1",4)
Gui.F_Label_Est.txtOInkType.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOInkType.TabStop(True)
Gui.F_Label_Est.txtOInkType.TabIndex(604)
Gui.F_Label_Est.txtOInkType.MaxLength(50)
Gui.F_Label_Est.lbl19.Create(Label,"% Coverage",True,1185,255,0,105,2385,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl19.parent("tabx1",4)
Gui.F_Label_Est.txtOInkCoverage.Create(TextBox,"",True,1215,300,0,105,2595,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOInkCoverage.parent("tabx1",4)
Gui.F_Label_Est.txtOInkCoverage.NumericOnly(1)
Gui.F_Label_Est.txtOInkCoverage.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOInkCoverage.TabStop(True)
Gui.F_Label_Est.txtOInkCoverage.TabIndex(605)
Gui.F_Label_Est.lbl20.Create(Label,"Varnish Type",True,1320,255,0,105,2955,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl20.parent("tabx1",4)
Gui.F_Label_Est.txtOVarnType.Create(TextBox,"",True,1215,300,0,105,3165,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOVarnType.parent("tabx1",4)
Gui.F_Label_Est.txtOVarnType.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOVarnType.TabStop(True)
Gui.F_Label_Est.txtOVarnType.TabIndex(606)
Gui.F_Label_Est.txtOVarnType.MaxLength(50)
Gui.F_Label_Est.lbl21.Create(Label,"% Coverage",True,1185,255,0,105,3525,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl21.parent("tabx1",4)
Gui.F_Label_Est.txtOVarnCoverage.Create(TextBox,"",True,1215,300,0,105,3735,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOVarnCoverage.parent("tabx1",4)
Gui.F_Label_Est.txtOVarnCoverage.NumericOnly(1)
Gui.F_Label_Est.txtOVarnCoverage.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOVarnCoverage.TabStop(True)
Gui.F_Label_Est.txtOVarnCoverage.TabIndex(607)
Gui.F_Label_Est.lbl22.Create(Label,"Variable Print Desc",True,1680,255,0,105,4095,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl22.parent("tabx1",4)
Gui.F_Label_Est.txtOVarPrint.Create(TextBox,"",True,2490,300,0,105,4305,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOVarPrint.parent("tabx1",4)
Gui.F_Label_Est.txtOVarPrint.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOVarPrint.TabStop(True)
Gui.F_Label_Est.txtOVarPrint.TabIndex(608)
Gui.F_Label_Est.txtOVarPrint.MaxLength(500)
Gui.F_Label_Est.lbl23.Create(Label,"Extra Color Changes",False,1785,255,0,105,4665,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl23.parent("tabx1",4)
Gui.F_Label_Est.txtOExtraColor.Create(TextBox,"",False,1215,300,0,105,4875,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOExtraColor.parent("tabx1",4)
Gui.F_Label_Est.txtOExtraColor.NumericOnly(True)
Gui.F_Label_Est.lbl24.Create(Label,"Total # Plates",True,1215,255,0,1335,4290,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl24.parent("tabx1",5)
Gui.F_Label_Est.txtOTotalPlates.Create(TextBox,"",True,1215,300,0,1335,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOTotalPlates.parent("tabx1",5)
Gui.F_Label_Est.txtOTotalPlates.NumericOnly(1)
Gui.F_Label_Est.txtOTotalPlates.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOTotalPlates.TabStop(True)
Gui.F_Label_Est.txtOTotalPlates.TabIndex(703)
Gui.F_Label_Est.chkOFourColor.Create(CheckBox)
Gui.F_Label_Est.chkOFourColor.Size(2175,360)
Gui.F_Label_Est.chkOFourColor.Position(9180,1890)
Gui.F_Label_Est.chkOFourColor.parent("tabx1",4)
Gui.F_Label_Est.chkOFourColor.Caption("4-Color Process Printed")
Gui.F_Label_Est.chkOFourColor.DefaultValue("")
Gui.F_Label_Est.chkOFourColor.Visible(False)
Gui.F_Label_Est.chkODeadened.Create(CheckBox)
Gui.F_Label_Est.chkODeadened.Size(2055,330)
Gui.F_Label_Est.chkODeadened.Position(4875,3315)
Gui.F_Label_Est.chkODeadened.parent("tabx1",4)
Gui.F_Label_Est.chkODeadened.Caption("Deadened Adhesive")
Gui.F_Label_Est.chkODeadened.TabStop(True)
Gui.F_Label_Est.chkODeadened.TabIndex(617)
Gui.F_Label_Est.lbl26.Create(Label,"Pounds Per M Label",True,1725,255,0,3450,3465,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl26.parent("tabx1",3)
Gui.F_Label_Est.txtOLbsMLabel.Create(TextBox,"",True,1215,300,0,3450,3660,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOLbsMLabel.parent("tabx1",3)
Gui.F_Label_Est.txtOLbsMLabel.NumericOnly(1)
Gui.F_Label_Est.txtOLbsMLabel.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOLbsMLabel.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtOLbsMLabel.TabStop(True)
Gui.F_Label_Est.txtOLbsMLabel.TabIndex(517)
Gui.F_Label_Est.lbl27.Create(Label,"Pounds Per Carton",False,1620,255,0,4965,4155,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl27.parent("tabx1",3)
Gui.F_Label_Est.txtOLbsCarton.Create(TextBox,"",False,1215,300,0,4965,4365,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOLbsCarton.parent("tabx1",3)
Gui.F_Label_Est.txtOLbsCarton.NumericOnly(True)
Gui.F_Label_Est.chkOLabeling.Create(CheckBox)
Gui.F_Label_Est.chkOLabeling.Size(1185,360)
Gui.F_Label_Est.chkOLabeling.Position(4875,1755)
Gui.F_Label_Est.chkOLabeling.parent("tabx1",4)
Gui.F_Label_Est.chkOLabeling.Caption("Labeling")
Gui.F_Label_Est.chkOLabeling.TabStop(True)
Gui.F_Label_Est.chkOLabeling.TabIndex(613)
Gui.F_Label_Est.chkORibbons.Create(CheckBox)
Gui.F_Label_Est.chkORibbons.Size(1170,360)
Gui.F_Label_Est.chkORibbons.Position(7560,165)
Gui.F_Label_Est.chkORibbons.parent("tabx1",3)
Gui.F_Label_Est.chkORibbons.Caption("Ribbons")
Gui.F_Label_Est.chkORibbons.TabStop(True)
Gui.F_Label_Est.chkORibbons.TabIndex(520)
Gui.F_Label_Est.chkORibbonSource.Create(CheckBox)
Gui.F_Label_Est.chkORibbonSource.Size(1560,360)
Gui.F_Label_Est.chkORibbonSource.Position(4875,2145)
Gui.F_Label_Est.chkORibbonSource.parent("tabx1",4)
Gui.F_Label_Est.chkORibbonSource.Caption("Ribbon Source")
Gui.F_Label_Est.chkORibbonSource.TabStop(True)
Gui.F_Label_Est.chkORibbonSource.TabIndex(614)
Gui.F_Label_Est.chkOMisc.Create(CheckBox)
Gui.F_Label_Est.chkOMisc.Size(1485,360)
Gui.F_Label_Est.chkOMisc.Position(4875,2535)
Gui.F_Label_Est.chkOMisc.parent("tabx1",4)
Gui.F_Label_Est.chkOMisc.Caption("Misc Items")
Gui.F_Label_Est.chkOMisc.TabStop(True)
Gui.F_Label_Est.chkOMisc.TabIndex(615)
Gui.F_Label_Est.lbl28.Create(Label,"% Over",True,945,255,0,12885,4290,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl28.parent("tabx1",5)
Gui.F_Label_Est.txtPOver.Create(TextBox,"",True,1215,300,0,12885,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPOver.parent("tabx1",5)
Gui.F_Label_Est.txtPOver.NumericOnly(1)
Gui.F_Label_Est.txtPOver.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPOver.TabStop(True)
Gui.F_Label_Est.txtPOver.TabIndex(710)
Gui.F_Label_Est.lbl29.Create(Label,"% Under",True,1080,255,0,14400,4290,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl29.parent("tabx1",5)
Gui.F_Label_Est.txtPUnder.Create(TextBox,"",True,1215,300,0,14400,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPUnder.parent("tabx1",5)
Gui.F_Label_Est.txtPUnder.NumericOnly(1)
Gui.F_Label_Est.txtPUnder.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPUnder.TabStop(True)
Gui.F_Label_Est.txtPUnder.TabIndex(711)
Gui.F_Label_Est.chkOVacDie.Create(CheckBox)
Gui.F_Label_Est.chkOVacDie.Size(1560,360)
Gui.F_Label_Est.chkOVacDie.Position(4875,3705)
Gui.F_Label_Est.chkOVacDie.Parent("tabx1",4)
Gui.F_Label_Est.chkOVacDie.Caption("Vacuum Die")
Gui.F_Label_Est.chkOVacDie.TabStop(True)
Gui.F_Label_Est.chkOVacDie.TabIndex(618)
Gui.F_Label_Est.chkOCSM.Create(CheckBox)
Gui.F_Label_Est.chkOCSM.Size(2505,360)
Gui.F_Label_Est.chkOCSM.Position(4875,4095)
Gui.F_Label_Est.chkOCSM.Parent("tabx1",4)
Gui.F_Label_Est.chkOCSM.Caption("Customer Supplied Material")
Gui.F_Label_Est.chkOCSM.TabStop(True)
Gui.F_Label_Est.chkOCSM.TabIndex(619)
Gui.F_Label_Est.chkOSampleOF.Create(CheckBox)
Gui.F_Label_Est.chkOSampleOF.Size(1560,360)
Gui.F_Label_Est.chkOSampleOF.Position(4875,4485)
Gui.F_Label_Est.chkOSampleOF.Parent("tabx1",4)
Gui.F_Label_Est.chkOSampleOF.Caption("Sample on File")
Gui.F_Label_Est.chkOSampleOF.TabStop(True)
Gui.F_Label_Est.chkOSampleOF.TabIndex(620)
Gui.F_Label_Est.chkOBlanket.Create(CheckBox)
Gui.F_Label_Est.chkOBlanket.Size(1560,360)
Gui.F_Label_Est.chkOBlanket.Position(4875,4875)
Gui.F_Label_Est.chkOBlanket.Parent("tabx1",4)
Gui.F_Label_Est.chkOBlanket.Caption("Blanket")
Gui.F_Label_Est.chkOBlanket.TabStop(True)
Gui.F_Label_Est.chkOBlanket.TabIndex(621)
Gui.F_Label_Est.chkPCoreLabels.Create(CheckBox)
Gui.F_Label_Est.chkPCoreLabels.Size(1560,360)
Gui.F_Label_Est.chkPCoreLabels.Position(7560,555)
Gui.F_Label_Est.chkPCoreLabels.Parent("tabx1",3)
Gui.F_Label_Est.chkPCoreLabels.Caption("Core Labels")
Gui.F_Label_Est.chkPCoreLabels.TabStop(True)
Gui.F_Label_Est.chkPCoreLabels.TabIndex(521)
Gui.F_Label_Est.chkPInnerBoxes.Create(CheckBox)
Gui.F_Label_Est.chkPInnerBoxes.Size(1560,360)
Gui.F_Label_Est.chkPInnerBoxes.Position(7560,945)
Gui.F_Label_Est.chkPInnerBoxes.Parent("tabx1",3)
Gui.F_Label_Est.chkPInnerBoxes.Caption("Inner Boxes")
Gui.F_Label_Est.chkPInnerBoxes.TabStop(True)
Gui.F_Label_Est.chkPInnerBoxes.TabIndex(522)
Gui.F_Label_Est.chkPShrinkWrap.Create(CheckBox)
Gui.F_Label_Est.chkPShrinkWrap.Size(1560,360)
Gui.F_Label_Est.chkPShrinkWrap.Position(4935,165)
Gui.F_Label_Est.chkPShrinkWrap.Parent("tabx1",3)
Gui.F_Label_Est.chkPShrinkWrap.Caption("Shrinkwrap")
Gui.F_Label_Est.chkPShrinkWrap.TabStop(True)
Gui.F_Label_Est.chkPShrinkWrap.TabIndex(518)
Gui.F_Label_Est.chkPPackLabels.Create(CheckBox)
Gui.F_Label_Est.chkPPackLabels.Size(1560,360)
Gui.F_Label_Est.chkPPackLabels.Position(7560,1335)
Gui.F_Label_Est.chkPPackLabels.Parent("tabx1",3)
Gui.F_Label_Est.chkPPackLabels.Caption("Pack Labels")
Gui.F_Label_Est.chkPPackLabels.TabStop(True)
Gui.F_Label_Est.chkPPackLabels.TabIndex(523)
Gui.F_Label_Est.chkPPalletLabel.Create(CheckBox)
Gui.F_Label_Est.chkPPalletLabel.Size(1560,360)
Gui.F_Label_Est.chkPPalletLabel.Position(7560,1725)
Gui.F_Label_Est.chkPPalletLabel.Parent("tabx1",3)
Gui.F_Label_Est.chkPPalletLabel.Caption("Pallet Label")
Gui.F_Label_Est.chkPPalletLabel.TabStop(True)
Gui.F_Label_Est.chkPPalletLabel.TabIndex(524)
Gui.F_Label_Est.chkPGay.Create(CheckBox)
Gui.F_Label_Est.chkPGay.Size(1560,360)
Gui.F_Label_Est.chkPGay.Position(7560,2115)
Gui.F_Label_Est.chkPGay.Parent("tabx1",3)
Gui.F_Label_Est.chkPGay.Caption("Gaylords")
Gui.F_Label_Est.chkPGay.TabStop(True)
Gui.F_Label_Est.chkPGay.TabIndex(525)
Gui.F_Label_Est.chkPChip.Create(CheckBox)
Gui.F_Label_Est.chkPChip.Size(1560,360)
Gui.F_Label_Est.chkPChip.Position(7560,2505)
Gui.F_Label_Est.chkPChip.Parent("tabx1",3)
Gui.F_Label_Est.chkPChip.Caption("Chipboard")
Gui.F_Label_Est.chkPChip.TabStop(True)
Gui.F_Label_Est.chkPChip.TabIndex(526)
Gui.F_Label_Est.chkPPlasticC.Create(CheckBox)
Gui.F_Label_Est.chkPPlasticC.Size(1560,360)
Gui.F_Label_Est.chkPPlasticC.Position(7560,2895)
Gui.F_Label_Est.chkPPlasticC.Parent("tabx1",3)
Gui.F_Label_Est.chkPPlasticC.Caption("Plastic Cores")
Gui.F_Label_Est.chkPPlasticC.TabStop(True)
Gui.F_Label_Est.chkPPlasticC.TabIndex(527)
Gui.F_Label_Est.chkPCorePlug.Create(CheckBox)
Gui.F_Label_Est.chkPCorePlug.Size(1560,360)
Gui.F_Label_Est.chkPCorePlug.Position(7560,3285)
Gui.F_Label_Est.chkPCorePlug.Parent("tabx1",3)
Gui.F_Label_Est.chkPCorePlug.Caption("Core Plugs")
Gui.F_Label_Est.chkPCorePlug.TabStop(True)
Gui.F_Label_Est.chkPCorePlug.TabIndex(528)
Gui.F_Label_Est.lbl35.Create(Label,"Labels/Shrinkwrap",True,1935,255,0,5100,570,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl35.Parent("tabx1",3)
Gui.F_Label_Est.txtPLabelsShrink.Create(TextBox,"",True,1215,300,0,5100,780,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPLabelsShrink.Parent("tabx1",3)
Gui.F_Label_Est.txtPLabelsShrink.NumericOnly(1)
Gui.F_Label_Est.txtPLabelsShrink.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPLabelsShrink.Event(LostFocus,Txt_Lost_Focus)
Gui.F_Label_Est.txtPLabelsShrink.TabStop(True)
Gui.F_Label_Est.txtPLabelsShrink.TabIndex(519)
Gui.F_Label_Est.lbl36.Create(Label,"# of Plate Changes",True,1215,360,0,3885,4185,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl36.Parent("tabx1",5)
Gui.F_Label_Est.txtPTotalPlateC.Create(TextBox,"",True,1215,300,0,3885,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPTotalPlateC.Parent("tabx1",5)
Gui.F_Label_Est.txtPTotalPlateC.NumericOnly(1)
Gui.F_Label_Est.txtPTotalPlateC.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPTotalPlateC.TabStop(True)
Gui.F_Label_Est.txtPTotalPlateC.TabIndex(705)
Gui.F_Label_Est.lbl40.Create(Label,"Plate Change Charge",True,1215,360,0,5160,4185,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl40.Parent("tabx1",5)
Gui.F_Label_Est.txtPPlateChaChar.Create(TextBox,"",True,1215,300,0,5160,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPPlateChaChar.Parent("tabx1",5)
Gui.F_Label_Est.txtPPlateChaChar.NumericOnly(1)
Gui.F_Label_Est.txtPPlateChaChar.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPPlateChaChar.TabStop(True)
Gui.F_Label_Est.txtPPlateChaChar.TabIndex(706)
Gui.F_Label_Est.lbl41.Create(Label,"# of Color Changes",True,1215,360,0,6435,4185,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl41.Parent("tabx1",5)
Gui.F_Label_Est.txtPTotalColChan.Create(TextBox,"",True,1215,300,0,6435,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPTotalColChan.Parent("tabx1",5)
Gui.F_Label_Est.txtPTotalColChan.NumericOnly(1)
Gui.F_Label_Est.txtPTotalColChan.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPTotalColChan.TabStop(True)
Gui.F_Label_Est.txtPTotalColChan.TabIndex(707)
Gui.F_Label_Est.lbl42.Create(Label,"Color Change Charge",True,1215,360,0,7710,4185,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl42.Parent("tabx1",5)
Gui.F_Label_Est.txtPColorChaChar.Create(TextBox,"",True,1215,300,0,7710,4500,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtPColorChaChar.Parent("tabx1",5)
Gui.F_Label_Est.txtPColorChaChar.NumericOnly(1)
Gui.F_Label_Est.txtPColorChaChar.Event(GotFocus,Focus)
Gui.F_Label_Est.txtPColorChaChar.TabStop(True)
Gui.F_Label_Est.txtPColorChaChar.TabIndex(708)
Gui.F_Label_Est.chkPrevArch.Create(CheckBox)
Gui.F_Label_Est.chkPrevArch.Size(1560,360)
Gui.F_Label_Est.chkPrevArch.Position(45,4020)
Gui.F_Label_Est.chkPrevArch.Parent("tabx1",0)
Gui.F_Label_Est.chkPrevArch.Caption("Show Archived")
Gui.F_Label_Est.chkPrevArch.Event(Click,Prev_Click)
Gui.F_Label_Est.chk4Color.Create(CheckBox)
Gui.F_Label_Est.chk4Color.Size(1560,360)
Gui.F_Label_Est.chk4Color.Position(4875,2925)
Gui.F_Label_Est.chk4Color.Caption("4 Color Process")
Gui.F_Label_Est.chk4Color.TabStop(True)
Gui.F_Label_Est.chk4Color.TabIndex(616)
Gui.F_Label_Est.chk4Color.Parent("tabx1",4)
Gui.F_Label_Est.cmdPrevRefresh.Create(Button)
Gui.F_Label_Est.cmdPrevRefresh.Size(855,375)
Gui.F_Label_Est.cmdPrevRefresh.Position(45,4500)
Gui.F_Label_Est.cmdPrevRefresh.Parent("tabx1",0)
Gui.F_Label_Est.cmdPrevRefresh.Caption("Refresh")
Gui.F_Label_Est.cmdPrevRefresh.Event(Click,Prev_Click)
Gui.F_Label_Est.chkFreeze.Create(CheckBox)
Gui.F_Label_Est.chkFreeze.Size(2805,285)
Gui.F_Label_Est.chkFreeze.Position(12300,75)
Gui.F_Label_Est.chkFreeze.Parent("tabx1",5)
Gui.F_Label_Est.chkFreeze.Caption("Freeze Unit Price")
Gui.F_Label_Est.frame1.create(frame)
Gui.F_Label_Est.frame1.TabStop(False)
Gui.F_Label_Est.frame1.caption("Module Access")
Gui.F_Label_Est.frame1.size(8730,690)
Gui.F_Label_Est.frame1.position(7125,10365)
Gui.F_Label_Est.cmdCustMast.create(button)
Gui.F_Label_Est.cmdCustMast.caption("Customers")
Gui.F_Label_Est.cmdCustMast.size(1020,300)
Gui.F_Label_Est.cmdCustMast.position(105,255)
Gui.F_Label_Est.cmdCustMast.parent("frame1")
Gui.F_Label_Est.cmdCustMast.event(Click,External_Sources)
Gui.F_Label_Est.cmdCustMast.tooltip("Global Shop Customer Master")
Gui.F_Label_Est.cmdCustMast.defaultvalue("")
Gui.F_Label_Est.cmdCustMast.TabIndex(10015)
Gui.F_Label_Est.cmdInvMast.create(button)
Gui.F_Label_Est.cmdInvMast.caption("Inventory")
Gui.F_Label_Est.cmdInvMast.size(1020,300)
Gui.F_Label_Est.cmdInvMast.position(2265,255)
Gui.F_Label_Est.cmdInvMast.parent("frame1")
Gui.F_Label_Est.cmdInvMast.event(Click,External_Sources)
Gui.F_Label_Est.cmdInvMast.tooltip("Global Shop Inventory Master")
Gui.F_Label_Est.cmdInvMast.defaultvalue("")
Gui.F_Label_Est.cmdInvMast.TabIndex(10017)
Gui.F_Label_Est.cmdVendMast.create(button)
Gui.F_Label_Est.cmdVendMast.caption("Vendor")
Gui.F_Label_Est.cmdVendMast.size(1020,300)
Gui.F_Label_Est.cmdVendMast.position(3345,255)
Gui.F_Label_Est.cmdVendMast.parent("frame1")
Gui.F_Label_Est.cmdVendMast.event(Click,External_Sources)
Gui.F_Label_Est.cmdVendMast.tooltip("Global Shop Vendor Master")
Gui.F_Label_Est.cmdVendMast.defaultvalue("")
Gui.F_Label_Est.cmdVendMast.TabIndex(10018)
Gui.F_Label_Est.cmdCRM.create(button)
Gui.F_Label_Est.cmdCRM.caption("CRM")
Gui.F_Label_Est.cmdCRM.size(1020,300)
Gui.F_Label_Est.cmdCRM.position(1185,255)
Gui.F_Label_Est.cmdCRM.parent("frame1")
Gui.F_Label_Est.cmdCRM.event(Click,External_Sources)
Gui.F_Label_Est.cmdCRM.tooltip("Customer Relationship Manager")
Gui.F_Label_Est.cmdCRM.defaultvalue("")
Gui.F_Label_Est.cmdCRM.TabIndex(10016)
Gui.F_Label_Est.cmdWebsite.create(button)
Gui.F_Label_Est.cmdWebsite.caption("Cheat-Sheets")
Gui.F_Label_Est.cmdWebsite.size(1650,300)
Gui.F_Label_Est.cmdWebsite.position(5505,255)
Gui.F_Label_Est.cmdWebsite.parent("frame1")
Gui.F_Label_Est.cmdWebsite.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdWebsite.tooltip("Estimating Websites Access")
Gui.F_Label_Est.cmdWebsite.defaultvalue("")
Gui.F_Label_Est.cmdWebsite.TabIndex(10020)
Gui.F_Label_Est.cmdSandD.create(button)
Gui.F_Label_Est.cmdSandD.caption("S&&D")
Gui.F_Label_Est.cmdSandD.size(1020,300)
Gui.F_Label_Est.cmdSandD.position(4425,255)
Gui.F_Label_Est.cmdSandD.parent("frame1")
Gui.F_Label_Est.cmdSandD.event(Click,External_Sources)
Gui.F_Label_Est.cmdSandD.defaultvalue("")
Gui.F_Label_Est.cmdSandD.TabIndex(10019)
Gui.F_Label_Est.cmdEstMaint.create(button)
Gui.F_Label_Est.cmdEstMaint.caption("Settings")
Gui.F_Label_Est.cmdEstMaint.visible(False)
Gui.F_Label_Est.cmdEstMaint.size(1515,300)
Gui.F_Label_Est.cmdEstMaint.position(7215,255)
Gui.F_Label_Est.cmdEstMaint.parent("frame1")
Gui.F_Label_Est.cmdEstMaint.event(Click,Launch_Maint)
Gui.F_Label_Est.cmdEstMaint.defaultvalue("")
Gui.F_Label_Est.cmdEstMaint.TabIndex(10021)
Gui.F_Label_Est.frm_FinishPart.create(frame)
Gui.F_Label_Est.frm_FinishPart.TabStop(True)
Gui.F_Label_Est.frm_FinishPart.TabIndex(200)
Gui.F_Label_Est.frm_FinishPart.caption("Finish Part(Label) / Router")
Gui.F_Label_Est.frm_FinishPart.size(6030,1500)
Gui.F_Label_Est.frm_FinishPart.position(9810,2940)
Gui.F_Label_Est.cmdSRouter.create(button)
Gui.F_Label_Est.cmdSRouter.caption("Save Router")
Gui.F_Label_Est.cmdSRouter.size(870,495)
Gui.F_Label_Est.cmdSRouter.position(4215,960)
Gui.F_Label_Est.cmdSRouter.parent("frm_FinishPart")
Gui.F_Label_Est.cmdSRouter.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdSRouter.defaultvalue("")
Gui.F_Label_Est.cmdSRouter.tabstop(True)
Gui.F_Label_Est.cmdSRouter.tabindex(206)
Gui.F_Label_Est.txtFinishPart.create(textbox,"",True,1830,300,0,60,465,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtFinishPart.parent("frm_FinishPart")
Gui.F_Label_Est.txtFinishPart.event(GotFocus,Focus)
Gui.F_Label_Est.txtFinishPart.maxLength(17)
Gui.F_Label_Est.txtFinishPart.defaultvalue("")
Gui.F_Label_Est.txtFinishPart.controlgroup(2)
Gui.F_Label_Est.txtFinishPart.tabstop(True)
Gui.F_Label_Est.txtFinishPart.tabindex(201)
Gui.F_Label_Est.txtFinishPart.Event(Change,FinshedPartChng)
Gui.F_Label_Est.cmdCreateQuote.create(button)
Gui.F_Label_Est.cmdCreateQuote.caption("Quick Quote")
Gui.F_Label_Est.cmdCreateQuote.size(870,495)
Gui.F_Label_Est.cmdCreateQuote.position(5145,960)
Gui.F_Label_Est.cmdCreateQuote.parent("frm_FinishPart")
Gui.F_Label_Est.cmdCreateQuote.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdCreateQuote.defaultvalue("")
Gui.F_Label_Est.cmdCreateQuote.TabStop(True)
Gui.F_Label_Est.cmdCreateQuote.TabIndex(207)
Gui.F_Label_Est.lbl95.create(label,"Loc",True,375,255,1,1950,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl95.parent("frm_FinishPart")
Gui.F_Label_Est.lbl95.defaultvalue("")
Gui.F_Label_Est.txtFinishLoc.create(textbox,"",True,345,300,0,1950,465,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtFinishLoc.parent("frm_FinishPart")
Gui.F_Label_Est.txtFinishLoc.event(GotFocus,Focus)
Gui.F_Label_Est.txtFinishLoc.maxLength(2)
Gui.F_Label_Est.txtFinishLoc.defaultvalue("")
Gui.F_Label_Est.txtFinishLoc.controlgroup(2)
Gui.F_Label_Est.txtFinishLoc.tabstop(True)
Gui.F_Label_Est.txtFinishLoc.tabindex(202)
Gui.F_Label_Est.lbl96.create(label,"PL",True,435,255,1,2910,870,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl96.parent("frm_FinishPart")
Gui.F_Label_Est.lbl96.defaultvalue("")
Gui.F_Label_Est.lbl97.create(label,"UM",True,420,255,1,3675,870,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl97.parent("frm_FinishPart")
Gui.F_Label_Est.lbl97.defaultvalue("")
Gui.F_Label_Est.txtHUM.create(textbox,"",True,510,300,0,3675,1110,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHUM.parent("frm_FinishPart")
Gui.F_Label_Est.txtHUM.defaultvalue("")
Gui.F_Label_Est.txtHUM.TabStop(True)
Gui.F_Label_Est.txtHUM.TabIndex(205)
Gui.F_Label_Est.txtHUM.MaxLength(2)
Gui.F_Label_Est.ddlHPL.create(dropdownlist)
Gui.F_Label_Est.ddlHPL.size(735,330)
Gui.F_Label_Est.ddlHPL.position(2895,1110)
Gui.F_Label_Est.ddlHPL.parent("frm_FinishPart")
Gui.F_Label_Est.ddlHPL.defaultvalue("")
Gui.F_Label_Est.ddlHPL.tabstop(True)
Gui.F_Label_Est.ddlHPL.tabindex(204)
Gui.F_Label_Est.lbl_txtFinPart.create(label,"Part",True,1485,255,1,75,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl_txtFinPart.parent("frm_FinishPart")
Gui.F_Label_Est.lbl_txtFinPart.defaultvalue("")
Gui.F_Label_Est.txtdesc.create(textbox,"",True,2745,300,0,2355,465,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtdesc.parent("frm_FinishPart")
Gui.F_Label_Est.txtdesc.event(GotFocus,Focus)
Gui.F_Label_Est.txtdesc.maxLength(30)
Gui.F_Label_Est.txtdesc.defaultvalue("")
Gui.F_Label_Est.txtdesc.controlgroup(2)
Gui.F_Label_Est.txtdesc.tabstop(True)
Gui.F_Label_Est.txtdesc.tabindex(203)
Gui.F_Label_Est.lbl94.create(label,"Desc",True,1125,255,1,2370,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl94.parent("frm_FinishPart")
Gui.F_Label_Est.lbl94.defaultvalue("")
Gui.F_Label_Est.cmdCreatePart.Create(Button)
Gui.F_Label_Est.cmdCreatePart.Size(870,495)
Gui.F_Label_Est.cmdCreatePart.Position(5145,315)
Gui.F_Label_Est.cmdCreatePart.Parent("frm_FinishPart")
Gui.F_Label_Est.cmdCreatePart.TabStop(True)
Gui.F_Label_Est.cmdCreatePart.TabIndex(207)
Gui.F_Label_Est.cmdCreatePart.Caption("Create Part")
Gui.F_Label_Est.cmdCreatePart.DefaultValue("")
Gui.F_Label_Est.cmdCreatePart.Event(Click,StdBrowsers)
Gui.F_Label_Est.txtFinishRev.Create(TextBox,"",True,630,300,0,2220,1110,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtFinishRev.Parent("frm_FinishPart")
Gui.F_Label_Est.txtFinishRev.TabStop(True)
Gui.F_Label_Est.txtFinishRev.TabIndex(202)
Gui.F_Label_Est.txtFinishRev.MaxLength(3)
Gui.F_Label_Est.txtFinishRev.DefaultValue("")
Gui.F_Label_Est.txtFinishRev.ControlGroup(2)
Gui.F_Label_Est.txtFinishRev.Locked(True)
Gui.F_Label_Est.lbl98.Create(Label,"Rev",True,720,255,1,2205,870,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl98.Parent("frm_FinishPart")
Gui.F_Label_Est.lbl98.DefaultValue("")
Gui.F_Label_Est.txtFinishRouter.Create(TextBox,"",True,2100,300,0,60,1110,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtFinishRouter.Parent("frm_FinishPart")
Gui.F_Label_Est.txtFinishRouter.TabStop(True)
Gui.F_Label_Est.txtFinishRouter.TabIndex(201)
Gui.F_Label_Est.txtFinishRouter.MaxLength(17)
Gui.F_Label_Est.txtFinishRouter.DefaultValue("")
Gui.F_Label_Est.txtFinishRouter.ControlGroup(2)
Gui.F_Label_Est.lbl_txtFinPart2.Create(Label,"Router",True,1485,255,1,75,870,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl_txtFinPart2.Parent("frm_FinishPart")
Gui.F_Label_Est.lbl_txtFinPart2.DefaultValue("")
Gui.F_Label_Est.frm_LabelAttributes.create(frame)
Gui.F_Label_Est.frm_LabelAttributes.TabStop(True)
Gui.F_Label_Est.frm_LabelAttributes.TabIndex(100)
Gui.F_Label_Est.frm_LabelAttributes.caption("Label Finish Info.")
Gui.F_Label_Est.frm_LabelAttributes.size(4995,1500)
Gui.F_Label_Est.frm_LabelAttributes.position(4755,2940)
Gui.F_Label_Est.lbl76.create(label,"Width",True,645,240,1,105,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl76.parent("frm_LabelAttributes")
Gui.F_Label_Est.lbl76.defaultvalue("")
Gui.F_Label_Est.txtHlblWidth.create(textbox,"",True,750,300,0,105,465,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHlblWidth.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHlblWidth.numericonly(1)
Gui.F_Label_Est.txtHlblWidth.event(GotFocus,Focus)
Gui.F_Label_Est.txtHlblWidth.event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtHlblWidth.defaultvalue("")
Gui.F_Label_Est.txtHlblWidth.controlgroup(2)
Gui.F_Label_Est.txtHlblWidth.tabstop(True)
Gui.F_Label_Est.txtHlblWidth.tabindex(101)
Gui.F_Label_Est.lbl78.create(label,"Depth",True,645,255,1,2535,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl78.parent("frm_LabelAttributes")
Gui.F_Label_Est.lbl78.defaultvalue("")
Gui.F_Label_Est.txtHlblDepth.create(textbox,"",True,750,300,0,2535,465,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHlblDepth.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHlblDepth.numericonly(1)
Gui.F_Label_Est.txtHlblDepth.event(GotFocus,Focus)
Gui.F_Label_Est.txtHlblDepth.event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtHlblDepth.defaultvalue("")
Gui.F_Label_Est.txtHlblDepth.controlgroup(2)
Gui.F_Label_Est.txtHlblDepth.tabstop(True)
Gui.F_Label_Est.txtHlblDepth.tabindex(104)
Gui.F_Label_Est.lbl80.create(label,"Lin Width",True,795,255,1,1725,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl80.parent("frm_LabelAttributes")
Gui.F_Label_Est.lbl80.defaultvalue("")
Gui.F_Label_Est.txtHLinerWidth.create(textbox,"",True,750,300,0,1725,465,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHLinerWidth.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHLinerWidth.numericonly(1)
Gui.F_Label_Est.txtHLinerWidth.event(GotFocus,Focus)
Gui.F_Label_Est.txtHLinerWidth.event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtHLinerWidth.defaultvalue("")
Gui.F_Label_Est.txtHLinerWidth.controlgroup(2)
Gui.F_Label_Est.txtHLinerWidth.tabstop(True)
Gui.F_Label_Est.txtHLinerWidth.tabindex(103)
Gui.F_Label_Est.lbl81.create(label,"Rpt Length",True,765,255,1,4140,240,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl81.parent("frm_LabelAttributes")
Gui.F_Label_Est.lbl81.defaultvalue("")
Gui.F_Label_Est.txtHRepeatLen.create(textbox,"",True,750,300,0,4155,465,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHRepeatLen.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHRepeatLen.numericonly(1)
Gui.F_Label_Est.txtHRepeatLen.event(GotFocus,Focus)
Gui.F_Label_Est.txtHRepeatLen.event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtHRepeatLen.defaultvalue("")
Gui.F_Label_Est.txtHRepeatLen.controlgroup(2)
Gui.F_Label_Est.txtHRepeatLen.tabstop(True)
Gui.F_Label_Est.txtHRepeatLen.tabindex(106)
Gui.F_Label_Est.lbl82.create(label,"Fin Acr",True,705,255,1,1725,870,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl82.parent("frm_LabelAttributes")
Gui.F_Label_Est.lbl82.defaultvalue("")
Gui.F_Label_Est.txtHFinAcross.create(textbox,"",True,750,300,0,1725,1110,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtHFinAcross.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHFinAcross.event(GotFocus,Focus)
Gui.F_Label_Est.txtHFinAcross.event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtHFinAcross.defaultvalue("")
Gui.F_Label_Est.txtHFinAcross.controlgroup(2)
Gui.F_Label_Est.txtHFinAcross.tabstop(True)
Gui.F_Label_Est.txtHFinAcross.tabindex(109)
Gui.F_Label_Est.txtHFinAcross.NumericOnly(1)
Gui.F_Label_Est.lbl83.create(label,"# Colors F/B",True,1140,255,1,2535,870,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl83.parent("frm_LabelAttributes")
Gui.F_Label_Est.lbl83.defaultvalue("")
Gui.F_Label_Est.lbl32.Create(Label,"Acr Die",True,705,255,0,105,870,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl32.Parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHAcrDie.Create(TextBox,"",True,750,300,0,105,1110,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtHAcrDie.Parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHAcrDie.ControlGroup(2)
Gui.F_Label_Est.txtHAcrDie.Event(GotFocus,Focus)
Gui.F_Label_Est.txtHAcrDie.Event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtHAcrDie.TabStop(True)
Gui.F_Label_Est.txtHAcrDie.TabIndex(107)
Gui.F_Label_Est.txtHAcrDie.NumericOnly(1)
Gui.F_Label_Est.txtHAcrDie.Event(Change,FinshedPartChng)
Gui.F_Label_Est.lbl34.Create(Label,"Acr Press",True,810,255,0,885,870,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl34.Parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHAcrPress.Create(TextBox,"",True,750,300,0,915,1110,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtHAcrPress.Parent("frm_LabelAttributes")
Gui.F_Label_Est.txtHAcrPress.ControlGroup(2)
Gui.F_Label_Est.txtHAcrPress.Event(GotFocus,Focus)
Gui.F_Label_Est.txtHAcrPress.Event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtHAcrPress.TabStop(True)
Gui.F_Label_Est.txtHAcrPress.TabIndex(108)
Gui.F_Label_Est.txtHAcrPress.NumericOnly(1)
Gui.F_Label_Est.lbl30.Create(Label,"Gap Acr",True,750,255,0,915,240,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl30.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtOGapAcross.Create(TextBox,"",True,750,300,0,915,465,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOGapAcross.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtOGapAcross.NumericOnly(1)
Gui.F_Label_Est.txtOGapAcross.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOGapAcross.Event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtOGapAcross.TabStop(True)
Gui.F_Label_Est.txtOGapAcross.TabIndex(102)
Gui.F_Label_Est.lbl31.Create(Label,"Gap Dwn",True,780,255,0,3330,240,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.lbl31.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtOGapDown.Create(TextBox,"",True,750,300,0,3345,465,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOGapDown.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtOGapDown.NumericOnly(1)
Gui.F_Label_Est.txtOGapDown.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOGapDown.Event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtOGapDown.TabStop(True)
Gui.F_Label_Est.txtOGapDown.TabIndex(105)
Gui.F_Label_Est.txtOColorFront.Create(TextBox,"",True,495,300,0,2535,1110,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOColorFront.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtOColorFront.NumericOnly(1)
Gui.F_Label_Est.txtOColorFront.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOColorFront.Event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtOColorFront.TabStop(True)
Gui.F_Label_Est.txtOColorFront.TabIndex(110)
Gui.F_Label_Est.txtOColorBack.Create(TextBox,"",True,495,300,0,3210,1110,True,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.txtOColorBack.parent("frm_LabelAttributes")
Gui.F_Label_Est.txtOColorBack.NumericOnly(1)
Gui.F_Label_Est.txtOColorBack.Event(GotFocus,Focus)
Gui.F_Label_Est.txtOColorBack.Event(LostFocus,Label_Info_Lost_Focus)
Gui.F_Label_Est.txtOColorBack.TabStop(True)
Gui.F_Label_Est.txtOColorBack.TabIndex(111)
Gui.F_Label_Est.lbl43.Create(Label,"/",True,150,255,0,3045,1140,True,0,"Arial",12,-2147483633,0)
Gui.F_Label_Est.lbl43.Parent("frm_LabelAttributes")
Gui.F_Label_Est.lbl1.create(label,"Customer ID",True,1455,255,1,105,90,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl1.fontstyle(True,False,False,False,False)
Gui.F_Label_Est.lbl1.defaultvalue("")
Gui.F_Label_Est.txtCustomer.create(textbox,"",True,1650,300,0,90,300,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustomer.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustomer.maxLength(6)
Gui.F_Label_Est.txtCustomer.event(LostFocus,Lost_Focus_Browsers)
Gui.F_Label_Est.txtCustomer.defaultvalue("")
Gui.F_Label_Est.txtCustomer.controlgroup(1)
Gui.F_Label_Est.txtCustomer.tabstop(True)
Gui.F_Label_Est.txtCustomer.tabindex(1)
Gui.F_Label_Est.txtCustName.create(textbox,"",True,3510,300,0,2415,300,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustName.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustName.defaultvalue("")
Gui.F_Label_Est.txtCustName.controlgroup(1)
Gui.F_Label_Est.txtCustName.tabstop(True)
Gui.F_Label_Est.txtCustName.tabindex(9)
Gui.F_Label_Est.txtCustName.MaxLength(30)
Gui.F_Label_Est.lbl2.create(label,"Name",True,1935,240,1,2400,90,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl2.defaultvalue("")
Gui.F_Label_Est.txtEstimate.create(textbox,"",True,1665,300,0,6225,300,False,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtEstimate.maxLength(17)
Gui.F_Label_Est.txtEstimate.defaultvalue("")
Gui.F_Label_Est.txtEstimate.TabIndex(10000)
Gui.F_Label_Est.lbl3.create(label,"Estimate #",True,1155,255,1,6230,100,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl3.fontstyle(True,False,False,False,False)
Gui.F_Label_Est.lbl3.ForeColor(16711680)
Gui.F_Label_Est.lbl3.defaultvalue("")
Gui.F_Label_Est.lblCreateBy.create(label,"Created By: UserName",True,2730,255,1,13110,135,True,1,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblCreateBy.defaultvalue("")
Gui.F_Label_Est.txtCustBG.create(textbox,"",True,435,300,0,1365,1530,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustBG.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustBG.defaultvalue("")
Gui.F_Label_Est.txtCustBG.controlgroup(1)
Gui.F_Label_Est.txtCustBG.tabstop(True)
Gui.F_Label_Est.txtCustBG.tabindex(6)
Gui.F_Label_Est.txtCustBG.MaxLength(7)
Gui.F_Label_Est.lbl5.create(label,"Buying Group:",True,1200,345,1,105,1545,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl5.defaultvalue("")
Gui.F_Label_Est.chkHContPricing.create(checkbox)
Gui.F_Label_Est.chkHContPricing.caption("Contract Pricing")
Gui.F_Label_Est.chkHContPricing.size(1665,255)
Gui.F_Label_Est.chkHContPricing.position(90,1230)
Gui.F_Label_Est.chkHContPricing.defaultvalue("0")
Gui.F_Label_Est.chkHContPricing.controlgroup(1)
Gui.F_Label_Est.chkHContPricing.TabStop(True)
Gui.F_Label_Est.chkHContPricing.TabIndex(5)
Gui.F_Label_Est.mltCustNotes.create(textboxm)
Gui.F_Label_Est.mltCustNotes.size(4605,1395)
Gui.F_Label_Est.mltCustNotes.position(105,3045)
Gui.F_Label_Est.mltCustNotes.defaultvalue("")
Gui.F_Label_Est.mltCustNotes.controlgroup(1)
Gui.F_Label_Est.mltCustNotes.tabstop(True)
Gui.F_Label_Est.mltCustNotes.tabindex(18)
Gui.F_Label_Est.lbl6.create(label,"Customer Notes",True,2115,255,1,105,2805,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl6.defaultvalue("")
Gui.F_Label_Est.cmdClear.create(button)
Gui.F_Label_Est.cmdClear.caption("Clear")
Gui.F_Label_Est.cmdClear.size(735,300)
Gui.F_Label_Est.cmdClear.position(1200,10500)
Gui.F_Label_Est.cmdClear.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdClear.defaultvalue("")
Gui.F_Label_Est.cmdClear.TabIndex(10013)
Gui.F_Label_Est.txtCustAddress.create(textbox,"",True,3525,300,0,2400,885,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustAddress.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustAddress.defaultvalue("")
Gui.F_Label_Est.txtCustAddress.controlgroup(1)
Gui.F_Label_Est.txtCustAddress.tabstop(True)
Gui.F_Label_Est.txtCustAddress.tabindex(10)
Gui.F_Label_Est.txtCustAddress.MaxLength(50)
Gui.F_Label_Est.lbl10.create(label,"Address",True,1935,240,1,2415,675,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl10.defaultvalue("")
Gui.F_Label_Est.txtCustCity.create(textbox,"",True,1455,300,0,2400,1485,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustCity.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustCity.defaultvalue("")
Gui.F_Label_Est.txtCustCity.controlgroup(1)
Gui.F_Label_Est.txtCustCity.tabstop(True)
Gui.F_Label_Est.txtCustCity.tabindex(11)
Gui.F_Label_Est.txtCustCity.MaxLength(15)
Gui.F_Label_Est.lbl11.create(label,"City",True,1305,240,1,2400,1275,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl11.defaultvalue("")
Gui.F_Label_Est.txtCustState.create(textbox,"",True,510,300,0,3915,1485,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustState.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustState.defaultvalue("")
Gui.F_Label_Est.txtCustState.controlgroup(1)
Gui.F_Label_Est.txtCustState.tabstop(True)
Gui.F_Label_Est.txtCustState.tabindex(12)
Gui.F_Label_Est.txtCustState.MaxLength(2)
Gui.F_Label_Est.txtCustZip.create(textbox,"",True,855,300,0,4455,1485,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustZip.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustZip.defaultvalue("")
Gui.F_Label_Est.txtCustZip.controlgroup(1)
Gui.F_Label_Est.txtCustZip.tabstop(True)
Gui.F_Label_Est.txtCustZip.tabindex(13)
Gui.F_Label_Est.txtCustZip.MaxLength(15)
Gui.F_Label_Est.txtCustCountry.create(textbox,"",True,600,300,0,5355,1485,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustCountry.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustCountry.defaultvalue("")
Gui.F_Label_Est.txtCustCountry.controlgroup(1)
Gui.F_Label_Est.txtCustCountry.tabstop(True)
Gui.F_Label_Est.txtCustCountry.tabindex(14)
Gui.F_Label_Est.txtCustCountry.MaxLength(12)
Gui.F_Label_Est.lbl12.create(label,"State",True,465,240,1,3930,1275,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl12.defaultvalue("")
Gui.F_Label_Est.lbl13.create(label,"Zip",True,420,240,1,4470,1275,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl13.defaultvalue("")
Gui.F_Label_Est.lbl14.create(label,"Country",True,795,240,1,5355,1275,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl14.defaultvalue("")
Gui.F_Label_Est.txtContact.create(textbox,"",True,1635,300,0,105,855,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtContact.event(GotFocus,Focus)
Gui.F_Label_Est.txtContact.maxLength(30)
Gui.F_Label_Est.txtContact.event(LostFocus,Lost_Focus_Browsers)
Gui.F_Label_Est.txtContact.defaultvalue("")
Gui.F_Label_Est.txtContact.controlgroup(1)
Gui.F_Label_Est.txtContact.tabstop(True)
Gui.F_Label_Est.txtContact.tabindex(3)
Gui.F_Label_Est.lbl15.create(label,"Contact",True,1665,240,1,105,660,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl15.defaultvalue("")
Gui.F_Label_Est.dtpEstDate.create(datepicker)
Gui.F_Label_Est.dtpEstDate.size(1395,285)
Gui.F_Label_Est.dtpEstDate.position(9285,285)
Gui.F_Label_Est.dtpEstDate.defaultvalue("")
Gui.F_Label_Est.dtpEstDate.TabStop(True)
Gui.F_Label_Est.dtpEstDate.TabIndex(19)
Gui.F_Label_Est.lbl16.create(label,"Date Created",True,1320,255,1,9285,90,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl16.defaultvalue("")
Gui.F_Label_Est.lbl33.create(label,"Select Location(s)",True,1470,240,1,8310,645,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl33.defaultvalue("")
Gui.F_Label_Est.mltHEstNote.create(textboxm)
Gui.F_Label_Est.mltHEstNote.size(5070,2025)
Gui.F_Label_Est.mltHEstNote.position(10725,840)
Gui.F_Label_Est.mltHEstNote.defaultvalue("")
Gui.F_Label_Est.mltHEstNote.controlgroup(2)
Gui.F_Label_Est.mltHEstNote.TabStop(True)
Gui.F_Label_Est.mltHEstNote.TabIndex(21)
Gui.F_Label_Est.lbl_EstNotes.create(label,"Estimate Notes",True,1725,255,1,10725,645,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl_EstNotes.defaultvalue("")
Gui.F_Label_Est.lbl37.create(label,"Phone",True,1545,240,1,2400,1875,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl37.defaultvalue("")
Gui.F_Label_Est.cmdCustomer.create(button)
Gui.F_Label_Est.cmdCustomer.caption("^")
Gui.F_Label_Est.cmdCustomer.size(345,345)
Gui.F_Label_Est.cmdCustomer.position(1815,270)
Gui.F_Label_Est.cmdCustomer.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdCustomer.defaultvalue("")
Gui.F_Label_Est.cmdCustomer.tabstop(True)
Gui.F_Label_Est.cmdCustomer.tabindex(2)
Gui.F_Label_Est.txtCustPhone.create(textbox,"",True,1635,300,0,2400,2085,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustPhone.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustPhone.defaultvalue("")
Gui.F_Label_Est.txtCustPhone.controlgroup(1)
Gui.F_Label_Est.txtCustPhone.tabstop(True)
Gui.F_Label_Est.txtCustPhone.tabindex(15)
Gui.F_Label_Est.txtCustPhone.MaxLength(20)
Gui.F_Label_Est.lbl38.create(label,"Fax",True,1935,240,1,4155,1875,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl38.defaultvalue("")
Gui.F_Label_Est.txtCustFax.create(textbox,"",True,1815,300,0,4155,2085,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustFax.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustFax.defaultvalue("")
Gui.F_Label_Est.txtCustFax.controlgroup(1)
Gui.F_Label_Est.txtCustFax.tabstop(True)
Gui.F_Label_Est.txtCustFax.tabindex(16)
Gui.F_Label_Est.txtCustFax.MaxLength(20)
Gui.F_Label_Est.lbl39.create(label,"Email",True,1935,240,1,2400,2445,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl39.defaultvalue("")
Gui.F_Label_Est.txtCustEmail.create(textbox,"",True,3585,300,0,2400,2655,True,0,Arial,8,-2147483643,1)
Gui.F_Label_Est.txtCustEmail.event(GotFocus,Focus)
Gui.F_Label_Est.txtCustEmail.defaultvalue("")
Gui.F_Label_Est.txtCustEmail.controlgroup(1)
Gui.F_Label_Est.txtCustEmail.tabstop(True)
Gui.F_Label_Est.txtCustEmail.tabindex(17)
Gui.F_Label_Est.txtCustEmail.MaxLength(100)
Gui.F_Label_Est.cmdContact.create(button)
Gui.F_Label_Est.cmdContact.caption("^")
Gui.F_Label_Est.cmdContact.size(345,345)
Gui.F_Label_Est.cmdContact.position(1815,825)
Gui.F_Label_Est.cmdContact.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdContact.defaultvalue("")
Gui.F_Label_Est.cmdContact.tabstop(True)
Gui.F_Label_Est.cmdContact.tabindex(4)
Gui.F_Label_Est.lbl61.create(label,"Date Last Saved",True,1425,255,1,10770,90,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl61.defaultvalue("")
Gui.F_Label_Est.gsfgRunQuantities.create(GsGridControl)
Gui.F_Label_Est.gsfgRunQuantities.size(1980,2055)
Gui.F_Label_Est.gsfgRunQuantities.position(6225,840)
Gui.F_Label_Est.gsfgRunQuantities.Event(CellValueChanged,gsfgLaborBottom_CellValueChanged)
Gui.F_Label_Est.gsfgRunQuantities.TabIndex(10001)
Gui.F_Label_Est.gsfgRunQuantities.AllowMouseWheel(False)
Gui.F_Label_Est.cmdNew.create(button)
Gui.F_Label_Est.cmdNew.caption("New")
Gui.F_Label_Est.cmdNew.size(675,300)
Gui.F_Label_Est.cmdNew.position(2010,10500)
Gui.F_Label_Est.cmdNew.event(Click,StdBrowsers)
Gui.F_Label_Est.cmdNew.defaultvalue("")
Gui.F_Label_Est.cmdNew.TabIndex(10014)
Gui.F_Label_Est.lbl59.create(label,"Enter Run Quantities",True,2040,255,1,6225,645,True,0,Arial,8,-2147483633,0)
Gui.F_Label_Est.lbl59.defaultvalue("")
Gui.F_Label_Est.cmdSave.create(button)
Gui.F_Label_Est.cmdSave.caption("Save")
Gui.F_Label_Est.cmdSave.size(990,300)
Gui.F_Label_Est.cmdSave.position(105,10500)
Gui.F_Label_Est.cmdSave.event(Click,Save_Est)
Gui.F_Label_Est.cmdSave.defaultvalue("")
Gui.F_Label_Est.cmdSave.TabIndex(10012)
Gui.F_Label_Est.dtpLastSaved.create(datepicker)
Gui.F_Label_Est.dtpLastSaved.size(1395,285)
Gui.F_Label_Est.dtpLastSaved.position(10770,285)
Gui.F_Label_Est.dtpLastSaved.defaultvalue("")
Gui.F_Label_Est.dtpLastSaved.TabStop(True)
Gui.F_Label_Est.dtpLastSaved.TabIndex(20)
Gui.F_Label_Est.lvwHLocation.create(listview)
Gui.F_Label_Est.lvwHLocation.view(3)
Gui.F_Label_Est.lvwHLocation.addlistviewcolumn("Loc",700,0)
Gui.F_Label_Est.lvwHLocation.addlistviewcolumn("Des",1200,0)
Gui.F_Label_Est.lvwHLocation.size(2295,2070)
Gui.F_Label_Est.lvwHLocation.position(8310,840)
Gui.F_Label_Est.lvwHLocation.TabIndex(10002)
Gui.F_Label_Est.lblLstCng.create(label,"Changed By: UserName",True,2580,255,1,13260,345,True,1,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblLstCng.defaultvalue("")
Gui.F_Label_Est.cmdPrintJacket.create(button)
Gui.F_Label_Est.cmdPrintJacket.caption("View/Print Job Jacket")
Gui.F_Label_Est.cmdPrintJacket.size(1860,300)
Gui.F_Label_Est.cmdPrintJacket.position(100005,100005)
Gui.F_Label_Est.cmdPrintJacket.defaultvalue("")
Gui.F_Label_Est.cmdPrintJacket.tabstop(True)
Gui.F_Label_Est.cmdPrintJacket.tabindex(88)
Gui.F_Label_Est.cmdPrintJacket.Visible(False)
Gui.F_Label_Est.lblCopyFrom.create(label,"Copied From: Estimate#",True,2730,255,1,13110,555,True,1,Arial,8,-2147483633,0)
Gui.F_Label_Est.lblCopyFrom.defaultvalue("")
Gui.F_Label_Est.chkDigital.Create(CheckBox)
Gui.F_Label_Est.chkDigital.Size(1560,255)
Gui.F_Label_Est.chkDigital.Position(90,2415)
Gui.F_Label_Est.chkDigital.Caption("Digital")
Gui.F_Label_Est.chkDigital.TabStop(True)
Gui.F_Label_Est.chkDigital.TabIndex(8)
Gui.F_Label_Est.lbl9.Create(Label,"Quote #",True,900,255,0,8085,90,True,0,"Arial",8,-2147483633,0)
Gui.F_Label_Est.txtQuoteNo.Create(TextBox,"",True,1035,300,0,8085,300,False,0,"Arial",8,-2147483643,1)
Gui.F_Label_Est.chkPrecision.Create(CheckBox)
Gui.F_Label_Est.chkPrecision.Size(2265,255)
Gui.F_Label_Est.chkPrecision.Position(90,1875)
Gui.F_Label_Est.chkPrecision.Caption("Precision Press and Label")
Gui.F_Label_Est.chkPrecision.Event(Click,LabelCheck)
Gui.F_Label_Est.chkPrime.Create(CheckBox)
Gui.F_Label_Est.chkPrime.Size(1560,255)
Gui.F_Label_Est.chkPrime.Position(90,2145)
Gui.F_Label_Est.chkPrime.Caption("Prime Labeling")
Gui.F_Label_Est.chkPrime.Event(Click,LabelCheck)
Gui.F_Label_Est.cmdReCost.Create(Button)
Gui.F_Label_Est.cmdReCost.Size(1035,300)
Gui.F_Label_Est.cmdReCost.Position(2760,10500)
Gui.F_Label_Est.cmdReCost.Caption("Re-Cost")
Gui.F_Label_Est.cmdReCost.Event(Click,ReCostClick)
Gui.F_Websites..create
Gui.F_Websites..caption("External Web Links")
Gui.F_Websites..size(7980,6240)
Gui.F_Websites..minx(0)
Gui.F_Websites..miny(0)
Gui.F_Websites..position(0,0)
Gui.F_Websites..event(UnLoad,f_websites_unload)
Gui.F_Websites..forecolor(0)
Gui.F_Websites..BackColor(-2147483633)
Gui.F_Websites..maxbutton(False)
Gui.F_Websites..mousepointer(0)
Gui.F_Websites..sizeable(False)
Gui.F_Websites.gsfgMaterial.create(GsGridControl)
Gui.F_Websites.gsfgMaterial.size(2295,5340)
Gui.F_Websites.gsfgMaterial.position(100,200)
Gui.F_Websites.gsfgMaterial.event(RowCellClick,WebLaunch)
Gui.F_Websites.gsfgMaterial.AllowMouseWheel(False)
Gui.F_Websites.gsfgLabor.create(GsGridControl)
Gui.F_Websites.gsfgLabor.size(2295,5340)
Gui.F_Websites.gsfgLabor.position(2695,200)
Gui.F_Websites.gsfgLabor.event(RowCellClick,WebLaunch)
Gui.F_Websites.gsfgLabor.AllowMouseWheel(False)
Gui.F_Websites.gsfgOther.create(GsGridControl)
Gui.F_Websites.gsfgOther.size(2295,5340)
Gui.F_Websites.gsfgOther.position(5290,200)
Gui.F_Websites.gsfgOther.event(RowCellClick,WebLaunch)
Gui.F_Websites.gsfgOther.AllowMouseWheel(False)
Gui.F_New_Open..create
Gui.F_New_Open..caption("DICE Selection")
Gui.F_New_Open..size(2940,1815)
Gui.F_New_Open..minx(0)
Gui.F_New_Open..miny(0)
Gui.F_New_Open..position(0,0)
Gui.F_New_Open..event(UnLoad,f_new_open_unload)
Gui.F_New_Open..forecolor(0)
Gui.F_New_Open..BackColor(-2147483633)
Gui.F_New_Open..maxbutton(False)
Gui.F_New_Open..mousepointer(0)
Gui.F_New_Open..sizeable(False)
Gui.F_New_Open..MinButton(False)
Gui.F_New_Open.lbl1.create(label,"Please choose an option. Open an existing estimate or Create a New estimate.",True,2100,585,1,270,195,True,0,Arial,8,-2147483633,0)
Gui.F_New_Open.lbl1.defaultvalue("")
Gui.F_New_Open.cmdNew.create(button)
Gui.F_New_Open.cmdNew.caption("New")
Gui.F_New_Open.cmdNew.size(855,375)
Gui.F_New_Open.cmdNew.position(1470,900)
Gui.F_New_Open.cmdNew.event(Click,Selection)
Gui.F_New_Open.cmdNew.defaultvalue("")
Gui.F_New_Open.cmdOpen.create(button)
Gui.F_New_Open.cmdOpen.caption("Open")
Gui.F_New_Open.cmdOpen.size(855,375)
Gui.F_New_Open.cmdOpen.position(270,900)
Gui.F_New_Open.cmdOpen.event(Click,Selection)
Gui.F_New_Open.cmdOpen.defaultvalue("")
Gui.f_Formulas..create
Gui.f_Formulas..caption("Formula")
Gui.f_Formulas..size(9660,1995)
Gui.f_Formulas..minx(0)
Gui.f_Formulas..miny(0)
Gui.f_Formulas..position(0,0)
Gui.f_Formulas..event(UnLoad,f_formulas_unload)
Gui.f_Formulas..forecolor(0)
Gui.f_Formulas..BackColor(-2147483633)
Gui.f_Formulas..maxbutton(False)
Gui.f_Formulas..mousepointer(0)
Gui.f_Formulas..sizeable(False)
Gui.f_Formulas.lblF1.create(label,"",True,930,255,1,195,195,True,0,Arial,8,-2147483633,0)
Gui.f_Formulas.lblF1.defaultvalue("")
Gui.f_Formulas.txtF1.create(textbox,"",True,930,300,0,195,405,True,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtF1.numericonly(1)
Gui.f_Formulas.txtF1.event(GotFocus,Focus)
Gui.f_Formulas.txtF1.defaultvalue("")
Gui.f_Formulas.txtF1.tabstop(True)
Gui.f_Formulas.txtF1.tabindex(1)
Gui.f_Formulas.txtF1.Event(LostFocus,MLGrid_Click)
Gui.f_Formulas.lblF2.create(label,"",True,930,255,1,1560,180,True,0,Arial,8,-2147483633,0)
Gui.f_Formulas.lblF2.defaultvalue("")
Gui.f_Formulas.txtS2.create(textbox,"",True,195,300,0,1245,405,False,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtS2.defaultvalue("")
Gui.f_Formulas.txtF2.create(textbox,"",True,930,300,0,1560,405,True,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtF2.numericonly(1)
Gui.f_Formulas.txtF2.event(GotFocus,Focus)
Gui.f_Formulas.txtF2.defaultvalue("")
Gui.f_Formulas.txtF2.tabstop(True)
Gui.f_Formulas.txtF2.tabindex(2)
Gui.f_Formulas.txtF2.Event(LostFocus,MLGrid_Click)
Gui.f_Formulas.txtS3.create(textbox,"",True,195,300,0,2610,405,False,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtS3.defaultvalue("")
Gui.f_Formulas.lblF3.create(label,"",True,930,255,1,2925,195,True,0,Arial,8,-2147483633,0)
Gui.f_Formulas.lblF3.defaultvalue("")
Gui.f_Formulas.txtF3.create(textbox,"",True,930,300,0,2925,405,True,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtF3.numericonly(1)
Gui.f_Formulas.txtF3.event(GotFocus,Focus)
Gui.f_Formulas.txtF3.defaultvalue("")
Gui.f_Formulas.txtF3.tabstop(True)
Gui.f_Formulas.txtF3.tabindex(3)
Gui.f_Formulas.txtF3.Event(LostFocus,MLGrid_Click)
Gui.f_Formulas.txtS4.create(textbox,"",True,195,300,0,3975,405,False,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtS4.defaultvalue("")
Gui.f_Formulas.txtF4.create(textbox,"",True,930,300,0,4290,405,True,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtF4.numericonly(1)
Gui.f_Formulas.txtF4.event(GotFocus,Focus)
Gui.f_Formulas.txtF4.defaultvalue("")
Gui.f_Formulas.txtF4.tabstop(True)
Gui.f_Formulas.txtF4.tabindex(4)
Gui.f_Formulas.txtF4.Event(LostFocus,MLGrid_Click)
Gui.f_Formulas.lblF4.create(label,"",True,930,255,1,4290,195,True,0,Arial,8,-2147483633,0)
Gui.f_Formulas.lblF4.defaultvalue("")
Gui.f_Formulas.txtS5.create(textbox,"",True,195,300,0,5340,405,False,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtS5.defaultvalue("")
Gui.f_Formulas.txtF5.create(textbox,"",True,930,300,0,5655,405,True,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtF5.numericonly(1)
Gui.f_Formulas.txtF5.event(GotFocus,Focus)
Gui.f_Formulas.txtF5.defaultvalue("")
Gui.f_Formulas.txtF5.tabstop(True)
Gui.f_Formulas.txtF5.tabindex(5)
Gui.f_Formulas.txtF5.Event(LostFocus,MLGrid_Click)
Gui.f_Formulas.lblF5.create(label,"",True,930,255,1,5655,195,True,0,Arial,8,-2147483633,0)
Gui.f_Formulas.lblF5.defaultvalue("")
Gui.f_Formulas.txtS6.Create(TextBox,"",True,195,300,0,6705,405,False,0,"Arial",8,-2147483643,1)
Gui.f_Formulas.txtF6.Create(TextBox,"",True,930,300,0,7020,405,True,0,"Arial",8,-2147483643,1)
Gui.f_Formulas.txtF6.Event(GotFocus,Focus)
Gui.f_Formulas.txtF6.Event(LostFocus,MLGrid_Click)
Gui.f_Formulas.txtF6.TabStop(True)
Gui.f_Formulas.txtF6.TabIndex(6)
Gui.f_Formulas.txtF6.NumericOnly(1)
Gui.f_Formulas.lblF6.Create(Label,"",True,930,255,0,7020,195,True,0,"Arial",8,-2147483633,0)
Gui.f_Formulas.txtS7.Create(TextBox,"",True,195,300,0,8070,405,False,0,"Arial",8,-2147483643,1)
Gui.f_Formulas.txtF7.Create(TextBox,"",True,930,300,0,8385,405,True,0,"Arial",8,-2147483643,1)
Gui.f_Formulas.txtF7.Event(GotFocus,Focus)
Gui.f_Formulas.txtF7.Event(LostFocus,MLGrid_Click)
Gui.f_Formulas.txtF7.TabStop(True)
Gui.f_Formulas.txtF7.TabIndex(7)
Gui.f_Formulas.txtF7.NumericOnly(1)
Gui.f_Formulas.lblF7.Create(Label,"",True,930,255,0,8385,195,True,0,"Arial",8,-2147483633,0)
Gui.f_Formulas.cmdOk.create(button)
Gui.f_Formulas.cmdOk.caption("Ok")
Gui.f_Formulas.cmdOk.size(855,375)
Gui.f_Formulas.cmdOk.position(195,960)
Gui.f_Formulas.cmdOk.event(Click,MLGrid_Click)
Gui.f_Formulas.cmdOk.defaultvalue("")
Gui.f_Formulas.cmdOk.tabstop(True)
Gui.f_Formulas.cmdOk.tabindex(9)
Gui.f_Formulas.lbl8.create(label,"Override",True,705,255,1,1545,795,True,0,Arial,8,-2147483633,0)
Gui.f_Formulas.lbl8.defaultvalue("")
Gui.f_Formulas.txtOverride.create(textbox,"",True,975,300,0,1545,1005,True,0,Arial,8,-2147483643,1)
Gui.f_Formulas.txtOverride.numericonly(1)
Gui.f_Formulas.txtOverride.event(GotFocus,Focus)
Gui.f_Formulas.txtOverride.defaultvalue("")
Gui.f_Formulas.txtOverride.tabstop(True)
Gui.f_Formulas.txtOverride.tabindex(8)
Gui.f_Formulas.txtOverride.Event(LostFocus,MLGrid_Click)
Gui.f_Formulas.lbl1.Create(Label,"Total",True,705,255,0,2895,795,True,0,"Arial",8,-2147483633,0)
Gui.f_Formulas.txtTotal.Create(TextBox,"",True,975,300,0,2895,1005,False,0,"Arial",8,-2147483643,1)
Gui.f_Formulas.txtTotal.NumericOnly(1)
Gui.f_Formulas.lblLB.Create(Label,"(",True,195,300,0,30,405,True,0,"Arial",12,-2147483633,0)
Gui.f_Formulas.lblRB.Create(Label,")",True,195,300,0,3840,405,True,0,"Arial",12,-2147483633,0)
Gui.F_WC_SETUP..create
Gui.F_WC_SETUP..caption("Workcenter Setup")
Gui.F_WC_SETUP..size(3690,4455)
Gui.F_WC_SETUP..minx(0)
Gui.F_WC_SETUP..miny(0)
Gui.F_WC_SETUP..position(0,0)
Gui.F_WC_SETUP..event(UnLoad,F_wc_setup_unload)
Gui.F_WC_SETUP..forecolor(0)
Gui.F_WC_SETUP..BackColor(-2147483633)
Gui.F_WC_SETUP..maxbutton(False)
Gui.F_WC_SETUP..mousepointer(0)
Gui.F_WC_SETUP..sizeable(False)
Gui.F_WC_SETUP.lbl1.create(label,"# Of Dies",True,1170,255,1,1170,765,True,0,Arial,10,-2147483633,0)
Gui.F_WC_SETUP.lbl1.fontstyle(True,False,False,False,False)
Gui.F_WC_SETUP.lbl1.defaultvalue("")
Gui.F_WC_SETUP.lbl2.create(label,"# Of Perfs",True,1335,255,1,1170,1455,True,0,Arial,10,-2147483633,0)
Gui.F_WC_SETUP.lbl2.fontstyle(True,False,False,False,False)
Gui.F_WC_SETUP.lbl2.defaultvalue("")
Gui.F_WC_SETUP.lbl3.create(label,"# Of Colors",True,1440,255,1,1170,2160,True,0,Arial,10,-2147483633,0)
Gui.F_WC_SETUP.lbl3.fontstyle(True,False,False,False,False)
Gui.F_WC_SETUP.lbl3.defaultvalue("")
Gui.F_WC_SETUP.lbl4.create(label,"Default Setup",True,1680,255,1,645,135,True,0,Arial,10,-2147483633,0)
Gui.F_WC_SETUP.lbl4.fontstyle(True,False,False,False,False)
Gui.F_WC_SETUP.lbl4.defaultvalue("")
Gui.F_WC_SETUP.txtDies.create(textbox,"",True,435,300,0,155,700,False,0,Arial,8,-2147483643,1)
Gui.F_WC_SETUP.txtDies.numericonly(2)
Gui.F_WC_SETUP.txtDies.defaultvalue("")
Gui.F_WC_SETUP.txtPerfs.create(textbox,"",True,435,300,0,155,1400,False,0,Arial,8,-2147483643,1)
Gui.F_WC_SETUP.txtPerfs.numericonly(2)
Gui.F_WC_SETUP.txtPerfs.defaultvalue("")
Gui.F_WC_SETUP.txtColors.create(textbox,"",True,435,300,0,155,2100,False,0,Arial,8,-2147483643,1)
Gui.F_WC_SETUP.txtColors.numericonly(2)
Gui.F_WC_SETUP.txtColors.defaultvalue("")
Gui.F_WC_SETUP.txtDefault.create(textbox,"",True,435,300,0,155,100,False,0,Arial,8,-2147483643,1)
Gui.F_WC_SETUP.txtDefault.numericonly(2)
Gui.F_WC_SETUP.txtDefault.defaultvalue("")
Gui.F_WC_SETUP.cmdAddDie.create(button)
Gui.F_WC_SETUP.cmdAddDie.caption("+")
Gui.F_WC_SETUP.cmdAddDie.size(375,225)
Gui.F_WC_SETUP.cmdAddDie.position(660,615)
Gui.F_WC_SETUP.cmdAddDie.event(Click,MLGrid_Click)
Gui.F_WC_SETUP.cmdAddDie.defaultvalue("")
Gui.F_WC_SETUP.cmdSubDie.create(button)
Gui.F_WC_SETUP.cmdSubDie.caption("-")
Gui.F_WC_SETUP.cmdSubDie.size(375,225)
Gui.F_WC_SETUP.cmdSubDie.position(660,900)
Gui.F_WC_SETUP.cmdSubDie.event(Click,MLGrid_Click)
Gui.F_WC_SETUP.cmdSubDie.defaultvalue("")
Gui.F_WC_SETUP.cmdAddPerf.create(button)
Gui.F_WC_SETUP.cmdAddPerf.caption("+")
Gui.F_WC_SETUP.cmdAddPerf.size(375,225)
Gui.F_WC_SETUP.cmdAddPerf.position(660,1315)
Gui.F_WC_SETUP.cmdAddPerf.event(Click,MLGrid_Click)
Gui.F_WC_SETUP.cmdAddPerf.defaultvalue("")
Gui.F_WC_SETUP.cmdSubPerf.create(button)
Gui.F_WC_SETUP.cmdSubPerf.caption("-")
Gui.F_WC_SETUP.cmdSubPerf.size(375,225)
Gui.F_WC_SETUP.cmdSubPerf.position(660,1600)
Gui.F_WC_SETUP.cmdSubPerf.event(Click,MLGrid_Click)
Gui.F_WC_SETUP.cmdSubPerf.defaultvalue("")
Gui.F_WC_SETUP.cmdAddColor.create(button)
Gui.F_WC_SETUP.cmdAddColor.caption("+")
Gui.F_WC_SETUP.cmdAddColor.size(375,225)
Gui.F_WC_SETUP.cmdAddColor.position(660,2015)
Gui.F_WC_SETUP.cmdAddColor.event(Click,MLGrid_Click)
Gui.F_WC_SETUP.cmdAddColor.defaultvalue("")
Gui.F_WC_SETUP.cmdSubColor.create(button)
Gui.F_WC_SETUP.cmdSubColor.caption("-")
Gui.F_WC_SETUP.cmdSubColor.size(375,225)
Gui.F_WC_SETUP.cmdSubColor.position(660,2300)
Gui.F_WC_SETUP.cmdSubColor.event(Click,MLGrid_Click)
Gui.F_WC_SETUP.cmdSubColor.defaultvalue("")
Gui.F_WC_SETUP.cmdOkay.create(button)
Gui.F_WC_SETUP.cmdOkay.caption("Okay")
Gui.F_WC_SETUP.cmdOkay.size(630,375)
Gui.F_WC_SETUP.cmdOkay.position(200,3330)
Gui.F_WC_SETUP.cmdOkay.event(Click,MLGrid_Click)
Gui.F_WC_SETUP.cmdOkay.defaultvalue("")
Gui.F_WC_SETUP.lbl5.create(label,"Override",True,870,255,1,200,2600,True,0,Arial,8,-2147483633,0)
Gui.F_WC_SETUP.lbl5.defaultvalue("")
Gui.F_WC_SETUP.txtOverride.create(textbox,"",True,1215,300,0,200,2800,True,0,Arial,8,-2147483643,1)
Gui.F_WC_SETUP.txtOverride.numericonly(1)
Gui.F_WC_SETUP.txtOverride.event(GotFocus,Focus)
Gui.F_WC_SETUP.txtOverride.defaultvalue("")
Gui.F_Upcharge..create
Gui.F_Upcharge..caption("Markup Description")
Gui.F_Upcharge..size(5505,8865)
Gui.F_Upcharge..minx(0)
Gui.F_Upcharge..miny(0)
Gui.F_Upcharge..position(0,0)
Gui.F_Upcharge..event(UnLoad,f_upcharge_unload)
Gui.F_Upcharge..forecolor(0)
Gui.F_Upcharge..BackColor(-2147483633)
Gui.F_Upcharge..maxbutton(False)
Gui.F_Upcharge..mousepointer(0)
Gui.F_Upcharge..sizeable(False)
Gui.F_Upcharge..ContextMenuCreate("ctxMarkup")
Gui.F_Upcharge..ContextMenuAddItem("ctxMarkup","Add",0,"Add Row")
Gui.F_Upcharge..ContextMenuAddItem("ctxMarkup","Delete",0,"Delete Row")
Gui.F_Upcharge..ContextMenuSetItemEventHandler("ctxMarkup","Add","MenuClick")
Gui.F_Upcharge..ContextMenuSetItemEventHandler("ctxMarkup","Delete","MenuClick")
Gui.F_Upcharge.gsfgMarkup.create(GsGridControl)
Gui.F_Upcharge.gsfgMarkup.size(5145,3495)
Gui.F_Upcharge.gsfgMarkup.position(105,690)
Gui.F_Upcharge.gsfgMarkup.ContextMenuAttach("ctxMarkup")
Gui.F_Upcharge.gsfgMarkup.Event(CellValueChanged,UpchargeButtons)
Gui.F_Upcharge.gsfgMarkup.AllowMouseWheel(False)
Gui.F_Upcharge.cmdMarkSave.create(button)
Gui.F_Upcharge.cmdMarkSave.caption("Save")
Gui.F_Upcharge.cmdMarkSave.size(855,375)
Gui.F_Upcharge.cmdMarkSave.position(120,7920)
Gui.F_Upcharge.cmdMarkSave.event(Click,UpchargeButtons)
Gui.F_Upcharge.cmdMarkSave.defaultvalue("")
Gui.F_Upcharge.GsGcQtyApplied.Create(GsGridControl)
Gui.F_Upcharge.GsGcQtyApplied.Size(5145,3495)
Gui.F_Upcharge.GsGcQtyApplied.Position(105,4275)
Gui.F_Upcharge.GsGcQtyApplied.Event(RowCellClick,UpchargeButtons)
Gui.F_Upcharge.lbl1.Create(Label,"Initial Markup",True,1185,255,0,105,105,True,0,"Arial",8,-2147483633,0)
Gui.F_Upcharge.txtInitial.Create(TextBox,"",True,1005,300,0,105,285,True,0,"Arial",8,-2147483643,1)
Gui.F_Upcharge.txtInitial.Event(LostFocus,UpchargeButtons)
Gui.F_Upcharge.lbl2.Create(Label,"*Right Click Markup Grid to Add or Delete Lines",True,3630,255,0,1605,465,True,0,"Arial",8,-2147483633,0)
Gui.F_OPCodeComments..Create
Gui.F_OPCodeComments..Caption("OP Code Comments")
Gui.F_OPCodeComments..Size(7995,9240)
Gui.F_OPCodeComments..MinX(0)
Gui.F_OPCodeComments..MinY(0)
Gui.F_OPCodeComments..Position(0,0)
Gui.F_OPCodeComments..BackColor(-2147483633)
Gui.F_OPCodeComments..MousePointer(0)
Gui.F_OPCodeComments..Event(UnLoad,F_OPCodeComments_UnLoad)
Gui.F_OPCodeComments.lbl1.Create(Label,"Initial Value *",True,1080,255,0,105,105,True,0,"Arial",8,-2147483633,0)
Gui.F_OPCodeComments.txtInitial.Create(TextBox,"",True,1020,300,0,105,315,True,0,"Arial",8,-2147483643,1)
Gui.F_OPCodeComments.txtInitial.NumericOnly(1)
Gui.F_OPCodeComments.txtInitial.Event(Change,OPCodeComments)
Gui.F_OPCodeComments.GsGcOPComments.Create(GsGridControl)
Gui.F_OPCodeComments.GsGcOPComments.Size(7335,6690)
Gui.F_OPCodeComments.GsGcOPComments.Position(105,765)
Gui.F_OPCodeComments.GsGcOPComments.Event(CellValueChanged,OPCodeComments)
Gui.F_OPCodeComments.GsGcOPComments.Event(RowCellClick,OPCodeComments)
Gui.F_OPCodeComments.lbl2.Create(Label,"Total *",True,690,255,0,6210,105,True,0,"Arial",8,-2147483633,0)
Gui.F_OPCodeComments.txtTotal.Create(TextBox,"",True,1215,300,0,6210,315,False,0,"Arial",8,-2147483643,1)
Gui.F_OPCodeComments.txtTotal.NumericOnly(1)
Gui.F_OPCodeComments.cmdOK.Create(Button)
Gui.F_OPCodeComments.cmdOK.Size(855,375)
Gui.F_OPCodeComments.cmdOK.Position(105,7950)
Gui.F_OPCodeComments.cmdOK.Caption("OK")
Gui.F_OPCodeComments.cmdOK.Event(Click,OPCodeComments)
Gui.F_OPCodeComments.lbl3.Create(Label,"* Labor: Initial Value and Grid is in minutes, Total is in Hours.",True,4875,255,0,2580,7665,True,0,"Arial",8,-2147483633,0)
Gui.F_OPCodeComments.lbl3.FontStyle(True,False,False,False,False)
Gui.F_RtSave..Create
Gui.F_RtSave..Caption("Router Creation")
Gui.F_RtSave..Size(7755,2295)
Gui.F_RtSave..MinX(0)
Gui.F_RtSave..MinY(0)
Gui.F_RtSave..Position(0,0)
Gui.F_RtSave..BackColor(-2147483633)
Gui.F_RtSave..MousePointer(0)
Gui.F_RtSave..Event(UnLoad,Cancel_Rt)
Gui.F_RtSave.lblRtMess.Create(Label,":!::!:",True,7125,765,0,240,255,True,0,"Arial",10,-2147483633,0)
Gui.F_RtSave.cmdNew.Create(Button)
Gui.F_RtSave.cmdNew.Size(1395,375)
Gui.F_RtSave.cmdNew.Position(4545,1155)
Gui.F_RtSave.cmdNew.Caption("Create New")
Gui.F_RtSave.cmdNew.Event(Click,New_RT)
Gui.F_RtSave.cmdSave.Create(Button)
Gui.F_RtSave.cmdSave.Size(1395,375)
Gui.F_RtSave.cmdSave.Position(3075,1155)
Gui.F_RtSave.cmdSave.Caption("Save Changes")
Gui.F_RtSave.cmdSave.Event(Click,OverrideRT)
Gui.F_RtSave.cmdCancel.Create(Button)
Gui.F_RtSave.cmdCancel.Size(1395,375)
Gui.F_RtSave.cmdCancel.Position(6030,1155)
Gui.F_RtSave.cmdCancel.Caption("Cancel")
Gui.F_RtSave.cmdCancel.Event(Click,Cancel_Rt)
Gui.F_RTRev..Create
Gui.F_RTRev..Caption("Router Revision Input")
Gui.F_RTRev..Size(6000,2055)
Gui.F_RTRev..MinX(0)
Gui.F_RTRev..MinY(0)
Gui.F_RTRev..Position(0,0)
Gui.F_RTRev..BackColor(-2147483633)
Gui.F_RTRev..MousePointer(0)
Gui.F_RTRev..Event(UnLoad,Cancel_Rt)
Gui.F_RTRev.lbl1.Create(Label,"Router",True,1935,255,0,180,225,True,0,"Arial",8,-2147483633,0)
Gui.F_RTRev.lbl2.Create(Label,"Rev",True,1020,255,0,2700,210,True,0,"Arial",8,-2147483633,0)
Gui.F_RTRev.txtRTRout.Create(TextBox,"",True,2235,300,0,210,435,True,0,"Arial",8,-2147483643,1)
Gui.F_RTRev.txtRTRout.Locked(True)
Gui.F_RTRev.txtRtRev.Create(TextBox,"",True,765,300,0,2655,435,True,0,"Arial",8,-2147483643,1)
Gui.F_RTRev.txtRtRev.MaxLength(3)
Gui.F_RTRev.cmdRevOK.Create(Button)
Gui.F_RTRev.cmdRevOK.Size(1395,375)
Gui.F_RTRev.cmdRevOK.Position(2790,1035)
Gui.F_RTRev.cmdRevOK.Caption("Create")
Gui.F_RTRev.cmdRevOK.Event(Click,RTSubroutine)
Gui.F_RTRev.cmdRevCancel.Create(Button)
Gui.F_RTRev.cmdRevCancel.Size(1395,375)
Gui.F_RTRev.cmdRevCancel.Position(4335,1035)
Gui.F_RTRev.cmdRevCancel.Caption("Cancel")
Gui.F_RTRev.cmdRevCancel.Event(Click,Cancel_Rt)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.Global.sDieSql.Declare(String)
Variable.Global.sUploadFilePath.Declare(String)
Variable.Global.sRouter.Declare(String)
V.Global.sRouterRev.Declare(String)
Program.External.Include.Library("GCG_3623_RtrUploadUPLRTRHR_V2.lib")
Program.External.Include.Library("GCG_3623_ORDUPL_UPLOAD_V1.lib")
Variable.Global.iPrevClick.Declare(Long,0)
Variable.Global.bSaved.Declare(Boolean,False)
Variable.Global.bFocus.Declare(Boolean,False)
Variable.Global.bRouter.Declare(Boolean,False)
Variable.Global.bNonInv.Declare(Boolean,False)
Variable.Global.sControl.Declare(String)
Variable.Global.iRow.Declare(Long,-1)
Variable.Global.sCol.Declare(String)
Variable.Global.sWC.Declare(String)
Variable.Global.sDropdownlist.Declare(String,"ALL")
Variable.Global.iSumPrevClick.Declare(Long,-1)
Variable.Global.iSumBotIndex.Declare(Long,-1)
Variable.Global.iMarkupRow.Declare(Long,-1)
Variable.Global.iPriceRow.Declare(Long,-1)
Variable.Global.bLoadMode.Declare(Boolean,False)
V.Global.lBottomRow.declare(Long,-1)
V.Global.slastPartno.Declare(String)
V.Global.slastLoc.Declare(String)
v.Global.sTestWC.Declare(String)
v.Global.bArchived.Declare(Boolean)
V.Global.bRTFlag.Declare(Boolean, False)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sUser.Declare(String)
V.Local.sSQL.Declare(String)
v.Local.iCount.Declare(Long)
v.Local.bExist.Declare(Boolean)

f.ODBC.Connection!Con.OpenConnection(v.Ambient.PDSN,v.Ambient.PUser,v.Ambient.PPass)

f.Intrinsic.String.Build("{0}\GCG_3623_DICE.ico",v.Caller.GasDir,v.Local.sSQL)
f.Intrinsic.File.Exists(v.Local.sSQL,v.Local.bExist)
f.Intrinsic.Control.If(v.Local.bExist,=,True)
	Gui.F_New_Open..Icon(v.Local.sSQL)
	Gui.F_Label_Est..Icon(v.Local.sSQL)
	Gui.f_Formulas..Icon(v.Local.sSQL)
	Gui.F_OPCodeComments..Icon(v.Local.sSQL)
	Gui.F_Upcharge..Icon(v.Local.sSQL)
	Gui.F_WC_SETUP..Icon(v.Local.sSQL)
	Gui.F_Websites..Icon(v.Local.sSQL)
f.Intrinsic.Control.EndIf

F.Intrinsic.UI.SetBrowserHotTypeAhead(True)
Gui.F_Label_Est.tabx1.SetTab(0)
'Check Credentials
F.Intrinsic.Control.CallSub(Check_credentials)
'Build all the DataTables and Grids
f.Intrinsic.Control.CallSub(datatablecreation)
'populate the drop down lists on the material tab drop down lists
F.Intrinsic.control.CallSub(Die_ddl_upload)
'add PL to ddlHPL
Gui.F_Label_Est.ddlHPL.AddItem("")
V.Local.sSQL.Set("SELECT DISTINCT PRODUCT_LINE FROM V_PRODUCT_LINE ORDER BY PRODUCT_LINE ASC")
F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstPL",V.Local.sSQL)
F.Intrinsic.Control.DoUntil(V.ODBC.Con!rstPL.EOF,=,True)
	'Add PL to the DDL
	Gui.F_Label_Est.ddlHPL.AddItem(V.ODBC.Con!rstPL.FieldValTrim!PRODUCT_LINE)
	F.ODBC.Con!rstPL.MoveNext
F.Intrinsic.Control.Loop
F.ODBC.Con!rstPL.Close
'Add to Wind Direction
Gui.F_Label_Est.ddlRWindDir.AddItem("")
Gui.F_Label_Est.ddlRWindDir.AddItem("IN")
Gui.F_Label_Est.ddlRWindDir.AddItem("OUT")
'add to Process Group ddl
Gui.F_Label_Est.ddlHProcessGrp.AddItem("")
Gui.F_Label_Est.ddlHProcessGrp.AddItem("Distribution")
Gui.F_Label_Est.ddlHProcessGrp.AddItem("Manufacturing")
'locking/unlocking selected est notes textbox
Gui.F_Label_Est.txtSelectedEstNote.Locked(True)
'forcing all text to be uppercase
Gui.F_Label_Est.txtMPart.Mask(">")
Gui.F_Label_Est.txtHistFinPart.Mask(">")
Gui.F_Label_Est.txtLWC.Mask(">")
Gui.F_Label_Est.txtFinishPart.Mask(">")
Gui.F_Label_Est.txtFinishRouter.Mask(">")
Gui.F_Label_Est.txtFinishRev.Mask(">")
Gui.F_Label_Est.txtCustomer.Mask(">")
Gui.F_Label_Est.txtFinishLoc.Mask(">")
Gui.F_Label_Est.txtdesc.Mask(">")
Gui.F_Label_Est.txtHUM.Mask(">")
gui.F_Label_Est.txtPECust.Mask(">")
Gui.F_Label_Est.txtMPartRev.Mask(">")
Gui.F_Label_Est.txtMatLoc.Mask(">")
Gui.F_Label_Est.txtMPartDesc.Mask(">")
Gui.F_Label_Est.txtLWCDesc.Mask(">")
Gui.F_Label_Est.txtSumOpCode.Mask(">")
Gui.F_Label_Est.txtSumOPDesc.Mask(">")
Gui.F_Label_Est.txtSumOpVend.Mask(">")

Gui.F_Label_Est.txtRODAct.Mask("############.####")
Gui.F_Label_Est.txtLbsCart.Mask("############.####")
Gui.F_Label_Est.txtOLbsMLabel.Mask("############.####")

'Setting up formula fields
f.Intrinsic.Control.For(v.Local.iCount,2,7)
	Gui.f_Formulas.txtS[v.Local.iCount].Alignment(2)
	Gui.f_Formulas.txtS[v.Local.iCount].FontStyle(True,False,False,False,False)
f.Intrinsic.Control.Next(v.Local.iCount)
Gui.f_Formulas.lblLB.Visible(False)
Gui.f_Formulas.lblRB.Visible(False)

f.Intrinsic.Control.CallSub(selection,"ControlName","CMDOPEN")
'Gui.F_New_Open..AlwaysOnTop(True)
'Gui.F_New_Open..Show
'Gui.F_New_Open..AlwaysOnTop(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Main.End

Program.Sub.f_websites_unload.Start
F.Intrinsic.Control.SetErrorHandler("f_websites_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'close the websites window
Gui.F_Websites..Visible(false)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("f_websites_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.f_websites_unload.End

Program.Sub.f_new_open_unload.Start
F.Intrinsic.Control.SetErrorHandler("f_new_open_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtEstimate.Text, <>, "")
	F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Screen.F_Label_Est!txtEstimate.Text,"LOCK","Unlock")
F.Intrinsic.Control.EndIf
F.ODBC.Connection!Con.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("f_new_open_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
Function.Intrinsic.Control.EndIf
Program.Sub.f_new_open_unload.End

Program.Sub.f_formulas_unload.Start
F.Intrinsic.Control.SetErrorHandler("f_formulas_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'clear out the fields
Gui.f_Formulas..Visible(False)

gui.f_Formulas.lblF1.Caption("")
gui.f_Formulas.lblF2.Caption("")
gui.f_Formulas.lblF3.Caption("")
gui.f_Formulas.lblF4.Caption("")
gui.f_Formulas.lblF5.Caption("")
gui.f_Formulas.lblF6.Caption("")
gui.f_Formulas.lblF7.Caption("")

gui.f_Formulas.txtF1.Text("")
gui.f_Formulas.txtF1.Enabled(True)
gui.f_Formulas.txtF2.Text("")
gui.f_Formulas.txtF2.Enabled(True)
gui.f_Formulas.txtF3.Text("")
gui.f_Formulas.txtF3.Enabled(True)
gui.f_Formulas.txtF4.Text("")
gui.f_Formulas.txtF4.Enabled(True)
gui.f_Formulas.txtF5.Text("")
gui.f_Formulas.txtF5.Enabled(True)
gui.f_Formulas.txtF6.Text("")
gui.f_Formulas.txtF6.Enabled(True)
gui.f_Formulas.txtF7.Text("")
gui.f_Formulas.txtF7.Enabled(True)

gui.f_Formulas.txtS2.Text("")
gui.f_Formulas.txtS2.Visible(True)
gui.f_Formulas.txtS3.Text("")
gui.f_Formulas.txtS3.Visible(True)
gui.f_Formulas.txtS4.Text("")
gui.f_Formulas.txtS4.Visible(True)
gui.f_Formulas.txtS5.Text("")
gui.f_Formulas.txtS5.Visible(True)
gui.f_Formulas.txtS6.Text("")
gui.f_Formulas.txtS6.Visible(True)
gui.f_Formulas.txtS7.Text("")
gui.f_Formulas.txtS7.Visible(True)

Gui.f_Formulas.txtOverride.Text("")
Gui.f_Formulas.txtOverride.Visible(True)

Gui.f_Formulas.lbl8.Visible(True)

Gui.f_Formulas.txtTotal.Text("")

Gui.f_Formulas.txtF1.ClearMetadata
Gui.f_Formulas.txtF3.ClearMetadata

Gui.f_Formulas.lblLB.Visible(False)
Gui.f_Formulas.lblRB.Visible(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("f_formulas_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_label_est_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.f_formulas_unload.End

Program.Sub.f_wc_setup_unload.Start
F.Intrinsic.Control.SetErrorHandler("f_wc_setup_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Clear the fields back out
Gui.F_WC_SETUP.txtDefault.Text(0)
Gui.F_WC_SETUP.txtDies.Text(0)
Gui.F_WC_SETUP.txtPerfs.Text(0)
Gui.F_WC_SETUP.txtColors.Text(0)
Gui.F_WC_SETUP.txtOverride.Text("")

Gui.F_WC_SETUP..Visible(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("f_wc_setup_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.f_wc_setup_unload.End

Program.Sub.f_upcharge_unload.Start
f.Data.DataTable.DeleteRow("Markup")
f.Data.DataTable.DeleteRow("QtyApplied")
Gui.F_Upcharge.txtInitial.Text("")

Gui.F_Upcharge..Visible(False)
Program.Sub.f_upcharge_unload.End

Program.Sub.f_Label_est_unload.Start
F.Intrinsic.Control.SetErrorHandler("f_label_est_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sTables.Declare(String)
V.Local.iCount.Declare(Long)
V.Local.iRet.Declare(Long)

Gui.F_Label_Est..Visible(False)

'set router number
F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtFinishPart.Text,<>,"")
	V.Global.sRouter.Set(V.Screen.F_Label_Est!txtFinishPart.Text.Trim)
F.Intrinsic.Control.Else
'	V.Global.sRouter.Set(V.Screen.F_Label_Est!txtEstimate.Text)
	V.Global.sRouter.Set("")
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("SELECT SAVED FROM GCG_3623_EST WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)
F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstVal",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstVal.EOF,=,False)
	'Check if Screen Saved
	F.Intrinsic.Control.If(V.ODBC.Con!rstVal.FieldValLTrim!SAVED,=,"False")
		F.Intrinsic.UI.Msgbox("Would you like to save the Estimate?","Save Estimate",4,V.Local.iRet)
		'If customer say yes save screen
		F.Intrinsic.Control.If(V.Local.iRet,=,6)
			F.Intrinsic.Control.CallSub(Save_est)
			'Check to see if Router created
			F.Intrinsic.Control.If(V.Global.bRouter,=,False)
				'If Router is blank don't ask user to save
				F.Intrinsic.Control.If(V.Global.sRouter.Length,<>,0)
					F.Intrinsic.UI.Msgbox("Would you like to save the Router?","Save Router",4,V.Local.iRet)
					'If user selects Yes create Router
					F.Intrinsic.Control.If(V.Local.iRet,=,6)
						F.Intrinsic.Control.CallSub(Pricingtab)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		'If user doesn't want to save screen see if they have a router
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Global.bRouter,=,True)
				'ask if they want to delete the router
				F.Intrinsic.UI.Msgbox("Would you like to delete the Router?","Delete Router",4,V.Local.iRet)
				'if user selects Yes delete router
				F.Intrinsic.Control.If(V.Local.iRet,=,6)
					'delete the router because they said to
					F.Intrinsic.Control.CallSub(Deleterouter)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	'estimate has been saved before so we need to see if it has been changed lately
	F.Intrinsic.Control.Else
		'check to see if any changes have been made
		F.Intrinsic.Control.If(V.Global.bSaved,=,False)
			'Ask if they want to save the Estimate
			F.Intrinsic.UI.Msgbox("Would you like to save the Estimate?","Save Estimate",4,V.Local.iRet)
			'if customer says yes save screen'
			F.Intrinsic.Control.If(V.Local.iRet,=,6)
				F.Intrinsic.Control.CallSub(Save_est)
				'Check to see if Router created
				F.Intrinsic.Control.If(V.Global.bRouter,=,False)
					'If Router is blank don't ask user to save
					F.Intrinsic.Control.If(V.Global.sRouter.Length,<>,0)
						'ask if they want to save router
						F.Intrinsic.UI.Msgbox("Would you like to save the Router?","Save Router",4,V.Local.iRet)
						'if user selects yes create router
						F.Intrinsic.Control.If(V.Local.iRet,=,6)
							F.Intrinsic.Control.CallSub(Pricingtab)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			'they do not want to save the estimate
			F.Intrinsic.Control.Else
				'Check to see if a router has been created
				F.Intrinsic.Control.If(V.Global.bRouter,=,True)
					'If Router is blank don't ask user to delete
					F.Intrinsic.Control.If(V.Global.sRouter.Length,<>,0)
						'as if they want to delete the router
						F.Intrinsic.UI.Msgbox("Would you like to delete the Router?","Delete Router",4,V.Local.iRet)
						'if user selects yes delete router
						F.Intrinsic.Control.If(V.Local.iRet,=,6)
							'delete the router because they said to
							F.Intrinsic.Control.CallSub(Deleterouter)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstVal.Close
'reset router saved to false
V.Global.bRouter.Set(False)
'unlock the estimate
F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Screen.F_Label_Est!txtEstimate.Text,"LOCK","Unlock")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("f_label_est_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.f_Label_est_unload.End

Program.Sub.F_OPCodeComments_UnLoad.Start
F.Intrinsic.Control.SetErrorHandler("F_OPCodeComments_UnLoad_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'We are closing the OP Code screen so lets reset the values
f.Intrinsic.Control.BlockEvents
Gui.F_OPCodeComments.txtInitial.Text("")
f.Intrinsic.Control.UnBlockEvents
Gui.F_OPCodeComments.txtInitial.ClearMetadata
Gui.F_OPCodeComments.txtTotal.Text("")

'do we need to close the data table or just set everything blank?
f.Data.DataTable.Close("OPCode")

Gui.F_OPCodeComments..Visible(False)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("F_OPCodeComments_UnLoad_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.F_OPCodeComments_UnLoad.End

Program.Sub.DataTableCreation.Start
F.Intrinsic.Control.SetErrorHandler("DataTableCreation_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.sTypes.Declare(string)

'We are going to create all of the data tables and assign their properties here
'Create data table and view for Run Qty
f.Intrinsic.Control.If(v.DataTable.RunQty.Exists,=,True)
	f.Data.DataTable.Close("RunQty")
f.Intrinsic.Control.EndIf
f.Data.DataTable.Create("RunQty",True)
f.Data.DataTable.AddColumn("RunQty","Line","String")
f.Data.DataTable.AddColumn("RunQty","Qty","Float")
'Create a dataview
f.Data.DataView.Create("RunQty","RunQtyView")
'Create Gridview
Gui.F_Label_Est.gsfgRunQuantities.AddGridviewFromDataview("GridRunQty","RunQty","RunQtyView")
'Add to grid
Gui.F_Label_Est.gsfgRunQuantities.MainView("GridRunQty")
'Set the grids to allow enter to move down
Gui.F_Label_Est.gsfgRunQuantities.SetGridviewProperty("GridRunQty","EnterKeyNavigation","Vertical")
'Create buildstyle
Gui.F_Label_Est.gsfgRunQuantities.SetColumnProperty("GridRunQty","Line","MaxWidth",45)
Gui.F_Label_Est.gsfgRunQuantities.SetColumnProperty("GridRunQty","Line","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgRunQuantities.SetColumnProperty("GridRunQty","Line","CellHAlignment","Center")
Gui.F_Label_Est.gsfgRunQuantities.SetColumnProperty("GridRunQty","Qty","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgRunQuantities.SetColumnProperty("GridRunQty","Qty","ReadOnly",False)
Gui.F_Label_Est.gsfgRunQuantities.SetColumnProperty("GridRunQty","Qty","AllowEdit",True)
Gui.F_Label_Est.gsfgRunQuantities.SetColumnProperty("GridRunQty","Qty","EditMaskType","numeric")
Gui.F_Label_Est.gsfgRunQuantities.SetColumnProperty("GridRunQty","Qty","CellHAlignment","Center")

'Create huge datatable
f.Intrinsic.Control.If(v.DataTable.FullTable.Exists,=,True)
	f.Data.DataTable.Close("FullTable")
f.Intrinsic.Control.EndIf
f.Data.DataTable.Create("FullTable",True)
f.Data.DataTable.AddColumn("FullTable","Row","Long",0)
f.Data.DataTable.AddColumn("FullTable","Pos","Float",0)
f.Data.DataTable.AddColumn("FullTable","Est_No","Long",0)
f.Data.DataTable.AddColumn("FullTable","Router","String","")
f.Data.DataTable.AddColumn("FullTable","Seq","String","")
f.Data.DataTable.AddColumn("FullTable","LMO","String","")
f.Data.DataTable.AddColumn("FullTable","Part","String","")
f.Data.DataTable.AddColumn("FullTable","Rev","String","")
f.Data.DataTable.AddColumn("FullTable","Loc","String","")
f.Data.DataTable.AddColumn("FullTable","Code","String","")
f.Data.DataTable.AddColumn("FullTable","Description","String","")
f.Data.DataTable.AddColumn("FullTable","Freq","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","Width","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","Weight","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","Length","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","Cost","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","ShowCost","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","MSI","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","Qty","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","UM","String","")
f.Data.DataTable.AddColumn("FullTable","StdCost","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","CrewSize","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","Setup","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","Cost/um","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","TotalCost","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","DirCost","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","OHCost","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","LbrHrs","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","MinCost","Float",0.00)
f.Data.DataTable.AddColumn("FullTable","Comments","String","")
f.Data.DataTable.AddColumn("FullTable","FormulaM","String","")
f.Data.DataTable.AddColumn("FullTable","FormulaQ","String","")
'FEQ '10/26/2018 'New columns to the "Browser"
f.Data.DataTable.AddColumn("FullTable","RawMatl","String","")
f.Data.DataTable.AddColumn("FullTable","Streams","String","")
f.Data.DataTable.AddColumn("FullTable","Finishing","String","")
f.Data.DataTable.AddColumn("FullTable","PressWC","String","")


'Create dataview for material
f.Data.DataView.Create("FullTable","MaterialBottom",22,"LMO = 'M'","Row asc")
'Create GridView
Gui.F_Label_Est.gsfgMaterialBottom.AddGridviewFromDataview("GridMaterialBottom","FullTable","MaterialBottom")
'Add to Grid
Gui.F_Label_Est.gsfgMaterialBottom.MainView("GridMaterialBottom")

'Create Buildstyle

'Hiding material sections
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Est_No","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Router","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Seq","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","LMO","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Rev","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","StdCost","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","CrewSize","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","TotalCost","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","DirCost","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","OHCost","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","LbrHrs","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MinCost","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Comments","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","FormulaM","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","FormulaQ","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","RawMatl","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Streams","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Finishing","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","PressWC","Visible",False)

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Row","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Pos","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Loc","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Weight","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Length","Visible",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","Visible",False)

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","MaxLength",20)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","VisibleIndex", 1)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","Width", "300")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Freq","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Freq","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Freq","EditMaskType","numeric")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Freq","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Freq","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Freq","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Freq","VisibleIndex", 2)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Freq","Width", "100")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","EditMaskType","numeric")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","DisplayCustomNumeric","0.000")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","VisibleIndex", 3)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","MSI","Width", "100")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Description","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Description","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Description","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Description","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Description","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Description","MaxLength",30)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Description","VisibleIndex", 4)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Description","Width", "400")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Width","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Width","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Width","EditMaskType","numeric")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Width","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Width","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Width","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Width","VisibleIndex", 5)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Width","Width", "100")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","DisplayCustomNumeric","0.00###")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","EditMaskType","numeric")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","EditMask","###,###,##0.00###")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","Caption","Cost")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","VisibleIndex", 6)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","ShowCost","Width", "100")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","ReadOnly",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","AllowEdit",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","Caption","OP Code")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","MaxLength",10)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","VisibleIndex", 7)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Code","Width", "100")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","ReadOnly",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","AllowEdit",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","EditMaskType","numeric")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","VisibleIndex", 8)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Qty","Width", "150")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","UM","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","UM","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","UM","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","UM","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","UM","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","UM","MaxLength",2)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","UM","VisibleIndex", 9)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","UM","Width", "75")

Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","EditMaskType","numeric")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","VisibleIndex", 10)
Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Setup","Width", "200")

'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","EditMaskType","RegEx")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","EditMask","[a-zA-Z0-9]{0,20}")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Part","EditMask","[^*\*]{0,10}")

'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Loc","ReadOnly",False)
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Loc","AllowEdit",True)
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Loc","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Loc","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Loc","CellBorderColor","Black")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Loc","MaxLength",2)

'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Weight","ReadOnly",False)
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Weight","AllowEdit",True)
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Weight","EditMaskType","numeric")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Weight","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Weight","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Weight","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Length","ReadOnly",False)
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Length","AllowEdit",True)
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Length","EditMaskType","numeric")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Length","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Length","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Length","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","ReadOnly",False)
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","AllowEdit",True)
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","DisplayCustomNumeric","0.00##")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","EditMaskType","numeric")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","EditMask","###,###,##0.00##")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgMaterialBottom.SetColumnProperty("GridMaterialBottom","Cost/um","CellBorderColor","Black")

'Create View for labor
f.Data.DataView.Create("FullTable","LaborBottom",22,"LMO = 'L'","Row asc")
'Set Labor GridView
Gui.F_Label_Est.gsfgLaborBottom.AddGridviewFromDataview("GridLaborBottom","FullTable","LaborBottom")
Gui.F_Label_Est.gsfgLaborBottom.MainView("GridLaborBottom")

'Hiding Labor sections
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Est_No","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Router","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Seq","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","LMO","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Rev","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Loc","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Freq","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Width","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Weight","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Length","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Cost","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","MSI","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","UM","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Cost/um","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","TotalCost","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","DirCost","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","OHCost","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","LbrHrs","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","MinCost","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Comments","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","FormulaM","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","FormulaQ","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","RawMatl","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Streams","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Finishing","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","PressWC","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Row","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Pos","Visible",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","StdCost","Visible",False)

'Set the column properties
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Part","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Part","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Part","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Part","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Part","Caption","Workcenter")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Part","MaxLength",20)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Part","Width", "200")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Part","VisibleIndex", 1)

Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Description","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Description","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Description","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Description","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Description","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Description","MaxLength",30)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Description","Width", "250")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Description","VisibleIndex", 2)

Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","EditMaskType","numeric")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","Caption","Std Rate")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","Width", "100")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","ShowCost","VisibleIndex", 3)

Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","ReadOnly",True)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","AllowEdit",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","Caption","OP Code")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","MaxLength",50)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","Width", "200")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Code","VisibleIndex", 4)

Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","ReadOnly",True)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","AllowEdit",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","EditMaskType","numeric")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","Caption","Labels per Hour")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","Width", "250")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Qty","VisibleIndex", 5)

Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","EditMaskType","numeric")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","Width", "250")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","Setup","VisibleIndex", 6)

Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","CrewSize","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","CrewSize","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","CrewSize","EditMaskType","numeric")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","CrewSize","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","CrewSize","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","CrewSize","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","CrewSize","Width", "75")
Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","CrewSize","VisibleIndex", 7)

'Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","StdCost","ReadOnly",False)
'Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","StdCost","AllowEdit",True)
'Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","StdCost","EditMaskType","numeric")
'Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","StdCost","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","StdCost","CellBorderColor","Black")
'Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","StdCost","Caption","Std Cost")
'Gui.F_Label_Est.gsfgLaborBottom.SetColumnProperty("GridLaborBottom","StdCost","HeaderHAlignment","Center")

'Create DataView for Summary
f.Data.DataView.Create("FullTable","Summary",22,"","Pos asc")
'Set Summary to grid
Gui.F_Label_Est.gsfgSummaryTop.AddGridviewFromDataview("GridSummary","FullTable","Summary")
Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")

'Hiding summary sections
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Est_No","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Row","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Rev","Visible", False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Loc","Visible", False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Router","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Width","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Weight","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Length","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Cost","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","MSI","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","StdCost","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","CrewSize","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Cost/um","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Comments","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","FormulaM","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","FormulaQ","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","RawMatl","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Streams","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Finishing","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","PressWC","Visible",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","MinCost","Visible", False)

'Buildstyle for summary
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Router","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Seq","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","LMO","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Part","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Code","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Code","Caption","OP")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Setup","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Qty","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Qty","DisplayCustomNumeric","0.00#")
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Qty","Caption","Runtime")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","ShowCost","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","ShowCost","DisplayCustomNumeric","0.00#")
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","ShowCost","Caption","Rate")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Freq","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Description","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Description","Caption","Desc")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","UM","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","TotalCost","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","DirCost","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","OHCost","HeaderHAlignment","Center")

'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","LbrHrs","HeaderHAlignment","Center")

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","CellHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","Caption","Position")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","EditMaskType","numeric")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","ReadOnly",False)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","AllowEdit",True)
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","Width","100")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","VisibleIndex",1)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Seq","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Seq","Width","135")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Seq","VisibleIndex",2)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","LMO","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","LMO","Width","100")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","LMO","VisibleIndex",3)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Part","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Part","Width","100")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Part","VisibleIndex",4)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Code","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Code","Caption","OP")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Code","Width","135")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Code","VisibleIndex",5)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Setup","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Setup","Width","135")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Setup","VisibleIndex",6)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Qty","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Qty","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Qty","Caption","Runtime")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Qty","Width","135")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Qty","VisibleIndex",7)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","ShowCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","ShowCost","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","ShowCost","Caption","Rate")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","ShowCost","Width","135")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","ShowCost","VisibleIndex",8)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Freq","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Freq","Width","100")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Freq","VisibleIndex",9)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Description","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Description","Caption","Desc")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Description","Width","350")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Description","VisibleIndex",10)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","UM","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","UM","Width","50")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","UM","VisibleIndex",11)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","TotalCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","TotalCost","Width","100")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","TotalCost","VisibleIndex",12)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","DirCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","DirCost","Width","100")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","DirCost","VisibleIndex",13)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","OHCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","OHCost","Width","100")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","OHCost","VisibleIndex",14)

Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","LbrHrs","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","LbrHrs","Width","100")
Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","LbrHrs","VisibleIndex",15)

'Positioning columns
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Router","VisibleIndex",0)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Rev","VisibleIndex",4)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Loc","VisibleIndex",5)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","MinCost","VisibleIndex",17)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Row","VisibleIndex",18)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Pos","VisibleIndex",19)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Width","VisibleIndex",20)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Weight","VisibleIndex",21)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Length","VisibleIndex",22)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Cost","VisibleIndex",23)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","MSI","VisibleIndex",24)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","StdCost","VisibleIndex",25)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","CrewSize","VisibleIndex",26)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Cost/um","VisibleIndex",27)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Comments","VisibleIndex",28)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Est_No","VisibleIndex",29)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","FormulaM","VisibleIndex",30)
'Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","FormulaQ","VisibleIndex",31)

'Customer did not want the alternate colored grids. All enableappearance rows are commented out
'Gui.F_Label_Est.gsfgSummaryTop.SetGridviewProperty("GridSummary","EnableAppearanceEvenRow",True)

'Pricing Table
f.Intrinsic.Control.If(v.DataTable.Pricing.Exists,=,True)
	f.Data.DataTable.Close("Pricing")
f.Intrinsic.Control.EndIf
f.Data.DataTable.Create("Pricing",True)
f.Data.DataTable.AddColumn("Pricing","Est_No","Long",0)
f.Data.DataTable.AddColumn("Pricing","Router","String","")
f.Data.DataTable.AddColumn("Pricing","Quantity","Float",0)
f.Data.DataTable.AddColumn("Pricing","Direct","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","Material","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","Outside","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","Labor","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","LaborHrs","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","Overhead","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","TotalCost","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","UnitCost","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","Markup","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","UnitPrice","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","Total","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","MarginP","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","MarginD","Float",0.00)
f.Data.DataTable.AddColumn("Pricing","Formula","String","")

'Function.Intrinsic.Debug.InvokeDebugger
'Function.Intrinsic.Debug.Stop

'Pricing dataview
f.Data.DataView.Create("Pricing","PricingView",22,"","Quantity asc")
Gui.F_Label_Est.gsfgPricingInfo.AddGridviewFromDataview("GridPricing","Pricing","PricingView")
Gui.F_Label_Est.gsfgPricingInfo.MainView("GridPricing")

Gui.F_Label_Est.gsfgPricingInfo.SetGridviewProperty("GridPricing","EnterKeyNavigation","Vertical")
'Pricing column properties
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Router","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Quantity","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Direct","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Material","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Outside","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Labor","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","LaborHrs","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","LaborHrs","Caption","Labor Hrs")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Overhead","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitCost","Caption","Unit Cost")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Markup","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Markup","ReadOnly",True)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Markup","AllowEdit",False)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Markup","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Markup","CellBorderColor","Black")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Markup","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Markup","EditMaskType","numeric")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Markup","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","Caption","Unit Price")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","ReadOnly",False)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","AllowEdit",True)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","CellBorderColor","Black")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","DisplayCustomNumeric","0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","EditMaskType","numeric")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","UnitPrice","EditMask","###,###,##0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Total","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Total","ReadOnly",False)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Total","AllowEdit",True)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Total","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Total","CellBorderColor","Black")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Total","DisplayCustomNumeric","0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Total","EditMaskType","numeric")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Total","EditMask","###,###,##0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","Caption","Margin %")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","ReadOnly",False)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","AllowEdit",True)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","CellBorderColor","Black")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","DisplayCustomNumeric","0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","EditMaskType","numeric")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginP","EditMask","###,###,##0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","Caption","Margin $")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","ReadOnly",False)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","AllowEdit",True)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","CellBorderColor","Black")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","DisplayCustomNumeric","0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","EditMaskType","numeric")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","MarginD","EditMask","###,###,##0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","TotalCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","TotalCost","Caption","Total Cost")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","TotalCost","DisplayCustomNumeric","0.00")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","TotalCost","EditMaskType","numeric")
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","TotalCost","EditMask","###,###,##0.00")

Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Est_No","Visible",False)
Gui.F_Label_Est.gsfgPricingInfo.SetColumnProperty("GridPricing","Formula","Visible",False)

'Previous Table '#3mod
f.Intrinsic.Control.If(v.DataTable.PrevEst.Exists,=,True)
	f.Data.DataTable.Close("PrevEst")
f.Intrinsic.Control.EndIf

f.Data.DataTable.CreateFromSQL("PrevEst","Con","SELECT EST_NO, RTRIM(CUSTOMER) AS CUSTOMER,RTRIM(FINISH_PART) AS FINISH_PART, LBL_WIDTH, LBL_DEPTH, NUM_COLORS, RTRIM(CREATED_BY) AS CREATED_BY, EST_DATE, RTRIM(H_SALES_REP) AS H_SALES_REP, QUOTE_NO,  FOR_MATL, HACRPRESS, ROLLS, FANFOLD, SHEETS, PRESS_WC FROM GCG_3623_EST WHERE SAVED = 1",True)
F.Data.DataTable.AddExpressionColumn("PrevEst", "FINISHING", "String", "IIF([ROLLS]='TRUE', 'Rolls', IIF([FANFOLD]='TRUE', 'Fanfold', IIF([SHEETS]='TRUE', 'Sheets', '')))")
f.Data.DataView.Create("PrevEst","PrevEstView",22,"ISNULL(H_SALES_REP,'') <> 'Archived'","EST_NO DESC, CUSTOMER ASC")
Gui.F_Label_Est.gsfgHPrevEst.AddGridviewFromDataview("GridPrevEst","PrevEst","PrevEstView")
Gui.F_Label_Est.gsfgHPrevEst.MainView("GridPrevEst")

F.Intrinsic.Control.CallSub(PrevEstProperties)
'Preview Column Properties
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","Caption","Est Num")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","Caption","Customer")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","Caption","Finish Part")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","Caption","Width")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","Caption","Label Depth")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","Caption","Colors")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","Caption","Estimator")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","Caption","Est Date")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","DisplayCustomDateTime","d")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","H_SALES_REP","Visible",False)

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","Caption","Quote Num")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","Caption","Material")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","Caption","Streams")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","ROLLS","Visible",False)
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FANFOLD","Visible",False)
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","SHEETS","Visible",False)

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","Caption","Finishing")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","CellBorderColor","Black")

'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","Caption","Press")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","CellHAlignment","Center")
'Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","CellBorderColor","Black")

''Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","EnableAppearanceEvenRow",True)
'Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","Editable",False)
'Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","ReadOnly",True)
'Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","ShowGroupPanel",True)

'Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","OptionsViewShowAutoFilterRow",True)

'Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","OptionsSelectionEnableAppearanceFocusedRow",False)

'Gui.F_Label_Est.gsfgHPrevEst.AddStyleFormatCondition("GridPrevEst","H_SALES_REP","Archived","Equal","Archived")
'Gui.F_Label_Est.gsfgHPrevEst.SetStyleFormatConditionProperty("GridPrevEst","H_SALES_REP","Archived","BackColor","Moccasin")
'Gui.F_Label_Est.gsfgHPrevEst.SetStyleFormatConditionProperty("GridPrevEst","H_SALES_REP","Archived","ApplyToRow",True)

'Create Material Top Grid
f.Intrinsic.Control.If(v.DataTable.MaterialTop.Exists,=,True)
	f.Data.DataTable.Close("MaterialTop")
f.Intrinsic.Control.EndIf
f.Data.DataTable.Create("MaterialTop",True)
f.Data.DataTable.AddColumn("MaterialTop","Part","String","")
f.Data.DataTable.AddColumn("MaterialTop","Loc","String","")
f.Data.DataTable.AddColumn("MaterialTop","Code","String","")
f.Data.DataTable.AddColumn("MaterialTop","Description","String","")
f.Data.DataTable.AddColumn("MaterialTop","Freq","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","Width","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","Weight","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","Length","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","Cost","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","ShowCost","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","MSI","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","Qty","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","UM","String","")
f.Data.DataTable.AddColumn("MaterialTop","Setup","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","Cost/um","Float",0.00)
f.Data.DataTable.AddColumn("MaterialTop","FormulaM","String","")
f.Data.DataTable.AddColumn("MaterialTop","FormulaQ","String","")

'Create View and Grids
f.Data.DataView.Create("MaterialTop","MaterialTopView")
Gui.F_Label_Est.gsfgMaterialTop.AddGridviewFromDataview("GridMaterialTop","MaterialTop","MaterialTopView")
Gui.F_Label_Est.gsfgMaterialTop.MainView("GridMaterialTop")

'Set column properties
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Loc","Visible",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Weight","Visible",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Length","Visible",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost/um","Visible",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost","Visible",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","FormulaM","Visible",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","FormulaQ","Visible",False)

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","EditMask","@@@@@@@@@@@@@@@@@@@@")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","MaxLength",20)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","VisibleIndex", 1)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Part","Width", "300")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Freq","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Freq","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Freq","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Freq","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Freq","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Freq","EditMask","###,###,##0.00")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Freq","VisibleIndex", 2)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Freq","Width", "100")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","MSI","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","MSI","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","MSI","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","MSI","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","MSI","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","MSI","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","MSI","VisibleIndex", 3)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","MSI","Width", "100")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Description","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Description","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Description","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Description","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Description","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Description","MaxLength",30)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Description","VisibleIndex", 4)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Description","Width", "400")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Width","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Width","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Width","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Width","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Width","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Width","EditMask","###,###,##0.00")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Width","VisibleIndex", 5)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Width","Width", "100")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","Caption","Cost")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","EditMask","###,###,##0.00###")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","VisibleIndex", 6)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","ShowCost","Width", "100")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","Caption","OP Code")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","ReadOnly",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","AllowEdit",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","MaxLength",10)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","VisibleIndex", 7)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Code","Width", "100")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Qty","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Qty","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Qty","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Qty","ReadOnly",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Qty","AllowEdit",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Qty","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Qty","VisibleIndex", 8)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Qty","Width", "150")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","UM","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","UM","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","UM","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","UM","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","UM","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","UM","MaxLength",2)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","UM","VisibleIndex", 9)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","UM","Width", "75")

Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Setup","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Setup","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Setup","CellBorderColor","Black")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Setup","ReadOnly",False)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Setup","AllowEdit",True)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Setup","EditMask","###,###,##0.00")
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Setup","VisibleIndex", 10)
Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Setup","Width", "200")

'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Loc","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Loc","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Loc","CellBorderColor","Black")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Loc","ReadOnly",False)
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Loc","AllowEdit",True)
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Loc","MaxLength",2)

'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Weight","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Weight","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Weight","CellBorderColor","Black")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Weight","ReadOnly",False)
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Weight","AllowEdit",True)
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Weight","EditMask","###,###,##0.00")

'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Length","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Length","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Length","CellBorderColor","Black")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Length","ReadOnly",False)
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Length","AllowEdit",True)
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Length","EditMask","###,###,##0.00")

'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost/um","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost/um","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost/um","CellBorderColor","Black")
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost/um","ReadOnly",False)
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost/um","AllowEdit",True)
'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost/um","EditMask","###,###,##0.00#")

'Gui.F_Label_Est.gsfgMaterialTop.SetColumnProperty("GridMaterialTop","Cost","EditMask","###,###,##0.00")

'Create Labor Top 
f.Intrinsic.Control.If(v.DataTable.LaborTop.Exists,=,True)
	f.Data.DataTable.Close("LaborTop")
f.Intrinsic.Control.EndIf
f.Data.DataTable.Create("LaborTop",True)
f.Data.DataTable.AddColumn("LaborTop","Part","String","")
f.Data.DataTable.AddColumn("LaborTop","Code","String","")
f.Data.DataTable.AddColumn("LaborTop","Description","String","")
f.Data.DataTable.AddColumn("LaborTop","StdCost","Float",0.00)
f.Data.DataTable.AddColumn("LaborTop","ShowCost","Float",0.00)
f.Data.DataTable.AddColumn("LaborTop","Qty","Float",0.00)
f.Data.DataTable.AddColumn("LaborTop","CrewSize","Float",0.00)
f.Data.DataTable.AddColumn("LaborTop","Setup","Float",0.00)
f.Data.DataTable.AddColumn("LaborTop","FormulaM","String","")
f.Data.DataTable.AddColumn("LaborTop","FormulaQ","String","")

'Create Labor View and Grid
f.Data.DataView.Create("LaborTop","LaborTopView")
Gui.F_Label_Est.gsfgLaborTop.AddGridviewFromDataview("GridLaborTop","LaborTop","LaborTopView")
Gui.F_Label_Est.gsfgLaborTop.MainView("GridLaborTop")

'Hide Columns
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","FormulaM","Visible",False)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","FormulaQ","Visible",False)

'Set Colum Properties
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","Caption","Workcenter")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","MaxLength",20)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","Width", "200")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Part","VisibleIndex", 1)

Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Description","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Description","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Description","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Description","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Description","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Description","MaxLength",30)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Description","Width", "250")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Description","VisibleIndex", 2)

Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","ShowCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","ShowCost","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","ShowCost","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","ShowCost","Caption","Std Rate")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","ShowCost","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","ShowCost","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","ShowCost","Width", "100")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","ShowCost","VisibleIndex", 3)

Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","Caption","OP Code")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","ReadOnly",True)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","AllowEdit",False)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","MaxLength",50)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","Width", "200")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Code","VisibleIndex", 4)

Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","Caption","Std Runtime")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","ReadOnly",True)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","AllowEdit",False)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","EditMaskType","numeric")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","Width", "250")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Qty","VisibleIndex", 5)

Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","DisplayCustomNumeric","0.00#")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","EditMaskType","numeric")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","EditMask","###,###,##0.00#")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","Width", "250")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","Setup","VisibleIndex", 6)

Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","CellBackColor","LightGray")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","CellBorderColor","Black")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","Caption","Crew Size")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","ReadOnly",False)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","AllowEdit",True)
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","EditMaskType","numeric")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","Width", "75")
Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","CrewSize","VisibleIndex", 7)

'Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","StdCost","HeaderHAlignment","Center")
'Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","StdCost","CellBackColor","LightGray")
'Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","StdCost","CellBorderColor","Black")
'Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","StdCost","Caption","Std Cost")
'Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","StdCost","ReadOnly",False)
'Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","StdCost","AllowEdit",True)
'Gui.F_Label_Est.gsfgLaborTop.SetColumnProperty("GridLaborTop","StdCost","EditMaskType","numeric")

'Create Labor Hours Grid
f.Intrinsic.Control.If(v.DataTable.LaborHours.Exists,=,True)
	f.Data.DataTable.Close("LaborHours")
f.Intrinsic.Control.EndIf
f.Data.DataTable.Create("LaborHours",True)
f.Data.DataTable.AddColumn("LaborHours","Qty","String","")
f.Data.DataTable.AddColumn("LaborHours","Labor","Float",0.00)

'Create View and Grid
f.Data.DataView.Create("LaborHours","LaborHoursView")
Gui.F_Label_Est.gsflexgridLHRQ.AddGridviewFromDataview("GridLaborHours","LaborHours","LaborHoursView")
Gui.F_Label_Est.gsflexgridLHRQ.MainView("GridLaborHours")

'Set Grid Properties
Gui.F_Label_Est.gsflexgridLHRQ.SetColumnProperty("GridLaborHours","Qty","HeaderHAlignment","Center")
Gui.F_Label_Est.gsflexgridLHRQ.SetColumnProperty("GridLaborHours","Qty","CellHAlignment","Center")
Gui.F_Label_Est.gsflexgridLHRQ.SetColumnProperty("GridLaborHours","Labor","HeaderHAlignment","Center")
Gui.F_Label_Est.gsflexgridLHRQ.SetColumnProperty("GridLaborHours","Labor","CellHAlignment","Center")


'Create Summary Bottom Grid
f.Intrinsic.Control.If(v.DataTable.SummaryBottom.Exists,=,True)
	f.Data.DataTable.Close("SummaryBottom")
f.Intrinsic.Control.EndIf
f.Data.DataTable.Create("SummaryBottom",True)
f.Data.DataTable.AddColumn("SummaryBottom","Part","String","")
f.Data.DataTable.AddColumn("SummaryBottom","Rev","String","")
f.Data.DataTable.AddColumn("SummaryBottom","Loc","String","")
f.Data.DataTable.AddColumn("SummaryBottom","Code","String","")
f.Data.DataTable.AddColumn("SummaryBottom","Setup","Float",0.00)
f.Data.DataTable.AddColumn("SummaryBottom","Qty","Float",0.00)
f.Data.DataTable.AddColumn("SummaryBottom","ShowCost","Float",0.00)
f.Data.DataTable.AddColumn("SummaryBottom","Freq","Float",0.00)
f.Data.DataTable.AddColumn("SummaryBottom","Description","String","")
f.Data.DataTable.AddColumn("SummaryBottom","UM","String","")

'Create View and Grid
f.Data.DataView.Create("SummaryBottom","SummaryBottomView")
Gui.F_Label_Est.gfsgSummaryBottom.AddGridviewFromDataview("GridSummaryBottom","SummaryBottom","SummaryBottomView")
Gui.F_Label_Est.gfsgSummaryBottom.MainView("GridSummaryBottom")

'Set Grid Properties
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Part","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Rev","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Rev","CellBackColor","LightGray")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Rev","ReadOnly",False)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Rev","AllowEdit",True)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Loc","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Loc","CellBackColor","LightGray")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Loc","ReadOnly",False)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Loc","AllowEdit",True)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Code","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Code","Caption","OP Code")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Setup","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Setup","CellBackColor","LightGray")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Setup","ReadOnly",False)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Setup","AllowEdit",True)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Setup","EditMaskType","numeric")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Qty","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Qty","Caption","Runtime")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Qty","CellBackColor","LightGray")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Qty","ReadOnly",False)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Qty","AllowEdit",True)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Qty","EditMaskType","numeric")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","ShowCost","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","ShowCost","Caption","Rate")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","ShowCost","CellBackColor","LightGray")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","ShowCost","ReadOnly",False)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","ShowCost","AllowEdit",True)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","ShowCost","EditMaskType","numeric")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Freq","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Freq","CellBackColor","LightGray")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Freq","ReadOnly",False)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Freq","AllowEdit",True)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Freq","EditMaskType","numeric")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","Description","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","UM","HeaderHAlignment","Center")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","UM","CellBackColor","LightGray")
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","UM","ReadOnly",False)
Gui.F_Label_Est.gfsgSummaryBottom.SetColumnProperty("GridSummaryBottom","UM","AllowEdit",True)

f.Intrinsic.Control.If(v.DataTable.Markup.Exists,=,True)
	f.Data.DataTable.Close("Markup")
f.Intrinsic.Control.EndIf
'Create table for Markup
f.Data.DataTable.Create("Markup",True)
f.Data.DataTable.AddColumn("Markup","Markup",Float)
f.Data.DataTable.AddColumn("Markup","Description",String)

'Create View and Grid
f.Data.DataView.Create("Markup","MarkupView",22)
Gui.F_Upcharge.gsfgMarkup.AddGridviewFromDataview("GridMarkup","Markup","MarkupView")
Gui.F_Upcharge.gsfgMarkup.MainView("GridMarkup")

'Set Grid Properties
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Markup","HeaderHAlignment","Center")
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Markup","EditMaskType","numeric")
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Markup","Caption","Markup %")
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Markup","ReadOnly",False)
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Markup","AllowEdit",True)
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Markup","MaxWidth",70)
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Description","HeaderHAlignment","Center")
'Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Description","EditMaskType","numeric")
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Description","ReadOnly",False)
Gui.F_Upcharge.gsfgMarkup.SetColumnProperty("GridMarkup","Description","AllowEdit",True)

f.Intrinsic.Control.If(v.DataTable.QtyApplied.Exists,=,True)
	f.Data.DataTable.Close("QtyApplied")
f.Intrinsic.Control.EndIf
'Create table for Markup Qty Applied
f.Data.DataTable.Create("QtyApplied",True)
f.Data.DataTable.AddColumn("QtyApplied","Applied",Boolean)
f.Data.DataTable.AddColumn("QtyApplied","Qty",Float)
f.Data.DataTable.AddColumn("QtyApplied","UnitCost",Float)
f.Data.DataTable.AddColumn("QtyApplied","UnitPrice",Float)


'Create View and Grid
f.Data.DataView.Create("QtyApplied","QtyAppliedView",22)
Gui.F_Upcharge.GsGcQtyApplied.AddGridviewFromDataview("GridQtyApplied","QtyApplied","QtyAppliedView")
Gui.F_Upcharge.GsGcQtyApplied.MainView("GridQtyApplied")

'Set Grid Properties
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","Applied","HeaderHAlignment","Center")
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","Applied","ReadOnly",True)
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","Applied","AllowEdit",False)
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","Applied","MaxWidth",50)
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","Qty","HeaderHAlignment","Center")
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","Qty","EditMaskType","numeric")
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","Qty","MaxWidth",50)
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","UnitCost","Caption","Unit Cost")
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","UnitCost","HeaderHAlignment","Center")
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","UnitCost","EditMaskType","numeric")
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","UnitPrice","Caption","Unit Price")
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","UnitPrice","HeaderHAlignment","Center")
Gui.F_Upcharge.GsGcQtyApplied.SetColumnProperty("GridQtyApplied","UnitPrice","EditMaskType","numeric")

'Create Website data table
f.Intrinsic.Control.If(v.DataTable.Website.Exists,=,True)
	f.Data.DataTable.Close("Website")
f.Intrinsic.Control.EndIf
f.Data.DataTable.Create("Website",True)
f.Data.DataTable.AddColumn("Website","Display","String","")
f.Data.DataTable.AddColumn("Website","Link","String","")
f.Data.DataTable.AddColumn("Website","OP_ID","Long",0)

'Create View and Grids
f.Data.DataView.Create("Website","Material",22,"OP_ID = 1","")
f.Data.DataView.Create("Website","Labor",22,"OP_ID = 2","")
f.Data.DataView.Create("Website","Other",22,"OP_ID = 3","")
Gui.F_Websites.gsfgMaterial.AddGridviewFromDataview("GridMaterial","Website","Material")
Gui.F_Websites.gsfgMaterial.MainView("GridMaterial")
Gui.F_Websites.gsfgLabor.AddGridviewFromDataview("GridLabor","Website","Labor")
Gui.F_Websites.gsfgLabor.MainView("GridLabor")
Gui.F_Websites.gsfgOther.AddGridviewFromDataview("GridOther","Website","Other")
Gui.F_Websites.gsfgOther.MainView("GridOther")

'set properties
Gui.F_Websites.gsfgMaterial.SetColumnProperty("GridMaterial","Display","HeaderHAlignment","Center")
Gui.F_Websites.gsfgMaterial.SetColumnProperty("GridMaterial","Display","Caption","Material")
Gui.F_Websites.gsfgMaterial.SetColumnProperty("GridMaterial","Display","CellForeColor ","Blue")
Gui.F_Websites.gsfgMaterial.SetColumnProperty("GridMaterial","Display","CellFontUnderline",True)
Gui.F_Websites.gsfgMaterial.SetColumnProperty("GridMaterial","Display","ReadOnly",True)
Gui.F_Websites.gsfgMaterial.SetColumnProperty("GridMaterial","Display","AllowEdit",False)
Gui.F_Websites.gsfgLabor.SetColumnProperty("GridLabor","Display","HeaderHAlignment","Center")
Gui.F_Websites.gsfgLabor.SetColumnProperty("GridLabor","Display","Caption","Labor")
Gui.F_Websites.gsfgLabor.SetColumnProperty("GridLabor","Display","CellForeColor ","Blue")
Gui.F_Websites.gsfgLabor.SetColumnProperty("GridLabor","Display","CellFontUnderline",True)
Gui.F_Websites.gsfgLabor.SetColumnProperty("GridLabor","Display","ReadOnly",True)
Gui.F_Websites.gsfgLabor.SetColumnProperty("GridLabor","Display","AllowEdit",False)
Gui.F_Websites.gsfgOther.SetColumnProperty("GridOther","Display","HeaderHAlignment","Center")
Gui.F_Websites.gsfgOther.SetColumnProperty("GridOther","Display","Caption","Other")
Gui.F_Websites.gsfgOther.SetColumnProperty("GridOther","Display","CellForeColor ","Blue")
Gui.F_Websites.gsfgOther.SetColumnProperty("GridOther","Display","CellFontUnderline",True)
Gui.F_Websites.gsfgOther.SetColumnProperty("GridOther","Display","ReadOnly",True)
Gui.F_Websites.gsfgOther.SetColumnProperty("GridOther","Display","AllowEdit",False)
Gui.F_Websites.gsfgMaterial.SetColumnProperty("GridMaterial","Link","Visible ",False)
Gui.F_Websites.gsfgLabor.SetColumnProperty("GridLabor","Link","Visible ",False)
Gui.F_Websites.gsfgOther.SetColumnProperty("GridOther","Link","Visible ",False)
Gui.F_Websites.gsfgMaterial.SetColumnProperty("GridMaterial","OP_ID","Visible ",False)
Gui.F_Websites.gsfgLabor.SetColumnProperty("GridLabor","OP_ID","Visible ",False)
Gui.F_Websites.gsfgOther.SetColumnProperty("GridOther","OP_ID","Visible ",False)

'Create Markup Formula table
f.Intrinsic.Control.If(v.DataTable.MarkupFormula.Exists,=,True)
	f.Data.DataTable.Close("MarkupFormula")
f.Intrinsic.Control.EndIf

f.Data.DataTable.Create("MarkupFormula",True)
f.Data.DataTable.AddColumn("MarkupFormula","Qty",Float)
f.Data.DataTable.AddColumn("MarkupFormula","Formula",String)

'Create DataView of Markup Formula
f.Data.DataView.Create("MarkupFormula","MarkupFormulaView",22)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("DataTableCreation_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.DataTableCreation.End

Program.Sub.PricingTab.Start
F.Intrinsic.Control.SetErrorHandler("PricingTab_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.brunquantities.Declare(Boolean)
V.Local.blabor.Declare(Boolean)
V.Local.bmaterial.Declare(Boolean)
V.Local.irunquantityloop.Declare(Long)
V.Local.ilaborloop.Declare(Long)
V.Local.imaterialloop.Declare(Long)
V.Local.irows.Declare(Long)
V.Local.sqty.Declare(String)
V.Local.spart.Declare(String)
V.Local.slabor.Declare(String)
V.Local.sestimate.Declare(String)
V.Local.srouternumber.Declare(String)
V.Local.ilaborudt.Declare(Long)
V.Local.imaterialudt.Declare(Long)
V.Local.iestimatecount.Declare(Long)
V.Local.irtrcount.Declare(Long)
V.Local.iseq.Declare(Long)
V.Local.sseq.Declare(String)
V.Local.ssql.Declare(String)
V.Local.iqtyloop.Declare(Long)
V.Local.sratesql.Declare(String)
V.Local.scostsql.Declare(String)
V.Local.sRet.Declare(String)
V.Local.bFreqOptCheck.Declare(Boolean)
V.Local.iSeqInc.Declare(Long)
V.Local.iComSeq.Declare(Long)
V.Local.iComments.Declare(Long)
V.Local.sComments.Declare(String)
V.Local.sQties.Declare(String, "")
V.Local.fRate.Declare(Float, 0.0)
V.Local.sData.Declare(String, "")

'If create router button was clocked
F.Intrinsic.Control.If(V.Args.ControlName,=,"CMDSROUTER")
	V.Local.sEstimate.Set(V.Screen.F_Label_Est!txtEstimate.Text)
	V.Global.sRouter.Set(V.Screen.F_Label_Est!txtFinishPart.Text.UCase)
	F.Intrinsic.String.GSSPartString(V.Screen.F_Label_Est!txtFinishRouter.Text.UCase, V.Screen.F_Label_Est!txtFinishRev.Text.UCase, V.Global.sRouterRev)
'	V.Global.sRouter.Set(V.Screen.F_Label_Est!txtFinishPart.Text.UCase)
	'validate partno exist
	F.Intrinsic.Control.CallSub("PartReqs")
				
'	F.Intrinsic.Variable.AddRV("BAD", V.Args.BAD)
	F.Intrinsic.Control.If(V.Args.BAD, =, "True")
		F.Intrinsic.Variable.AddRV("BAD", "True")
		F.Intrinsic.Control.ExitSub
	
	F.Intrinsic.Control.Else
		F.Intrinsic.Variable.AddRV("BAD", "False")
	
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.GSSPartString(V.Screen.F_Label_Est!txtFinishRouter.Text.UCase, V.Screen.F_Label_Est!txtFinishRev.Text.UCase, V.Global.sRouter)
	F.Intrinsic.Control.CallSub(Deleterouter)
F.Intrinsic.Control.ElseIf(V.Args.ControlName,=,"CMDPPRICE")
	'Refresh button on price page was pressed
	F.Intrinsic.String.Build("ESTROUTER{0}",V.Caller.Terminal,V.Global.sRouterRev)
	F.Intrinsic.String.Build("ESTROUTER{0}",V.Caller.Terminal,V.Global.sRouter)
	'Added by FEQ 11/20/2018. If the freeze price checkbox is checked, we're going to hold on to the pricing.
	
	F.Intrinsic.Control.If(V.Screen.F_Label_Est!chkFreeze.Value, =, 1)
		'Mod #4 changes
		'The idea is to hold the unit price, so we once the labor and material and everythign is recalculated from the router, we can use that and work backwards, filling in for the markup, total, margin percent and margin dollars
'		F.Data.DataView.Create("Pricing", "dvFrozenPrices", 22)
'		F.Data.DataView.ToDataTableDistinct("Pricing", "dvFrozenPrices", "dtFrozed", "Quantity*!*UnitPrice", True)
'		
'		F.Data.DataView.Close("Pricing", "dvFrozenPrices")	
		
		F.Data.Dictionary.CreateFromDataView("dicFrozen", "Pricing", "PricingView", "Quantity", "UnitPrice")
		F.Data.Dictionary.SetDefaultReturn("dicFrozen", "0.00")
		
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Inform the user that they are generating prices
F.Intrinsic.UI.InvokeWaitDialog("Generating Prices...")

'get the sequence incrament value
F.Global.General.ReadOption("401113",3,1,V.Local.iSeqInc)
'set the seq
F.Intrinsic.Math.Add(V.Local.iseq,V.Local.iSeqInc,V.Local.iseq)

F.Data.DataTable.DeleteRow("dtRouter")

F.Intrinsic.UI.ChangeWaitStatus("Adding Routers")
'make sure we have something in the summary udt
F.Intrinsic.Control.If(v.DataView.FullTable!Summary.RowCount,>,0)
	'Made the Router Header record
	F.Data.DataView.ToString("RunQty", "RunQtyView", "Qty", "", "*!*", V.Local.sQties)
	F.Intrinsic.String.Split(V.Local.sQties, "*!*", V.Local.sQties)
	V.Local.sQties.RedimPreserve(0,9)
	
	F.Data.DataTable.AddRow("dtRouter", "Number", V.Global.sRouterRev, "Desc", V.Screen.F_Label_Est!txtdesc.Text.Ucase, "Sequence", "000000", "Customer", v.Screen.F_Label_Est!txtCustomer.Text.Trim, "Prod_Line", v.Screen.F_Label_Est!ddlHPL.Text.UCase, "Qty1", V.Local.sQties(0).Float, "Qty2", V.Local.sQties(1).Float, "Qty3", V.Local.sQties(2).Float, "Qty4", V.Local.sQties(3).Float, "Qty5", V.Local.sQties(4).Float, "Qty6", V.Local.sQties(5).Float, "Qty7", V.Local.sQties(6).Float, "Qty8", V.Local.sQties(7).Float, "Qty9", V.Local.sQties(8).Float, "Qty10", V.Local.sQties(9).Float)

	'format the header lines
	F.Intrinsic.Control.CallSub(Routeraddrecord)
	'now add the header
	F.Intrinsic.Control.CallSub(Routerheader)
		
	'clear the router header
'	F.Intrinsic.Control.CallSub(Routerclear)
'	'delete 000000 line from router line
	F.Intrinsic.String.Build("DELETE FROM ROUTER_LINE WHERE ROUTER = '{0}' AND LINE_ROUTER = '000000' ",V.Global.sRouterRev.UCase,V.Local.ssql)
	F.ODBC.Connection!Con.Execute(V.Local.ssql)
	
	F.Data.DataTable.DeleteRow("dtRouter")
	V.Local.ilaborloop.Set(0)
		
	F.Data.DataView.ToDataTable("FullTable", "Summary", "dtSummaryForRouter")
	F.Data.Datatable.AddColumn("dtSummaryForRouter", "Sequence", "String")
	F.Data.DataTable.SetSeries("dtSummaryForRouter", "Sequence", V.Local.iseq, V.Local.iSeqInc)
	
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "CUSTDT", "String", v.Screen.F_Label_Est!txtCustomer.Text.Trim)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "PRODLINE", "String", v.Screen.F_Label_Est!ddlHPL.Text.UCase)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY1", "String", V.Local.sQties(0).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY2", "String", V.Local.sQties(1).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY3", "String", V.Local.sQties(2).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY4", "String", V.Local.sQties(3).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY5", "String", V.Local.sQties(4).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY6", "String", V.Local.sQties(5).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY7", "String", V.Local.sQties(6).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY8", "String", V.Local.sQties(7).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY9", "String", V.Local.sQties(8).Float)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "QTY10", "String", V.Local.sQties(9).Float)
	
	F.Data.DataView.Create("dtSummaryForRouter", "dvComments", 22, "TRIM([COMMENTS]) <> ''", "")
	F.Intrinsic.Control.If(V.DataView.dtSummaryForRouter!dvComments.RowCount, >, 0)
		F.Intrinsic.Control.For(V.Local.ilaborloop, V.DataView.dtSummaryForRouter!dvComments.RowCount--, 0, -1)
			F.Intrinsic.String.Replace(V.DataView.dtSummaryForRouter!dvComments(V.Local.ilaborloop).Comments!FieldVal,v.ASCII.10," ",v.Local.sComments)
			F.Intrinsic.String.LimitSplit(V.Local.sComments,30,False,V.Local.sComments)
			V.Local.iComSeq.Set(V.DataView.dtSummaryForRouter!dvComments(V.Local.ilaborloop).Sequence!FieldValLong)
			F.Intrinsic.Control.For(V.Local.iComments,V.Local.sComments.LBound,V.Local.sComments.UBound,1)
				'We need to add comment lines for the description
				F.Intrinsic.String.LPad(V.Local.iComSeq,"0",6,V.Local.sseq)
				F.Data.DataTable.AddRow("dtSummaryForRouter", "Sequence", V.Local.sseq, "LMO", "C", "Description", V.Local.sComments(V.Local.iComments))
				F.Intrinsic.Math.Add(V.Local.iComSeq,1,V.Local.iComSeq)
			F.Intrinsic.Control.Next(V.Local.iComments)
		F.Intrinsic.Control.Next(V.Local.ilaborloop)
	F.Intrinsic.Control.EndIf
	F.Data.DataView.Close("dtSummaryForRouter", "dvComments")
	
	F.Data.DataTable.AddExpressionColumn("dtSummaryForRouter", "PARTDT", "String", "IIF([LMO] = 'M' OR [LMO] = 'O',[PART],'')")
	F.Data.DataTable.AddExpressionColumn("dtSummaryForRouter", "LOCN", "String", "IIF([LMO] = 'M' OR [LMO] = 'O',[LOC],'')")
			
	F.Intrinsic.Control.If(V.Args.ControlName, =, "CMDPPRICE")
		F.Data.DataTable.AddExpressionColumn("dtSummaryForRouter", "RATEDT", "String", "IIF([LMO] = 'M' OR [LMO] = 'O',[SHOWCOST],IIF([LMO]='L', [STDCOST], '0.0'))")
	F.Intrinsic.Control.Else
		F.Data.DataTable.AddExpressionColumn("dtSummaryForRouter", "RATEDT", "String", "IIF([LMO] = 'M' OR [LMO] = 'O',[COST],IIF([LMO]='L', [STDCOST], '0.0'))")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.AddExpressionColumn("dtSummaryForRouter", "WORKCENTER", "String", "IIF([LMO] = 'L',[Part],'')")
	F.Data.DataTable.AddExpressionColumn("dtSummaryForRouter", "UMDT", "String", "IIF([LMO] = 'M' OR [LMO] = 'O',[UM],'')")
	F.Data.DataTable.AddExpressionColumn("dtSummaryForRouter", "FREQDT", "String", "IIF([LMO] = 'M' OR [LMO] = 'O',[FREQ],'0')")
	F.Data.DataTable.AddExpressionColumn("dtSummaryForRouter", "CREWDT", "String", "IIF([LMO] = 'L',[CrewSize],'')")
	
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "NUMBER", "String", V.Global.sRouterRev.UCase)
	F.Data.DataTable.AddColumn("dtSummaryForRouter", "DESC", "String", V.Screen.F_Label_Est!txtdesc.Text.UCase)
	
	F.Data.DataView.Create("dtSummaryForRouter", "dvSummary", 22, "", "SEQUENCE ASC")
	F.Data.DataView.ToString("dtSummaryForRouter", "dvSummary", "NUMBER*!*DESC*!*SEQUENCE*!*LMO*!*PARTDT*!*WORKCENTER*!*DESCRIPTION*!*SETUP*!*QTY*!*CUSTDT*!*CODE*!*RATEDT*!*UMDT*!*QTY1*!*QTY2*!*QTY3*!*QTY4*!*FREQDT*!*CREWDT*!*LOCN*!*QTY5*!*QTY6*!*QTY7*!*QTY8*!*QTY9*!*QTY10*!*PRODLINE", "*!*", "@!@", V.Local.sData)
	
	F.Data.DataTable.CreateFromString("dtData", V.Local.sData, "Number*!*Desc*!*Sequence*!*LMO*!*Part*!*Workcenter*!*Seq_Desc*!*Setup*!*RunTime*!*Customer*!*Operation*!*Rate*!*UM*!*Qty1*!*Qty2*!*Qty3*!*Qty4*!*Frequency*!*Crew*!*Locn*!*Qty5*!*Qty6*!*Qty7*!*Qty8*!*Qty9*!*Qty10*!*Prod_Line", "String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String", "*!*", "@!@", True)
	
	F.Data.DataTable.Merge("dtData", "dtRouter", True, 2)
	
	F.Data.DataTable.Close("dtData")
	
	F.Data.DataView.Close("dtSummaryForRouter", "dvSummary")
	F.Data.DataTable.Close("dtSummaryForRouter")
F.Intrinsic.Control.EndIf

'add formatting to the router and then upload
F.Intrinsic.UI.ChangeWaitStatus("Formatting Router")
F.Intrinsic.Control.CallSub(Routeraddrecord)

'call the router uploads
F.Intrinsic.UI.ChangeWaitStatus("Adding Router Lines")
F.Intrinsic.Control.CallSub(Routerline)

'UM doesn't set on the header so we have to do it manually through the table until they fix the callwrapper
F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtHUM.Text,<>,"")
	f.Intrinsic.String.Build("UPDATE ROUTER_HEADER SET UM_INVENTORY = '{0}' WHERE ROUTER = '{1}' AND ROUTER_TYPE = 'H' ",V.Screen.F_Label_Est!txtHUM.Text.Trim,v.Global.sRouterRev.UCase,v.Local.ssql)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("UPDATE ROUTER_HEADER SET UM_INVENTORY = '{0}' WHERE ROUTER = '{1}' AND ROUTER_TYPE = 'H' ","EA",V.Global.sRouterRev.UCase,V.Local.ssql)
F.Intrinsic.Control.EndIf
F.ODBC.Connection!Con.Execute(V.Local.ssql)

'!!!REMOVE AFTER BUG IS FIXED WITH MODE 6020 Router Upload UPLRTRH
'Temporarily Writing to ROUTER_SUPP table for sequences that have Frequency > 0
F.Global.General.ReadOption("402332",0,0,V.Local.bFreqOptCheck)
''Only Write to table if the option is active. it was sent out in 2016.1 release, so prior versions, this will NOT work
F.Intrinsic.Control.If(V.Local.bFreqOptCheck,=,True)
	F.Data.DataView.Create("dtRouter", "dvFreq", 22, "[Frequency] > '0'", "[SEQUENCE] ASC")
	F.Intrinsic.Control.If(V.DataView.dtRouter!dvFreq.RowCount, >, 0)
		'Router_Supp table was split between two different tables after 2017.1. Making changes because customer upgraded to 2017.1
		F.Intrinsic.Control.If(V.Caller.GSSVersion.Float, <, 2017.1)	
			F.Intrinsic.Control.For(V.Local.irows, 0, V.DataView.dtRouter!dvFreq.RowCount--, 1)
				F.Intrinsic.String.Build("Select * from ROUTER_SUPP where RTR_NUM = '{0}' and LINE = '{1}' ", V.DataView.dtRouter!dvFeq(V.Local.irows).NUMBER!FieldValTrim, V.DataView.dtRouter!dvFeq(V.Local.irows).SEQUENCE!FieldValTrim,V.Local.ssql)
				F.ODBC.Connection!Con.OpenLocalRecordsetRW("rstFreq", V.Local.ssql)
				F.Intrinsic.Control.If(V.ODBC.Con!rstFreq.EOF, =, True)
					F.ODBC.Con!rstFreq.AddNew
					F.ODBC.Con!rstRtrSupp.Set!RTR_NUM(V.DataView.dtRouter!dvFeq(V.Local.irows).NUMBER!FieldValTrim)
					F.ODBC.Con!rstRtrSupp.Set!LINE(V.DataView.dtRouter!dvFeq(V.Local.irows).SEQUENCE!FieldValTrim)			
				F.Intrinsic.Control.EndIf
				F.ODBC.Con!rstRtrSupp.Set!SUFFIX("")
				F.ODBC.Con!rstRtrSupp.Set!TYPE("L")
				F.ODBC.Con!rstRtrSupp.Set!F_INSERT("00")
				F.ODBC.Con!rstRtrSupp.Set!COMPLETE(0)
				F.ODBC.Con!rstRtrSupp.Set!INACTIVE(0)
				F.ODBC.Con!rstRtrSupp.Set!CHG_REV(0)
				F.ODBC.Con!rstRtrSupp.Set!ROLL_LENGTH(0)
				F.ODBC.Con!rstRtrSupp.Set!ROLL_WIDTH(0)
				F.ODBC.Con!rstRtrSupp.Set!FREQUENT_4(V.DataView.dtRouter!dvFeq(V.Local.irows).FREQUENCY!FieldValFloat)
				F.ODBC.Con!rstRtrSupp.Update
				F.ODBC.Con!rstRtrSupp.Close
			F.Intrinsic.Control.Next(V.Local.irows)
		F.Intrinsic.Control.Else
			'If they are in 2017.1 and above
			F.Intrinsic.Control.For(V.Local.irows, 0, V.DataView.dtRouter!dvFreq.RowCount--, 1)
				F.Intrinsic.String.Build("Select * from ROUTER_SUPP_HDR where RTR_NUM = '{0}' and LINE = '{1}' ", V.DataView.dtRouter!dvFeq(V.Local.irows).NUMBER!FieldValTrim, V.DataView.dtRouter!dvFeq(V.Local.irows).SEQUENCE!FieldValTrim,V.Local.ssql)
				F.ODBC.Connection!Con.OpenLocalRecordsetRW("rstFreqHDR", V.Local.ssql)
				F.Intrinsic.Control.If(V.ODBC.Con!rstFreqHDR.EOF, =, True)
					F.ODBC.Con!rstFreqHDR.AddNew
					F.ODBC.Con!rstFreqHDR.Set!RTR_NUM(V.DataView.dtRouter!dvFeq(V.Local.irows).NUMBER!FieldValTrim)
					F.ODBC.Con!rstFreqHDR.Set!LINE(V.DataView.dtRouter!dvFeq(V.Local.irows).SEQUENCE!FieldValTrim)			
				F.Intrinsic.Control.EndIf
				F.ODBC.Con!rstFreqHDR.Set!SUFFIX("")
				F.ODBC.Con!rstFreqHDR.Set!TYPE("L")
				F.ODBC.Con!rstFreqHDR.Set!F_INSERT("00")
				F.ODBC.Con!rstFreqHDR.Set!COMPLETE(0)
				F.ODBC.Con!rstFreqHDR.Set!INACTIVE(0)
				F.ODBC.Con!rstFreqHDR.Set!CHG_REV(0)
				F.ODBC.Con!rstFreqHDR.Update
				F.ODBC.Con!rstFreqHDR.Close
				
				F.Intrinsic.String.Build("Select * from ROUTER_SUPP_LINE where RTR_NUM = '{0}' and LINE = '{1}' ", V.DataView.dtRouter!dvFeq(V.Local.irows).NUMBER!FieldValTrim, V.DataView.dtRouter!dvFeq(V.Local.irows).SEQUENCE!FieldValTrim,V.Local.ssql)
				F.ODBC.Connection!Con.OpenLocalRecordsetRW("rstFreqLN", V.Local.ssql)
				F.Intrinsic.Control.If(V.ODBC.Con!rstFreqLN.EOF, =, True)
					F.ODBC.Con!rstFreqLN.AddNew
					F.ODBC.Con!rstFreqLN.Set!RTR_NUM(V.DataView.dtRouter!dvFeq(V.Local.irows).NUMBER!FieldValTrim)
					F.ODBC.Con!rstFreqLN.Set!LINE(V.DataView.dtRouter!dvFeq(V.Local.irows).SEQUENCE!FieldValTrim)			
				F.Intrinsic.Control.EndIf
				F.ODBC.Con!rstFreqLN.Set!SUFFIX("")
				F.ODBC.Con!rstFreqLN.Set!TYPE("L")
				F.ODBC.Con!rstFreqLN.Set!F_INSERT("00")
				F.ODBC.Con!rstFreqLN.Set!COMPLETE(0)
				F.ODBC.Con!rstFreqLN.Set!INACTIVE(0)
				F.ODBC.Con!rstFreqLN.Set!CHG_REV(0)
				F.ODBC.Con!rstFreqLN.Set!ROLL_LENGTH(0)
				F.ODBC.Con!rstFreqLN.Set!ROLL_WIDTH(0)
				F.ODBC.Con!rstFreqLN.Set!FREQUENT_4(V.DataView.dtRouter!dvFeq(V.Local.irows).FREQUENCY!FieldValFloat)
				F.ODBC.Con!rstFreqLN.Update
				F.ODBC.Con!rstFreqLN.Close
	
			F.Intrinsic.Control.Next(V.Local.iRow)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.Data.DataView.Close("dtRouter", "dvFreq")
F.Intrinsic.Control.EndIf

'call the pricing matrix subroutine to populate the flexgrid
'check to see if the sub was called from the pricing button
F.Intrinsic.Control.If(V.Args.ControlName,=,"CMDPPRICE")
	
	F.Intrinsic.Control.CallSub(Pricing_matrix,"ControlName",V.Args.ControlName)
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.CloseWaitDialog

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("PricingTab_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.PricingTab.End

Program.Sub.Pricing_Matrix.Start
F.Intrinsic.Control.SetErrorHandler("Pricing_Matrix_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sFileRet.Declare(String)
V.Local.iC.Declare(Long)
V.Local.sParams.Declare(String)
V.local.bExists.Declare(Boolean)
V.Local.sText.Declare(String)
V.Local.ifileloop.Declare(Long)
V.Local.slineret.Declare(String)
V.Local.ilineloop.Declare(Long)
V.Local.slinecheck.Declare(String)
V.Local.supload.Declare(String)
V.Local.fMarkup.Declare(Float)
V.Local.bContinue.Declare(Boolean)
V.Local.iSeqInc.Declare(Long)
V.Local.iSeq.Declare(Long)
v.Local.sSQL.Declare(String)
v.Local.sRet.Declare(String)
v.Local.sFormula.Declare(String)
v.Local.fMark.Declare(Float)
V.Local.fTotal.Declare(Float)
v.Local.sLine.Declare(String)
V.Local.sPart.Declare(String)

Gui.F_Label_Est.gsfgPricingInfo.SuspendLayout()

'build the file path
F.Intrinsic.String.Build("{0}\{1}{2}PRICING.OUT",V.Caller.FilesDir,V.Caller.User.Trim,V.Caller.Terminal,V.Local.sFileRet)
F.Intrinsic.String.Build("{0}\{1}{2}PRICING.IN",V.Caller.FilesDir,V.Caller.User.Trim,V.Caller.Terminal,V.Local.sFile)

'check to see if the file exists, if so delete it
F.Intrinsic.File.Exists(V.local.sFileRet,V.local.bExists)
F.Intrinsic.Control.If(V.Local.bExists,=,True)
	F.Intrinsic.File.DeleteFile(V.Local.sFileRet)
F.Intrinsic.Control.EndIf

'We will probably need to use the RouterRev for the router repricing below

'loop through the run quantities and build the file
F.Intrinsic.Control.For(V.Local.ifileloop,0,v.DataView.RunQty!RunQtyView.RowCount--,1)
	'see if stext is blank, if so write the first line otherwise build the text
	f.Intrinsic.Control.If(v.DataView.RunQty!RunQtyView(v.Local.ifileloop).Qty!FieldValFloat,<>,0)
		F.Intrinsic.Control.If(V.Local.sText,=,"")
			F.Intrinsic.String.Build("{0}*!*{1}{2}",V.Global.sRouter,v.DataView.RunQty!RunQtyView(v.Local.ifileloop).Qty!FieldValFloat,V.Ambient.NewLine,V.Local.sText)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}{1}*!*{2}{3}",V.Local.sText,V.Global.sRouter,v.DataView.RunQty!RunQtyView(v.Local.ifileloop).Qty!FieldValFloat,V.Ambient.NewLine,V.Local.sText)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.ifileloop)

f.Intrinsic.Control.If(v.Local.sText,=,"")
	'File is blank because we don't have any Qty
	f.Intrinsic.UI.Msgbox("Run Quantity is zero.","ATTENTION")
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf

'create the file
F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sText)
F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sFile,"!*!",V.Local.sFileRet,V.Local.sParams)

'call the Pricing callwrapper
F.Global.General.CallWrapperSync(1500,V.Local.sParams)

F.Intrinsic.UI.SleepMS(2000)
'send the data from the file to a string variable
F.Intrinsic.File.File2String(V.Local.sFileRet,V.Local.sFileRet)

'split the string by new line
F.Intrinsic.String.Split(V.Local.sFileRet,V.Ambient.NewLine,V.Local.sFileRet)

'Set continue to True so that the first set of Lines get updated
V.Local.bContinue.Set(True)

'get the sequence incrament value
F.Global.General.ReadOption("401113",3,1,V.Local.iSeqInc)

'Right before we delete the Pricing table we need to pull the qty and formula into our markupformula table to hold it so we can put it back after everythign is loaded
f.Intrinsic.Control.If(v.DataView.Pricing!PricingView.RowCount,>,0)
	f.Data.DataView.ToString("Pricing","PricingView","Quantity*!*Formula","!@!","!&!",v.Local.sRet)
	f.Data.DataTable.DeleteRow("MarkupFormula")
	f.Intrinsic.Control.If(v.DataTable.MarkupTemp.Exists,=,True)
		f.Data.DataTable.Close("MarkupTemp")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromString("MarkupTemp",v.Local.sRet,"Qty*!*Formula","Float*!*String","!@!","!&!",True)
	f.Data.DataTable.Merge("MarkupTemp","MarkupFormula",True,2)
	f.Data.DataTable.Close("MarkupTemp")
f.Intrinsic.Control.EndIf

'Delete the pricing Grid
f.Data.DataTable.DeleteRow("Pricing")

'loop through the return
F.Intrinsic.Control.For(V.Local.ilineloop,V.Local.sFileRet.LBound,V.Local.sFileRet.UBound,1)

	V.Local.supload.Set(V.Local.sFileRet(v.Local.ilineloop))
	'split the return
	F.Intrinsic.String.Split(V.Local.sFileRet(v.Local.ilineloop),"*!*",V.Local.slinecheck)
	V.Local.slinecheck.RedimPreserve(0,19)
	'check to see if it is a line or total
	F.Intrinsic.Control.If(V.Local.slinecheck(0),=,"L","AND",V.Local.bContinue,=,True)
		'set the sequence for the position
		'POS is 1, 2,3 etc but SEQ is 1000, 2000, 3000  so we need to devide seq by the seq incrament value to get the POS
		F.Intrinsic.Math.Div(V.Local.slinecheck(3).Long,V.Local.iSeqInc,V.Local.iSeq)
		'If the part contains an apostrophe the standard build will fail. Here we store the part in a variable so that we can use PSQLFriendly to get around this error
		V.Local.sPart.Set(V.Local.slinecheck(5).Trim)
		F.Intrinsic.String.Build("PART = '{0}' AND POS = {1}",v.Local.sPart.PSQLFriendly,v.Local.iSeq,v.Local.sText)
		f.Data.DataTable.AcceptChanges("FullTable")
		f.Data.DataTable.Select("FullTable",v.Local.sText,v.Local.sText)
		f.Intrinsic.Control.If(v.Local.sText,<>,"***NORETURN***")
			f.Data.DataTable.SetValue("FullTable",v.Local.sText,"Router",v.Local.slinecheck(1).Trim,"Seq",v.Local.slinecheck(3).Trim,"UM",v.Local.slinecheck(14).Trim,"TotalCost",v.Local.slinecheck(15).Float,"DirCost",v.Local.slinecheck(16).Float,"OHCost",v.Local.slinecheck(17).Float,"LbrHrs",v.Local.slinecheck(18).Float,"MinCost",v.Local.slinecheck(19).Float)
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.ElseIf(V.Local.slinecheck(0),=,"T")
		'load the pricing bottom udt
		
		'FEQ fix 12/26/2019 for some reason the output file for callwrapper 1500 is chopping off any diggit after the millionth place so we gotta calculate the total pricing manually
		F.Intrinsic.Math.Mult(V.Local.slinecheck(2).Float, V.Local.slinecheck(4), V.Local.fTotal)
		f.Data.DataTable.AddRow("Pricing","Est_No",v.Screen.F_Label_Est!txtEstimate.Text.Long,"Router",v.Local.slinecheck(1).Trim,"Quantity",v.Local.slinecheck(2).Float,"Direct",v.Local.slinecheck(3).Float,"UnitCost",v.Local.slinecheck(4).Float,"Material",v.Local.slinecheck(5).Float,"Outside",v.Local.slinecheck(6).Float,"Labor",v.Local.slinecheck(7).Float,"LaborHrs",v.Local.slinecheck(8).Float,"Overhead",v.Local.slinecheck(9).Float,"TotalCost",V.Local.fTotal)
		'set Continue to false so that we no longer pull in additional Lines
		V.Local.bContinue.Set(False)
	F.Intrinsic.Control.ElseIf(V.Local.slinecheck(0),=,"M")
		'Load the Markup to the variable
		V.Local.fMarkup.Set(V.Local.slinecheck(1).Float)
		f.Data.DataTable.SetValue("Pricing",-1,"Markup",v.Local.fMarkup)
	F.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.Next(V.Local.ilineloop)

'loop through Pricing bottom and multiply the unit price by the markup
F.Intrinsic.Control.For(V.Local.ilineloop,0,v.DataView.Pricing!PricingView.RowCount--,1)
	f.Intrinsic.String.Build("Qty = {0}",v.DataView.Pricing!PricingView(v.Local.ilineloop).Quantity!FieldValFloat,v.Local.sSQL)
	f.Data.DataTable.Select("MarkupFormula",v.Local.sSQL,v.local.sSQL)
	f.Intrinsic.String.Split(v.Local.sSQL,"*!*",v.Local.sSQL)
	f.Intrinsic.Control.If(v.Local.sSQL,<>,"***NORETURN***")
		'f.Data.DataTable.SetValue("MarkupFormula",v.Local.sSQL.Long,"Formula",v.Local.sText)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"Formula",v.DataTable.MarkupFormula(v.Local.sSQL.Long).Formula!FieldVal)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataView.Pricing!PricingView(v.Local.ilineloop).Formula!FieldVal,<>,"")
		'we have a formula so lets use it to calculate everything
		v.Local.sFormula.Redim(0,0)
		f.Intrinsic.String.Split(v.DataView.Pricing!PricingView(v.Local.ilineloop).Formula!FieldVal,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		'We need to mult the initila markup by the unit cost
		f.Intrinsic.Math.Div(v.Local.sFormula(0).Float,100,v.Local.sFormula(0))
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,1,v.Local.sFormula(0))
		f.Intrinsic.Math.Mult(v.DataView.Pricing!PricingView(v.Local.ilineloop).UnitCost!FieldValFloat,v.Local.sFormula(0).Float,v.Local.fMarkup)
		v.Local.fMark.Set(0)
		'We need to split the Additional markups and add them up
		f.Intrinsic.String.Split(v.Local.sFormula(1),"&!&",v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iC,v.Local.sRet.UBound)
			f.Intrinsic.String.Split(v.Local.sRet(v.Local.iC),"*!*",v.Local.sLine)
			v.Local.sLine.RedimPreserve(0,1)
			f.Intrinsic.Math.Add(v.Local.fMark,v.Local.sLine(0).Float,v.Local.fMark)
		f.Intrinsic.Control.Next(v.Local.iC)
		'We have the total additional markup so we can mult our markup by it
		f.Intrinsic.Math.Div(v.Local.fMark,100,v.Local.fMark)
		f.Intrinsic.Math.Add(v.Local.fMark,1,v.Local.fMark)
		f.Intrinsic.Math.Mult(v.Local.fMarkup,v.Local.fMark,v.Local.fMarkup)
		'Now fMarkup holds the Unit Price and fMark + sFormula(0) = markup
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,v.Local.fMark,v.Local.fMark)
		f.Intrinsic.Math.Sub(v.Local.fMark,2,v.Local.fMark)
		f.Intrinsic.Math.Mult(v.Local.fMark,100,v.Local.fMark)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"UnitPrice",v.Local.fMarkup,"Markup",v.Local.fMark)
		'We can do the rest of the values
		f.Intrinsic.Math.Mult(v.DataView.Pricing!PricingView(v.Local.iLineLoop).UnitPrice!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).Quantity!FieldValFloat,v.Local.fMarkup)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"Total",v.Local.fMarkup)
		f.Intrinsic.Math.Sub(v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).TotalCost!FieldValFloat,v.Local.fMarkup)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"MarginD",v.Local.fMarkup)
		f.Intrinsic.Control.If(v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,>,0)
			f.Intrinsic.Math.Div(v.DataView.Pricing!PricingView(v.Local.iLineLoop).MarginD!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,v.Local.fMarkup)
		f.Intrinsic.Control.Else
			v.Local.fMarkup.Set(0)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"MarginP",v.Local.fMarkup)
		
	f.Intrinsic.Control.Else
		'We don't have a formula so we need to calculate the values still
		f.Intrinsic.Math.Mult(v.DataView.Pricing!PricingView(v.Local.ilineloop).UnitCost!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.ilineloop).Markup!FieldValFloat,v.Local.fMarkup)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"UnitPrice",v.Local.fMarkup)
		f.Intrinsic.Math.Sub(v.DataView.Pricing!PricingView(v.Local.ilineloop).Markup!FieldValFloat,1,v.Local.fMarkup)
		f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"Markup",v.Local.fMarkup)
		f.Intrinsic.Math.Mult(v.DataView.Pricing!PricingView(v.Local.iLineLoop).UnitPrice!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).Quantity!FieldValFloat,v.Local.fMarkup)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"Total",v.Local.fMarkup)
		f.Intrinsic.Math.Sub(v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).TotalCost!FieldValFloat,v.Local.fMarkup)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"MarginD",v.Local.fMarkup)
		f.Intrinsic.Control.If(v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,>,0)
			f.Intrinsic.Math.Div(v.DataView.Pricing!PricingView(v.Local.iLineLoop).MarginD!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,v.Local.fMarkup)
		f.Intrinsic.Control.Else
			v.Local.fMarkup.Set(0)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"MarginP",v.Local.fMarkup)
		
	f.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.ilineloop)

F.Intrinsic.Control.If(V.Args.ControlName,=,"CMDPPRICE")
	
	F.Intrinsic.Control.CallSub(Deleterouter)
	'If the router flag is True, we need to replace the router in the pricing grid
'	V.Global.bRouter.Set(False)
	F.Intrinsic.Control.If(V.Global.bRouter, =, True, "AND", V.Screen.F_Label_Est!txtFinishRouter.Text.Trim, <>, "")
		F.Intrinsic.String.GSSPartString(V.Screen.F_Label_Est!txtFinishRouter.Text, V.Screen.F_Label_Est!txtFinishRev.Text, V.Local.sText)
		F.Data.DataTable.SetValue("Pricing", -1, "ROUTER", V.Local.sText)
	F.Intrinsic.Control.EndIf
'	
'	Function.Intrinsic.Debug.InvokeDebugger
'	Function.Intrinsic.Debug.Stop
	
	'FEQ changes #4 mod checking to see if freeze pricing is checked. If so, there should be a table that has stored the original Unit Pricing from before the 
	F.Data.DataTable.AcceptChanges("Pricing")
	F.Intrinsic.Control.If(V.Screen.F_Label_Est!chkFreeze.Value, =, 1)
		'We will be refilling the pricing table with the calculated values for the Markup, toatl, MarginD and MarginP
		'loop through Pricing bottom and multiply the unit price by the markup
				
		F.Data.DataTable.FillFromDictionary("Pricing", "dicFrozen", "Quantity", "UnitPrice")
'		F.Data.Dictionary.Close("dicFrozen")
		
		F.Intrinsic.Control.For(V.Local.ilineloop,0,v.DataView.Pricing!PricingView.RowCount--,1)
			
'			f.Intrinsic.Control.If(v.DataView.Pricing!PricingView(v.Local.ilineloop).Formula!FieldVal,<>,"")
'				'we have a formula so lets use it to calculate everything
'				v.Local.sFormula.Redim(0,0)
'				f.Intrinsic.String.Split(v.DataView.Pricing!PricingView(v.Local.ilineloop).Formula!FieldVal,"@!@",v.Local.sFormula)
'				v.Local.sFormula.RedimPreserve(0,2)
'				'We need to mult the initila markup by the unit cost
'				f.Intrinsic.Math.Div(v.Local.sFormula(0).Float,100,v.Local.sFormula(0))
'				f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,1,v.Local.sFormula(0))
'				f.Intrinsic.Math.Mult(v.DataView.Pricing!PricingView(v.Local.ilineloop).UnitCost!FieldValFloat,v.Local.sFormula(0).Float,v.Local.fMarkup)
'				v.Local.fMark.Set(0)
'				'We need to split the Additional markups and add them up
'				f.Intrinsic.String.Split(v.Local.sFormula(1),"&!&",v.Local.sRet)
'				f.Intrinsic.Control.For(v.Local.iC,v.Local.sRet.UBound)
'					f.Intrinsic.String.Split(v.Local.sRet(v.Local.iC),"*!*",v.Local.sLine)
'					v.Local.sLine.RedimPreserve(0,1)
'					f.Intrinsic.Math.Add(v.Local.fMark,v.Local.sLine(0).Float,v.Local.fMark)
'				f.Intrinsic.Control.Next(v.Local.iC)
'				'We have the total additional markup so we can mult our markup by it
'				f.Intrinsic.Math.Div(v.Local.fMark,100,v.Local.fMark)
'				f.Intrinsic.Math.Add(v.Local.fMark,1,v.Local.fMark)
'				f.Intrinsic.Math.Mult(v.Local.fMarkup,v.Local.fMark,v.Local.fMarkup)
'				'Now fMarkup holds the Unit Price and fMark + sFormula(0) = markup
'				f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,v.Local.fMark,v.Local.fMark)
'				f.Intrinsic.Math.Sub(v.Local.fMark,2,v.Local.fMark)
'				f.Intrinsic.Math.Mult(v.Local.fMark,100,v.Local.fMark)
'				f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"UnitPrice",v.Local.fMarkup,"Markup",v.Local.fMark)
'				'We can do the rest of the values
'				f.Intrinsic.Math.Mult(v.DataView.Pricing!PricingView(v.Local.iLineLoop).UnitPrice!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).Quantity!FieldValFloat,v.Local.fMarkup)
'				f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"Total",v.Local.fMarkup)
'				f.Intrinsic.Math.Sub(v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).TotalCost!FieldValFloat,v.Local.fMarkup)
'				f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"MarginD",v.Local.fMarkup)
'				f.Intrinsic.Control.If(v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,>,0)
'					f.Intrinsic.Math.Div(v.DataView.Pricing!PricingView(v.Local.iLineLoop).MarginD!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,v.Local.fMarkup)
'				f.Intrinsic.Control.Else
'					v.Local.fMarkup.Set(0)
'				f.Intrinsic.Control.EndIf
'				f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)
'				f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"MarginP",v.Local.fMarkup)
'				
'			f.Intrinsic.Control.Else
				
				'We have the unit Price and the Unit cost, so we will calculate the rest backwards, 
				'Markup = (Unit Price - Unit Cost)
'				F.Intrinsic.Math.Sub(v.DataView.Pricing!PricingView(v.Local.ilineloop).UnitPrice!FieldValFloat, v.DataView.Pricing!PricingView(v.Local.ilineloop).UnitCost!FieldValFloat, V.Local.fMarkup)
				F.Intrinsic.Math.Div(v.DataView.Pricing!PricingView(v.Local.ilineloop).UnitPrice!FieldValFloat, v.DataView.Pricing!PricingView(v.Local.ilineloop).UnitCost!FieldValFloat, V.Local.fMarkup)
				F.Intrinsic.Math.Mult(V.Local.fMarkup.--, 100, V.Local.fMarkup)
				
				F.Data.DataView.SetValue("Pricing", "PricingView", V.Local.ilineloop, "Markup", V.Local.fMarkup)
				
				'Total = UnitPrice * Quantity
				f.Intrinsic.Math.Mult(v.DataView.Pricing!PricingView(v.Local.iLineLoop).UnitPrice!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).Quantity!FieldValFloat,v.Local.fMarkup)
				f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"Total",v.Local.fMarkup)
				
				'Margin $ = Total Price - Total Cost
				f.Intrinsic.Math.Sub(v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).TotalCost!FieldValFloat,v.Local.fMarkup)
				f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"MarginD",v.Local.fMarkup)
				
				'Margin % = (Margin $ / Total Price) * 100
				f.Intrinsic.Control.If(v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,>,0)
					f.Intrinsic.Math.Div(v.DataView.Pricing!PricingView(v.Local.iLineLoop).MarginD!FieldValFloat,v.DataView.Pricing!PricingView(v.Local.iLineLoop).Total!FieldValFloat,v.Local.fMarkup)
				f.Intrinsic.Control.Else
					v.Local.fMarkup.Set(0)
				f.Intrinsic.Control.EndIf
				f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)
				f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iLineLoop,"MarginP",v.Local.fMarkup)
				
'			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.ilineloop)
		
		F.Data.Dictionary.Close("dicFrozen")
		
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.ElseIf(V.Args.ControlName, =, "CMDSROUTER")
	'Mark that the router has been created
	V.Global.bRouter.Set(True)
F.Intrinsic.Control.EndIf

Gui.F_Label_Est.gsfgPricingInfo.ResumeLayout()

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Pricing_Matrix_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Pricing_Matrix.End

Program.Sub.QuoteW.Start
F.Intrinsic.Control.SetErrorHandler("QuoteW_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sPart.Declare(String, "")
V.Local.sLocn.Declare(String, "")
V.Local.sData.Declare(String, "")
V.Local.sFields.Declare(String, "")
V.Local.sTypes.Declare(String, "")
V.Local.iLine.Declare(Long)

'F.Intrinsic.Math.Add(v.Args.LINENO.Long,1,V.Local.iLine)

f.Intrinsic.Control.If(v.Screen.F_Label_Est!txtFinishPart.Text,<>,"")
	V.Local.sPart.Set(V.Screen.F_Label_Est!txtFinishPart.Text)
f.Intrinsic.Control.Else
	V.Local.sPart.Set(V.Screen.F_Label_Est!txtEstimate.Text)
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.If(v.Screen.F_Label_Est!txtFinishLoc.Text,<>,"")
	V.Local.sLocn.Set(v.Screen.F_Label_Est!txtFinishLoc.Text)
f.Intrinsic.Control.Else
	'location is blank so we need to use the default location from the table
	f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstLocation","SELECT LOCN FROM V_LOCATION_ADDRESS WHERE DEF_LOC = 1 ")
	f.Intrinsic.Control.If(v.ODBC.Con!rstLocation.EOF,=,False)
		'We have a default location so set it as location
		V.Local.sLocn.Set(v.ODBC.Con!rstLocation.FieldValTrim!LOCN)
	f.Intrinsic.Control.EndIf
	f.ODBC.Con!rstLocation.Close
f.Intrinsic.Control.EndIf

F.Data.DataTable.AddColumn("dtOrderData", "Line_No", "String")
F.Data.DataTable.SetSeries("dtOrderData", "Line_No", "1", "1")
F.Data.DataTable.AddColumn("dtOrderData", "Order_No", "String", V.Screen.F_Label_Est!txtQuoteNo.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Customer", "String", V.Screen.F_Label_Est!txtCustomer.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Freight", "String", v.Screen.F_Label_Est!txtHFreightZone.Text)
'#7 We changed the functionality of the datepicker at the top right hand corner. It is now used to store the date the estimate was saved last. Per customer, the DateOrderDue will be the current date
'F.Data.DataTable.AddColumn("dtOrderData", "DateDue_Order", "String", v.Screen.F_Label_Est!dtpLastSaved.Value)
F.Data.DataTable.AddColumn("dtOrderData", "DateDue_Order", "String", V.Ambient.Date)
F.Data.DataTable.AddColumn("dtOrderData", "Header_User2", "String", V.Screen.F_Label_Est!txtEstimate.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Ship_Via", "String", v.Screen.F_Label_Est!txtHShipVia.Text)
F.Data.DataTable.AddColumn("dtOrderData", "UserID", "String", v.Caller.User)
F.Data.DataTable.AddColumn("dtOrderData", "Carrier", "String", v.Screen.F_Label_Est!txtHCarrier.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Ship_To_Name", "String", v.Screen.F_Label_Est!txtCustName.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Ship_To_Address1", "String", v.Screen.F_Label_Est!txtCustAddress.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Ship_To_City", "String", v.Screen.F_Label_Est!txtCustCity.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Ship_To_State", "String", V.Screen.F_Label_Est!txtCustState.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Ship_To_Zip", "String", V.Screen.F_Label_Est!txtCustZip.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Ship_To_Country", "String", V.Screen.F_Label_Est!txtCustCountry.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Ship_To_Attn", "String", V.Screen.F_Label_Est!txtContact.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Contact_Name", "String", V.Screen.F_Label_Est!txtContact.Text)
F.Data.DataTable.AddColumn("dtOrderData", "UM", "String", V.Screen.F_Label_Est!txtHUM.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Description", "String", V.Screen.F_Label_Est!txtdesc.Text)
F.Data.DataTable.AddColumn("dtOrderData", "PL", "String", V.Screen.F_Label_Est!ddlHPL.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Contact_Email", "String", v.Screen.F_Label_Est!txtCustEmail.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Contact_Phone", "String", v.Screen.F_Label_Est!txtCustPhone.Text)
F.Data.DataTable.AddColumn("dtOrderData", "Part", "String", V.Local.sPart)
F.Data.DataTable.AddColumn("dtOrderData", "Locn", "String", V.Local.sLocn)

V.Local.sFields.Set("Line_No*!*Order_No*!*Customer*!*Freight*!*DateDue_Order*!*Header_User2*!*Ship_Via*!*UserID*!*Carrier*!*Ship_To_Name*!*Ship_To_Address1*!*Ship_To_City*!*Ship_To_State*!*Ship_To_Zip*!*Ship_To_Country*!*Ship_To_Attn*!*Contact_Name*!*UM*!*Description*!*PL*!*Contact_Email*!*Contact_Phone*!*Part*!*Locn*!*Quantity*!*UnitPrice*!*UnitCost*!*Total")
F.Data.DataView.ToString("dtOrderData", "dvQuantStuff", V.Local.sFields, "*!*", "@!@", V.Local.sData)

'We changed the name of the fields to match the datatable that the library uses to create the quote
V.Local.sFields.Set("Line_No*!*Order_No*!*Customer*!*Freight*!*DateDue_Order*!*Header_User2*!*Ship_Via*!*UserID*!*Carrier*!*Ship_To_Name*!*Ship_To_Address1*!*Ship_To_City*!*Ship_To_State*!*Ship_To_Zip*!*Ship_To_Country*!*Ship_To_Attn*!*Contact_Name*!*UM*!*Description*!*PL*!*Contact_Email*!*Contact_Phone*!*Part*!*Location*!*Qty_Order*!*Quote_Price*!*Cost*!*Extention")
V.Local.sTypes.Set("String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String")
F.Data.DataTable.CreateFromString("dtForMerge", V.Local.sData, V.Local.sFields, V.Local.sTypes, "*!*", "@!@", True)

F.Data.DataTable.Merge("dtForMerge", "dtOrderUpl", True, 2)

F.Data.DataTable.Close("dtForMerge")

'V.uGlobal.uOrders(v.Args.LINENO)!Qty_Order.Set(v.DataView.Pricing!PricingView(V.Args.POS.Long).Quantity!FieldValFloat)
'V.uGlobal.uOrders(v.Args.LINENO)!Quote_Price.Set(v.DataView.Pricing!PricingView(V.Args.POS.Long).UnitPrice!FieldValFloat)
'V.uGlobal.uOrders(v.Args.LINENO)!Cost.Set(v.DataView.Pricing!PricingView(V.Args.POS.Long).UnitCost!FieldValFloat)
'V.uGlobal.uOrders(v.Args.LINENO)!Extention.Set(v.DataView.Pricing!PricingView(V.Args.POS.Long).Total!FieldValFloat)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("QuoteW_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.QuoteW.End

Program.Sub.SummaryButtons.Start
F.Intrinsic.Control.SetErrorHandler("SummaryButtons_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iPOS.Declare(Long)

F.Intrinsic.Control.SelectCase(V.Args.ControlName)
	F.Intrinsic.Control.Case("CMDSUMOPADD")
		'new record
		f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iPOS)
		F.Data.DataTable.AddRow("FullTable","Est_NO",V.Screen.F_Label_Est!txtEstimate.Text,"Router",V.Screen.F_Label_Est!txtFinishPart.Text,"LMO","O","Pos",V.Local.iPOS,"PART",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).PART!FieldVal,"REV",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).REV!FieldVal,"LOC",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).LOC!FieldVal,"Code",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).Code!FieldVal,"Setup",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).Setup!FieldValFloat,"Qty",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).Qty!FieldValFloat,"ShowCost",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).ShowCost!FieldValFloat,"Freq",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).Freq!FieldValFloat,"Description",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).Description!FieldVal,"UM",V.DataTable.SUMMARYBOTTOM(V.DataTable.SUMMARYBOTTOM.Rowcount--).UM!FieldVal)
		
		'setting op code desc and vendor text boxes to blank
		Gui.F_Label_Est.txtSumOpCode.Text("")
		Gui.F_Label_Est.txtSumOPDesc.Text("")
		Gui.F_Label_Est.txtSumOpVend.Text("")
		
		F.Data.DataTable.DeleteRow("SUMMARYBOTTOM")
			
	F.Intrinsic.Control.Case("CMDSUMOPCLEAR")
		'setting op code desc and vendor text boxes to blank
		Gui.F_Label_Est.txtSumOpCode.Text("")
		Gui.F_Label_Est.txtSumOPDesc.Text("")
		Gui.F_Label_Est.txtSumOpVend.Text("")
		
		F.Intrinsic.Control.If(V.DataTable.SummaryBottom.RowCount--,>=,0)
			F.Data.DataTable.DeleteRow("SUMMARYBOTTOM")
		F.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("SummaryButtons_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.SummaryButtons.End

Program.Sub.External_Sources.Start
F.Intrinsic.Control.SetErrorHandler("External_Sources_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sParam.Declare(String)
V.Local.iHandle.Declare(Long)


'all external sources buttons are located here
'buttons: Customer Master, CRM, Inventory Master, Vendor Master

F.Intrinsic.Control.SelectCase(V.Args.ControlName)

'Customer Master
	F.Intrinsic.Control.Case("CMDCUSTMAST")
		'open customer Master screen in Open
		'if customer field is not blank open to the specific customer in view
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtCustomer.Text,<>,"")
			F.Intrinsic.String.Build("V!*!!*!{0}",V.Screen.F_Label_Est!txtCustomer.Text,V.Local.sParam)
			F.Global.General.CallWrapperAsync(100000,V.Local.sParam)
		F.Intrinsic.Control.Else
'			'customer field is blank so open blank customer
			F.Global.General.LaunchMenuTask(94,0,V.Local.iHandle)
		F.Intrinsic.Control.EndIf

'CRM
	F.Intrinsic.Control.Case("CMDCRM")
		'if customer field is not blank open the CRM for the selected customer
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtCustomer.Text,<>,"")
			F.Intrinsic.String.Build("MODE::9*!*COMPANY-NUMBER::{0}*!*COMPANY-TYPE::15",V.Screen.F_Label_Est!txtCustomer.Text,V.Local.sParam)
			F.Global.CRM.Invoke(V.Local.sParam,V.Local.iHandle)
		F.Intrinsic.Control.Else
			'open CRM for all
			F.Global.General.LaunchMenuTask(242,0,V.Local.iHandle)
		F.Intrinsic.Control.EndIf

'Inventory Master
	F.Intrinsic.Control.Case("CMDINVMAST")
		'open inventory master view screen
		F.Global.General.LaunchMenuTask(312,0,V.Local.iHandle)

'Vendor Master
	F.Intrinsic.Control.Case("CMDVENDMAST")
		'open vendor master in view screen
		F.Global.General.LaunchMenuTask(3,0,V.Local.iHandle)

'Supply and Demand
	F.Intrinsic.Control.Case("CMDSANDD")
		'Open Supply and demand screen
		F.Global.General.LaunchMenuTask(321,0,V.Local.iHandle)

F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("External_Sources_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.External_Sources.End

Program.Sub.StdBrowsers.Start
F.Intrinsic.Control.SetErrorHandler("StdBrowsers_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sTitle.Declare(String)
V.Local.iWidth.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iRows.Declare(Long)
V.Local.smaterialsql.Declare(String)
V.Local.sUser.Declare(String)
V.Local.bExist.Declare(Boolean,False)
V.Local.iCount.Declare(Long)
V.Local.sLoc.Declare(String)
V.Local.iAlign.Declare(Long)
V.Local.sFormat.Declare(String)
V.Local.fCost.Declare(Float)
V.Local.sFilterInfo.Declare(String)
V.Local.sQuoteLine.Declare(String)
V.Local.sQuoteText.Declare(String)
V.Local.sParam.Declare(String)
v.Local.fAmount.Declare(Float)
V.Local.iLine.Declare(Long)
V.Local.sRouter.Declare(String, "")
V.Local.sRTF.Declare(String, "")

'declaring local variables for the die filter
V.Local.sdiesql.Declare(String)

F.Intrinsic.Control.SelectCase(V.Args.ControlName)
	F.Intrinsic.Control.Case("CMDCUSTOMER")
		
		'Opening the customer/PROSPECT master browser.
		f.Intrinsic.UI.Browser(225,"",v.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			f.Intrinsic.Control.CallSub(cleargroup1)
			'split the ret and get customer should be ret 0, then pull all of the other information for all of the fields based on the customer
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,8)
			f.Intrinsic.Control.If(v.Local.sRet(2),=,"C")
				F.Intrinsic.String.Build("SELECT VCM.CUSTOMER, VCM.NAME_CUSTOMER, VCM.ADDRESS1, VCM.CITY, VCM.STATE, VCM.ZIP, VCM.COUNTRY, VCM.TELEPHONE, VCS.FAX_NUMBER, VCS.EMAIL, VBG.GROUP_CUST FROM V_CUSTOMER_MASTER AS VCM LEFT JOIN V_CUSTOMER_SALES AS VCS ON VCM.CUSTOMER = VCS.CUSTOMER LEFT JOIN V_BUYING_GROUP AS VBG ON VCM.CUSTOMER = VBG.CUSTOMER WHERE VCM.CUSTOMER = '{0}' ",V.Local.sRet(0).Trim,V.Local.sSQL)
			f.Intrinsic.Control.Else
				F.Intrinsic.String.Build("SELECT PROSPECT AS CUSTOMER, NAME_PROSPECT AS NAME_CUSTOMER, ADDRESS1, CITY, STATE, ZIP, COUNTRY, TELEPHONE, FAX AS FAX_NUMBER, EMAIL, RTRIM(' ') AS GROUP_CUST FROM V_PROSPECT_MASTER WHERE PROSPECT = '{0}'",V.Local.sRet(0).Trim,V.Local.sSQL)
			f.Intrinsic.Control.EndIf
			F.ODBC.Connection!con.OpenLocalRecordsetRO("rstCustomer",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstCustomer.EOF,=,False)
				'set each field to its value
				Gui.F_Label_Est.txtCustomer.Text(V.ODBC.con!rstCustomer.FieldValTrim!CUSTOMER)
				Gui.F_Label_Est.txtCustName.Text(V.ODBC.con!rstCustomer.FieldValTrim!NAME_CUSTOMER)
				Gui.F_Label_Est.txtCustBG.Text(V.ODBC.con!rstCustomer.FieldValTrim!GROUP_CUST)
				Gui.F_Label_Est.txtCustAddress.Text(V.ODBC.con!rstCustomer.FieldValTrim!ADDRESS1)
				Gui.F_Label_Est.txtCustCity.Text(V.ODBC.con!rstCustomer.FieldValTrim!CITY)
				Gui.F_Label_Est.txtCustState.Text(V.ODBC.con!rstCustomer.FieldValTrim!STATE)
				Gui.F_Label_Est.txtCustZip.Text(V.ODBC.con!rstCustomer.FieldValTrim!ZIP)
				Gui.F_Label_Est.txtCustCountry.Text(V.ODBC.con!rstCustomer.FieldValTrim!COUNTRY)
				Gui.F_Label_Est.txtCustPhone.Text(V.ODBC.con!rstCustomer.FieldValTrim!TELEPHONE)
				Gui.F_Label_Est.txtCustFax.Text(V.ODBC.con!rstCustomer.FieldValTrim!FAX_NUMBER)
				Gui.F_Label_Est.txtCustEmail.Text(V.ODBC.con!rstCustomer.FieldValTrim!EMAIL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstCustomer.Close
			'check to see if the customer has a contract in the contract header table if they do then check the box
			F.Intrinsic.String.Build("SELECT * FROM V_CONTRACT_HEADER WHERE CUSTOMER = '{0}' ",V.Screen.F_Label_Est!txtCustomer.Text,V.Local.sSQL)
			F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstCont",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.Con!rstCont.EOF,=,False)
				'there is something in the table so check the box
				Gui.F_Label_Est.chkHContPricing.Value(1)
			F.Intrinsic.Control.Else
				'there is nothing in the table so unckeck the box
				Gui.F_Label_Est.chkHContPricing.Value(0)
			F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstCont.Close
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDCONTACT")
		'Opens the Contact browser
		'this will populate the contact field based on the Customer selected
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtCustomer.Text,<>,"")
			V.Local.sRet.Set(V.Screen.F_Label_Est!txtContact.Text.Trim)
			F.Intrinsic.String.Split("Contact*!*Email*!**!**!**!**!**!*","*!*",V.Local.sTitle)
			F.Intrinsic.String.Split("2000*!*3000*!*0*!*0*!*0*!*0*!*0*!*0","*!*",V.Local.iWidth)
			F.Intrinsic.String.Build("SELECT NAME, EMAIL1, ADDRESS_1, CITY, STATE, ZIP, PHONE1, FAX1 FROM V_CONTACT WHERE CUST = '{0}' AND UCASE(NAME) LIKE '%{1}%' ORDER BY NAME ASC",V.Screen.F_Label_Est!txtCustomer.Text,V.Local.sRet.UCase,V.Local.sSQL)
			F.Intrinsic.UI.Browser("Customer Contact","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
				'set the contact to the contact field
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				V.Local.sRet.RedimPreserve(0,7)
				Gui.F_Label_Est.txtContact.Text(V.Local.sRet(0).Trim)
				Gui.F_Label_Est.txtCustEmail.Text(V.Local.sRet(1).Trim)
				Gui.F_Label_Est.txtCustAddress.Text(V.Local.sRet(2).Trim)
				Gui.F_Label_Est.txtCustCity.Text(V.Local.sRet(3).Trim)
				Gui.F_Label_Est.txtCustState.Text(V.Local.sRet(4).Trim)
				Gui.F_Label_Est.txtCustZip.Text(V.Local.sRet(5).Trim)
				Gui.F_Label_Est.txtCustPhone.Text(V.Local.sRet(6).Trim)
				Gui.F_Label_Est.txtCustFax.Text(V.Local.sRet(7).Trim)
			F.Intrinsic.Control.Else
				Gui.F_Label_Est.txtCustEmail.Text("")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			V.Global.sControl.Set("")
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDSALESREP")
		'Opens the Sales rep browser
		'this will populate the sales rep field.
		F.Intrinsic.String.Split("Sales ID*!*Sales Name","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("800*!*2000","*!*",V.Local.iWidth)
		V.Local.sRet.Set(V.Screen.F_Label_Est!txtHSalesRep.Text.Trim)
		F.Intrinsic.String.Build("SELECT ID, NAME FROM V_SALESPERSONS WHERE UCASE(NAME) LIKE '%{0}%' ORDER BY ID ASC",V.Local.sRet.UCase,V.Local.sSQL)
		F.Intrinsic.UI.Browser("SalesPerson Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			'split the return and set the name to the field
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,1)
			'set the sales person to the sales person field
			Gui.F_Label_Est.txtHSalesRep.Text(V.Local.sRet(1).Trim)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDSHIPVIA")
		'open ship via browser
		'this will populate the ship via field
		F.Intrinsic.String.Split("Description*!*Code","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("1500*!*500","*!*",V.Local.iWidth)
		V.Local.sSQL.Set("SELECT SHIP_VIA, SHIP_VIA_CODE FROM AP_SHIP_VIA WHERE ASS_SYS = 'AR' AND ASS_SUB_SYS = 'VIA' ORDER BY SHIP_VIA ASC ")
		F.Intrinsic.UI.Browser("Ship Via Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			'split the return and set the ship via to ship via field
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,1)
			Gui.F_Label_Est.txtHShipVia.Text(V.Local.sRet(0).Trim)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDCARRIER")
		'open carrier browser
		'this will populate the carrier field
		F.Intrinsic.String.Split("Carrier*!*Code*!*Description","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("500*!*500*!*2000","*!*",V.Local.iWidth)
		V.Local.sSQL.Set("SELECT DISTINCT OC.CARRIER_CD AS Carrier, OC.SRVC_TYPE AS Code, OC.SHORT_DESC AS Description FROM OE_CARRIER OC  ORDER BY Carrier ASC ")
		F.Intrinsic.UI.Browser("Carrier Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			'split the string and set Carrier to Carrier Field
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,2)
			Gui.F_Label_Est.txtHCarrier.Text(V.Local.sRet(0).Trim)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDFOB")
		'Open FOB Browser
		'this will populate the FOB field
		F.Intrinsic.String.Split("Description*!*Code","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("2000*!*500","*!*",V.Local.iWidth)
		V.Local.sSQL.Set("SELECT SHIP_FOB , SHIP_FOB_CODE  FROM SHIP_FOB WHERE ASS_SYS = 'AR' AND ASS_SUB_SYS = 'COL' ORDER BY SHIP_FOB ASC ")
		F.Intrinsic.UI.Browser("FOB Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			'split the string and set ship_fob to FOB field
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,1)
			Gui.F_Label_Est.txtHFOB.Text(V.Local.sRet(0).Trim)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDTERMS")
		'Open Terms Browser
		'This will populate the Terms field
		F.Intrinsic.String.Split("Description*!*Code*!*Percent*!*Discount Days*!*Terms Due Days","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("1000*!*500*!*500*!*500*!*500","*!*",V.Local.iWidth)
		V.Local.sSQL.Set("SELECT TERMS_MESSAGE , TERMS_CODE , TERMS_DISC_PCT , TERMS_DISC_DAYS , TERMS_DUE_DAYS  FROM AR_TERMS WHERE ASS_SYS = 'AR' AND ASS_SUB_SYS = 'TRM' ORDER BY TERMS_MESSAGE ASC")
		F.Intrinsic.UI.Browser("Terms Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			'slit the string and set terms_message to Terms field
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,4)
			Gui.F_Label_Est.txtHTerms.Text(V.Local.sRet(0).Trim)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDPROJECT")
		'Open Project browser
		'this will populate the project field
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtCustomer.Text,<>,"")
			F.Intrinsic.String.Split("Project Number*!*Description","*!*",V.Local.sTitle)
			F.Intrinsic.String.Split("1500*!*2000","*!*",V.Local.iWidth)
			F.Intrinsic.String.Build("SELECT PROJECT, DESCR FROM V_PROJECT_MASTER WHERE CUSTOMER = '{0}' ORDER BY PROJECT ASC ",V.Screen.F_Label_Est!txtCustomer.Text,V.Local.sSQL)
			F.Intrinsic.UI.Browser("Project Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
				'split the string and set project to the project field
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				V.Local.sRet.RedimPreserve(0,1)
				Gui.F_Label_Est.txtHProject.Text(V.Local.sRet(0).Trim)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDTRDFREIGHT")
		'Open third party freight which is the customer master
		'this will populate third paty freight field with customer number
		F.Intrinsic.String.Split("Customer Number*!*Customer Name","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("800*!*2500","*!*",V.Local.iWidth)
		V.Local.sSQL.Set("SELECT CUSTOMER, NAME_CUSTOMER FROM V_CUSTOMER_MASTER ORDER BY CUSTOMER ASC")
		F.Intrinsic.UI.Browser("Third Party Freight Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			'split and set customer to third party freight field
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,1)
			Gui.F_Label_Est.txtHTrdFreight.Text(V.Local.sRet(0).Trim)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDFREIGHTZONE")
		'Open freight zone browser
		'this will populate freight zone field
		F.Intrinsic.String.Split("Zone*!*Rate*!*Description","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("500*!*500*!*1000","*!*",V.Local.iWidth)
		V.Local.sSQL.Set("SELECT ZONE, RATE, DESCR  FROM OE_FREIGHT ORDER BY ZONE ASC ")
		F.Intrinsic.UI.Browser("Freight Zone Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			'split and set zone to freight zone field
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,2)
			Gui.F_Label_Est.txtHTrdFreight.Text(V.Local.sRet(0).Trim)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDPART")
		
		Gui.F_Label_Est.cmdPart.Enabled(False)
		v.Global.sTestWC.Set(V.Screen.F_Label_Est!txtMPart.Text)
		'using location when using the lost focus even on the loc in the history frame
		F.Intrinsic.Variable.ArgExists("Loc",V.Local.bExist)
		F.Intrinsic.Control.If(V.Local.bExist,=,False)
			F.Intrinsic.Control.CallSub(Die_filter,"ControlName",V.Args.ControlName)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.CallSub(Die_filter,"ControlName",V.Args.ControlName,"Loc",V.Args.Loc)
		F.Intrinsic.Control.EndIf
		
		'Check to see if the datatable exists. If not exitsub
		F.Intrinsic.Control.If(V.DataTable.DTBrowser.Exists,=,False)
			F.Intrinsic.UI.CloseWaitDialog
			Gui.F_Label_Est.cmdPart.Enabled(True)
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
'		f.Data.DataView.Create("DTBrowser","DVBrowser",22,"","Part asc")
''		f.Data.DataView.ToString("DTBrowser","DVBrowser","PART*!*LOCATION*!*WIDTH*!*LENGTH*!*ACROSS*!*GAP_ACROSS*!*GAP_DOWN*!*LINER_THICK*!*MAT_USED*!*TOOL_NUMBER*!*CORNER_RADII*!*DESCRIPTION","*!*","&!&",v.Local.sRet)
		f.Data.DataView.ToString("DTBrowser","DVBrowser","*!*","&!&",v.Local.sRet)
''		f.Intrinsic.UI.BrowserFromString("Part Browser",v.Local.sRet,"*!*","@!@",v.Local.sTitle,v.Local.iWidth,18000,10000,v.Local.sFormat,v.Local.iAlign,v.Local.sRet)
		
		
		F.Intrinsic.String.Split("PART*!*LOCATION*!*WIDTH*!*LENGTH*!*ACROSS*!*GAP_ACROSS*!*GAP_DOWN*!*LINER_THICK*!*MAT_USED*!*TOOL_NUMBER*!*CORNER*!*DESCRIPTION*!*SHAPE*!*UM","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("2000*!*1000*!*900*!*900*!*900*!*900*!*900*!*900*!*2000*!*900*!*900*!*2900*!*0*!*0","*!*",V.Local.iWidth)
		F.Intrinsic.String.Split("0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*0","*!*",V.Local.iAlign)
		F.Intrinsic.String.Split("*!**!*0.0000*!*0.0000*!**!*0.0000*!*0.0000*!**!**!*0.0000*!*0.0000*!**!**!*","*!*",V.Local.sFormat)
		
		F.Intrinsic.Control.If(V.Local.sRet,=,"")
			f.Intrinsic.UI.Msgbox("No Parts Found.")
			Gui.F_Label_Est.cmdPart.Enabled(True)
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		f.Intrinsic.UI.BrowserFromString("Part Browser",v.Local.sRet,"*!*","&!&",v.Local.sTitle,v.Local.iWidth,18000,10000,v.Local.sFormat,v.Local.iAlign,v.Local.sRet)
''		f.Intrinsic.UI.BrowserFromFile("Part Browser","C:\Users\ssmith\Desktop\file.txt","@!@","*!*",v.Local.sTitle,v.Local.iWidth,18000,10000,v.Local.sFormat,v.Local.iAlign,v.Local.sRet)
'		F.Intrinsic.UI.Browser("Part Browser","Con",V.Global.sDieSql,V.Local.sTitle,V.Local.iWidth,18000,10000,V.Local.sFormat,V.Local.iAlign,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")		
			'split the return to get the part and location
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			V.Local.sRet.RedimPreserve(0,1)
			F.Intrinsic.String.Build("SELECT RTRIM(MST.PART) AS PART, RTRIM(MST.LOCATION) AS LOC, RTRIM(' ') AS CODE, RTRIM(MST.DESCRIPTION) AS DESCRIPTION, ISNULL(MST.AMT_PRICE,0.00) AS 'COST/UM', ISNULL(GCG.DEFAULT_MSI,0.00) AS MSI, ISNULL(MST.AMT_COST,0.00) AS COST, RTRIM(MST.UM_INVENTORY) AS UM, ISNULL(GCG.LENGTH1,0.00) AS LENGTH, ISNULL(GCG.WIDTH,0.00) AS WIDTH, ISNULL(MST2.LBS,0.00) AS WEIGHT FROM V_INVENTORY_MSTR AS MST LEFT JOIN V_INVENTORY_MST2 AS MST2 ON MST.PART = MST2.PART AND MST.LOCATION = MST2.LOCATION LEFT JOIN GCG_3623_INVENTORY AS GCG ON MST.PART = GCG.PART AND MST.LOCATION = GCG.LOCATION1 WHERE MST.PART = '{0}' AND MST.LOCATION = '{1}'  ",V.Local.sRet(0).Trim,V.Local.sRet(1).Trim,V.Local.sSQL)

			f.Intrinsic.Control.If(v.DataTable.MaterialTopTemp.Exists,=,True)
				f.Data.DataTable.Close("MaterialTopTemp")
			f.Intrinsic.Control.EndIf
			F.Data.DataTable.CreateFromSQL("MaterialTopTemp","Con",v.Local.sSQL,True)
			
			'The cost for the material is no longer being stored in the V_INVENTORY_MSTR, so we can search for it in the Inventory_Cost table 'FEQ Mod 11/12/2019
			F.Intrinsic.String.Build("Select TOP 1 COST from V_INVENTORY_COST where PART = '{0}' and LOCN = '{1}'", V.Local.sRet(0).Trim, V.Local.sRet(1).Trim, V.Local.sSQL)
			F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet(0))
			F.Data.DataTable.SetValue("MaterialTopTemp", -1, "COST", V.Local.sRet(0).Float)
						
			V.Local.sRet.Redim(0,0)
			V.Local.sRet.Set("")
			
			'load to the material top datatable
			f.Data.DataTable.DeleteRow("MaterialTop")
			f.Data.DataTable.Merge("MaterialTopTemp","MaterialTop",True,2)
			f.Data.DataTable.Close("MaterialTopTemp")
			
			'check to see if Sort Code is DIE, if it is then populate the text boxes PL
			F.Intrinsic.String.Build("SELECT MST.PRODUCT_LINE as PL, MST.UM_INVENTORY, DIE.SHAPE, DIE.WIDTH, DIE.LENGTH1 AS LENGTH, CAST(RTRIM(DIE.ACR_DIE) AS DOUBLE) AS ACR_DIE, CAST(RTRIM(DIE.ACR_PRESS) AS DOUBLE) AS ACR_PRESS, CAST(RTRIM(DIE.ACR_FIN) AS DOUBLE)  AS ACR_FIN, CAST(RTRIM(DIE.GAP_ACROSS) AS DOUBLE) AS GAP_ACROSS, CAST(RTRIM(DIE.GAP_DOWN) AS DOUBLE) AS GAP_DOWN, DIE.MAT_USED,  CAST(RTRIM(DIE.ACROSS) AS DOUBLE) AS ACROSS FROM GCG_3623_INVENTORY AS DIE LEFT JOIN V_INVENTORY_MSTR AS MST ON DIE.PART = MST.PART AND DIE.LOCATION1 = MST.LOCATION WHERE DIE.PART = '{0}' AND DIE.LOCATION1 = '{1}' ",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal,V.Local.sSQL)
			'took out liner thickness
			'CAST(RTRIM(DIE.LINER_THICK) AS DOUBLE) AS LINER_THICK,
			F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstDie",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.Con!rstDie.EOF,=,False)
				'we have a die so populate the fields
				Gui.F_Label_Est.ddlMUM.Text(V.ODBC.Con!rstDie.FieldValTrim!UM_INVENTORY)
				Gui.F_Label_Est.ddlMLabelShape.Text(V.ODBC.Con!rstDie.FieldValTrim!SHAPE)
				Gui.F_Label_Est.txtMMatUsed.Text(V.ODBC.Con!rstDie.FieldValTrim!MAT_USED)
			
				f.Intrinsic.Control.If(v.Screen.F_Label_Est!txtHlblWidth.Text,=,"","OR",v.Screen.F_Label_Est!txtHlblWidth.Text,=,"0")
				f.Intrinsic.Control.AndIf(v.Screen.F_Label_Est!txtHlblDepth.Text,=,"","OR",v.Screen.F_Label_Est!txtHlblDepth.Text,=,"0")
					'Width and depth are blank or 0 so we can set the values
					Gui.F_Label_Est.txtHlblWidth.Text(v.ODBC.Con!rstDie.FieldValFloat!WIDTH)
					Gui.F_Label_Est.txtMWidthF.Text(V.ODBC.Con!rstDie.FieldValFloat!WIDTH)
					Gui.F_Label_Est.txtMWidthT.Text(V.ODBC.Con!rstDie.FieldValFloat!WIDTH)
					Gui.F_Label_Est.txtMLengthF.Text(V.ODBC.Con!rstDie.FieldValFloat!LENGTH)
					Gui.F_Label_Est.txtMLengthT.Text(V.ODBC.Con!rstDie.FieldValFloat!LENGTH)
					Gui.F_Label_Est.txtHlblDepth.Text(v.ODBC.Con!rstDie.FieldValFloat!LENGTH)
					Gui.F_Label_Est.txtHAcrPress.Text(v.ODBC.Con!rstDie.FieldValFloat!ACR_PRESS)
					Gui.F_Label_Est.txtHAcrDie.Text(v.ODBC.Con!rstDie.FieldValFloat!ACROSS)
					Gui.F_Label_Est.txtMACRDie.Text(V.ODBC.Con!rstDie.FieldValFloat!ACR_DIE)
					'FEQ Mod #6 Customer wanted to populate a 1 if the PL of the inventory part chosen is ZT
					F.Intrinsic.Control.If(V.ODBC.Con!rstDie.FieldValTrim!PL, =, "ZT")
						Gui.F_Label_Est.txtHFinAcross.Text("1")
					F.Intrinsic.Control.Else
						Gui.F_Label_Est.txtHFinAcross.Text(v.ODBC.Con!rstDie.FieldValFloat!ACR_FIN)
					F.Intrinsic.Control.EndIf
'					Gui.F_Label_Est.txtHFinAcross.Text(v.ODBC.Con!rstDie.FieldValFloat!ACR_FIN)
					Gui.F_Label_Est.txtOGapAcross.Text(v.ODBC.Con!rstDie.FieldValFloat!GAP_ACROSS)
'					Gui.F_Label_Est.txtHLinerWidth.Text(v.ODBC.Con!rstDie.FieldValFloat!LINER_THICK)
					Gui.F_Label_Est.txtOGapDown.Text(v.ODBC.Con!rstDie.FieldValFloat!GAP_DOWN)
					f.Intrinsic.Math.Add(v.Screen.F_Label_Est!txtHLblWidth.Text.Float,v.Screen.F_Label_Est!txtOGapAcross.Text.Float,v.Local.fAmount)
					Gui.F_Label_Est.txtHLinerWidth.Text(v.Local.fAmount)
					
					f.Intrinsic.Control.CallSub(Label_Info_Lost_Focus,"ControlName","TXTHLBLDEPTH")
					f.Intrinsic.Control.CallSub(Label_Info_Lost_Focus,"ControlName","TXTHLBLWIDTH")
				f.Intrinsic.Control.Else
					'Width and depth are not blank or 0 so we need to ask if they want to set the new values.
					F.Intrinsic.UI.Msgbox("Label Finish Info is already filled in, do you want to update it using this Die?","Attention",4,v.Local.sRet)
					f.Intrinsic.Control.If(v.Local.sRet.Long,=,6)
						'They picked Yes so update the fields
						Gui.F_Label_Est.txtHlblWidth.Text(v.ODBC.Con!rstDie.FieldValFloat!WIDTH)
						Gui.F_Label_Est.txtMWidthF.Text(V.ODBC.Con!rstDie.FieldValFloat!WIDTH)
						Gui.F_Label_Est.txtMWidthT.Text(V.ODBC.Con!rstDie.FieldValFloat!WIDTH)
						Gui.F_Label_Est.txtMLengthF.Text(V.ODBC.Con!rstDie.FieldValFloat!LENGTH)
						Gui.F_Label_Est.txtMLengthT.Text(V.ODBC.Con!rstDie.FieldValFloat!LENGTH)
						'FEQ Mod #6 Customer wanted to populate a 1 if the PL of the inventory part chosen is ZT
						Gui.F_Label_Est.txtHlblDepth.Text(v.ODBC.Con!rstDie.FieldValFloat!LENGTH)
						F.Intrinsic.Control.If(V.ODBC.Con!rstDie.FieldValTrim!PL, =, "ZT")
							Gui.F_Label_Est.txtHFinAcross.Text("1")
						F.Intrinsic.Control.Else
							Gui.F_Label_Est.txtHFinAcross.Text(v.ODBC.Con!rstDie.FieldValFloat!ACR_FIN)
						F.Intrinsic.Control.EndIf
'						Gui.F_Label_Est.txtHFinAcross.Text(v.ODBC.Con!rstDie.FieldValFloat!ACR_FIN)
						Gui.F_Label_Est.txtHAcrPress.Text(v.ODBC.Con!rstDie.FieldValFloat!ACR_PRESS)
						Gui.F_Label_Est.txtHAcrDie.Text(v.ODBC.Con!rstDie.FieldValFloat!ACROSS)
						Gui.F_Label_Est.txtMACRDie.Text(V.ODBC.Con!rstDie.FieldValFloat!ACR_DIE)
						
						Gui.F_Label_Est.txtOGapAcross.Text(v.ODBC.Con!rstDie.FieldValFloat!GAP_ACROSS)
'						Gui.F_Label_Est.txtHLinerWidth.Text(v.ODBC.Con!rstDie.FieldValFloat!LINER_THICK)
						Gui.F_Label_Est.txtOGapDown.Text(v.ODBC.Con!rstDie.FieldValFloat!GAP_DOWN)
						f.Intrinsic.Math.Add(v.Screen.F_Label_Est!txtHLblWidth.Text.Float,v.Screen.F_Label_Est!txtOGapAcross.Text.Float,v.Local.fAmount)
						Gui.F_Label_Est.txtHLinerWidth.Text(v.Local.fAmount)
						
						f.Intrinsic.Control.CallSub(Label_Info_Lost_Focus,"ControlName","TXTHLBLDEPTH")
						f.Intrinsic.Control.CallSub(Label_Info_Lost_Focus,"ControlName","TXTHLBLWIDTH")
					f.Intrinsic.Control.EndIf
					
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstDie.Close
			Gui.F_Label_Est.txtMPartDesc.Text(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Description!FieldVal)
			'pad ret 1 part to 20 and then set left 17 as part and right 3 as rev
			F.Intrinsic.String.RPad(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal," ",20,V.Local.sRet)
			Gui.F_Label_Est.txtMPart.Text(V.Local.sRet.Left17)
			Gui.F_Label_Est.txtMPart.Text(v.Screen.F_Label_Est!txtMPart.Text.Trim)
			Gui.F_Label_Est.txtMPartRev.Text(V.Local.sRet.Right3)
			Gui.F_Label_Est.txtMPartRev.Text(v.Screen.F_Label_Est!txtMPartRev.Text.Trim)

			'Convert  LF Cost to MSI cost
			f.Intrinsic.Math.Mult(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Width!FieldValFloat,12,v.Local.fCost)
			F.Intrinsic.Math.Div(V.Local.fCost,1000,V.Local.fCost)
			F.Intrinsic.Control.If(V.Local.fCost,<>,0)
				F.Intrinsic.Math.Div(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost!FieldValFloat,V.Local.fCost,v.Local.fCost)
			F.Intrinsic.Control.EndIf
			'This is giving me MSI
			f.Data.DataTable.SetValue("MaterialTop",v.DataTable.MaterialTop.RowCount--,"MSI",v.Local.fCost)
			f.Data.DataTable.SetValue("MaterialTop",v.DataTable.MaterialTop.RowCount--,"ShowCost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost!FieldValFloat)


			'SAVIGN THE FORMULA
			F.Intrinsic.String.Build("{0}&$&12&$&1000&$&{1}",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Width!FieldValFloat,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).MSI!FieldValFloat,v.Local.sRet)
			f.Data.DataTable.SetValue("MaterialTop",v.DataTable.MaterialTop.RowCount--,"FormulaM",v.Local.sRet)

			'Check to see if PL for the part is RM
			F.Intrinsic.String.Build("SELECT PRODUCT_LINE FROM V_INVENTORY_MSTR WHERE PART = '{0}' AND LOCATION = '{1}' AND PRODUCT_LINE = 'RM' ",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal,V.Local.sSQL)
			F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstPL",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.Con!rstPL.EOF,=,False)
				'PL is RM so check to see if it is exact
				F.Intrinsic.String.Build("SELECT EXACT FROM GCG_3623_INVENTORY WHERE PART = '{0}' AND LOCATION1 = '{1}' AND EXACT = 0 ",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal,V.Local.sSQL)
				F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstExact",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.Con!rstExact.EOF,=,False)
					'MSG BOX SAYING IT IS NOT EXACT
					F.Intrinsic.String.Build("{0} is NOT exact.",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,V.Local.sSQL)
					F.Intrinsic.UI.Msgbox(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.Con!rstExact.Close
			F.Intrinsic.Control.Else
				'PL <> RM SO CALCULATE PRICE IF QTY IS 0
				F.Intrinsic.Control.If(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Qty!FieldValFloat,=,0)
					'Setup/Freq * Cost = Price
					F.Intrinsic.Control.If(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,<>,0)
						F.Intrinsic.Math.Div(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Setup!FieldValFloat,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,v.Local.fCost)
						F.Intrinsic.Math.Mult(v.Local.fCost,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).ShowCost!FieldValFloat,v.Local.fCost)
						f.Data.DataTable.SetValue("MaterialTop",v.DataTable.MaterialTop.RowCount--,"Cost/um",v.Local.fCost)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstPL.Close
						
			F.Intrinsic.control.If(V.Global.lBottomRow,>=,0)
				f.Intrinsic.String.Build("Part = '{0}' and Loc = '{1}'",v.DataTable.FullTable(v.Global.lBottomRow).Part!FieldVal,v.DataTable.FullTable(v.Global.lBottomRow).Loc!FieldVal,v.Local.sRet)
				f.Data.DataView.Create("FullTable","MatChange",22,v.Local.sRet,"")
				f.Intrinsic.Control.If(v.DataView.FullTable!MatChange.RowCount,>,0)
					'MAT'
'					f.Data.DataView.SetValue("FullTable","MatChange",-1,"LMO","M","Code",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Code!FieldVal,"Description",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Description!FieldVal,"Freq",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,"Width",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Width!FieldValFloat,"Weight",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Weight!FieldValFloat,"Length",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Length!FieldValFloat,"Cost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost!FieldValFloat,"ShowCost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).ShowCost!FieldValFloat,"MSI",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).MSI!FieldValFloat,"Qty",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Qty!FieldValFloat,"UM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).UM!FieldVal,"Setup",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Setup!FieldValFloat,"Cost/um",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost/um!FieldValFloat,"FormulaM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).FormulaM!FieldVal,"FormulaQ",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).FormulaQ!FieldVal)
'					f.Data.DataView.SetValue("FullTable","MatChange",-1,"Part",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,"Loc",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal)
					f.Data.DataView.SetValue("FullTable","MatChange",-1,"LMO","M","Description",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Description!FieldVal,"Freq",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,"Width",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Width!FieldValFloat,"Weight",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Weight!FieldValFloat,"Length",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Length!FieldValFloat,"Cost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost!FieldValFloat,"ShowCost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).ShowCost!FieldValFloat,"MSI",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).MSI!FieldValFloat,"UM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).UM!FieldVal,"Cost/um",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost/um!FieldValFloat)
					f.Data.DataView.SetValue("FullTable","MatChange",-1,"Part",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,"Loc",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal)
				f.Intrinsic.Control.EndIf
				f.Data.DataView.Close("FullTable","MatChange")
'				f.Data.DataTable.AddRow("FullTable","LMO","M","Row",v.DataTable.FullTable(v.Global.lBottomRow).Row!FieldValLong,"Pos",v.DataTable.FullTable(v.Global.lBottomRow).Pos!FieldValLong,"Part",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,"Loc",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal,"Code",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Code!FieldVal,"Description",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Description!FieldVal,"Freq",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,"Width",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Width!FieldValFloat,"Weight",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Weight!FieldValFloat,"Length",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Length!FieldValFloat,"Cost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost!FieldValFloat,"ShowCost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).ShowCost!FieldValFloat,"MSI",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).MSI!FieldValFloat,"Qty",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Qty!FieldValFloat,"UM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).UM!FieldVal,"Setup",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Setup!FieldValFloat,"Cost/um",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost/um!FieldValFloat,"FormulaM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).FormulaM!FieldVal,"FormulaQ",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).FormulaQ!FieldVal)
'				f.Data.DataTable.DeleteRow("FullTable",v.Global.lBottomRow)
				F.Intrinsic.Control.CallSub(Materialbuttons,"ControlName","CMDMCLEAR")
			F.Intrinsic.Control.EndIf
			'v.Global.sTestWC.Set("")
			v.Global.sTestWC.Set(V.Screen.F_Label_Est!txtMPart.Text)			
		F.Intrinsic.Control.EndIf
		Gui.F_Label_Est.cmdPart.Enabled(True)
		
	F.Intrinsic.Control.Case("CMDWC")
		'open work center browser
		v.Global.sTestWC.Set(V.Screen.F_Label_Est!txtLWC.Text)
		'this will populate the wc and description fields
		F.Intrinsic.String.Split("Workcenter*!*Description*!*Standard Cost*!*Standard Bill*!*Runtime*!*Crew Size*!*Setup","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("1000*!*3200*!*1800*!*1800*!*800*!*800*!*800","*!*",V.Local.iWidth)
		F.Intrinsic.String.Build("SELECT WC.MACHINE, WC.WC_NAME, WC.STANDARD_COST, WC.STANDARD_BILL, '0' AS RUNTIME, WC.CREWSIZE, MAINT.ATT_VALUE AS SETUP FROM V_WORKCENTERS AS WC LEFT JOIN (SELECT WORKCENTER, ATT_VALUE FROM GCG_3623_WC_MAINT WHERE ATTRIBUTE1 = 'Default Setup') AS MAINT ON WC.MACHINE = MAINT.WORKCENTER WHERE MACHINE LIKE '%{0}%' ORDER BY WC.MACHINE ASC",V.Screen.F_Label_Est!txtLWC.Text,V.Local.sSQL)
		F.Intrinsic.UI.Browser("Work Center Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")			
			'Get the DataTable and Set it
			f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
			V.Local.sRet.RedimPreserve(0,6)
			F.Intrinsic.String.Build("SELECT RTRIM(WC.MACHINE) AS PART, RTRIM(' ') AS CODE, RTRIM(WC.WC_NAME) AS DESCRIPTION, ISNULL(WC.STANDARD_COST,0) AS STDCOST, ISNULL(WC.STANDARD_BILL,0) AS SHOWCOST, '0' AS QTY, IF(ISNULL(WC.CREWSIZE,0) = 0,1,ISNULL(WC.CREWSIZE,1)) AS CREWSIZE, ISNULL(MAINT.ATT_VALUE,0) AS SETUP FROM V_WORKCENTERS AS WC LEFT JOIN (SELECT WORKCENTER, ATT_VALUE FROM GCG_3623_WC_MAINT WHERE ATTRIBUTE1 = 'Default Setup') AS MAINT ON WC.MACHINE = MAINT.WORKCENTER WHERE MACHINE = '{0}' ORDER BY WC.MACHINE ASC",v.Local.sRet(0).Trim,V.Local.sSQL)
			f.Intrinsic.Control.If(v.DataTable.LaborTopTemp.Exists,=,True)
				f.Data.DataTable.Close("LaborTopTemp")
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.CreateFromSQL("LaborTopTemp","Con",v.Local.sSQL,True)
			f.Data.DataTable.DeleteRow("LaborTop")
			f.Data.DataTable.Merge("LaborTopTemp","LaborTop",True,2)
			f.Data.DataTable.Close("LaborTopTemp")
			
			'set machine to work center and wc_name to description
			Gui.F_Label_Est.txtLWC.Text(V.Local.sRet(0).Trim)
			Gui.F_Label_Est.txtLWCDesc.Text(V.Local.sRet(1).Trim)
			
			F.Intrinsic.control.if(V.Global.lBottomRow,>=,0)
				v.Global.slastPartno.Set(v.DataTable.FullTable(v.Global.lBottomRow).Part!FieldVal)
				f.Intrinsic.String.Build("Part = '{0}'",v.DataTable.FullTable(v.Global.lBottomRow).Part!FieldVal,v.Local.sRet)
				f.Data.DataView.Create("FullTable","WCChange",22,v.Local.sRet,"")
				f.Intrinsic.Control.If(v.DataView.FullTable!WCChange.RowCount,>,0)
					f.Data.DataView.SetValue("FullTable","WCChange",-1,"LMO","L","Code",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Code!FieldVal,"Description",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Description!FieldVal,"StdCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).StdCost!FieldValFloat,"ShowCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).ShowCost!FieldValFloat,"Qty",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Qty!FieldValFloat,"CrewSize",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).CrewSize!FieldValFloat,"Setup",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Setup!FieldValFloat,"FormulaM",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).FormulaM!FieldVal,"FormulaQ",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).FormulaQ!FieldVal)
					f.Data.DataView.SetValue("FullTable","WCChange",-1,"Part",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Part!FieldVal)
				f.Intrinsic.Control.EndIf
				f.Data.DataView.Close("FullTable","WCChange")
				
'				f.Data.DataTable.AddRow("FullTable","LMO","L","Row",v.DataTable.FullTable(v.Global.lBottomRow).Row!FieldValLong,"Pos",v.DataTable.FullTable(v.Global.lBottomRow).Pos!FieldValLong,"Part",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Part!FieldVal,"Code",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Code!FieldVal,"Description",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Description!FieldVal,"StdCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).StdCost!FieldValFloat,"ShowCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).ShowCost!FieldValFloat,"Qty",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Qty!FieldValFloat,"CrewSize",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).CrewSize!FieldValFloat,"Setup",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Setup!FieldValFloat,"FormulaM",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).FormulaM!FieldVal,"FormulaQ",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).FormulaQ!FieldVal)
				Gui.F_Label_Est.dropdownlistLHRQ.AddItem(v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Part!FieldVal)
				Gui.F_Label_Est.dropdownlistLHRQ.Text(V.Global.slastPartno)
				Gui.F_Label_Est.dropdownlistLHRQ.RemoveItem(V.Screen.F_Label_Est!dropdownlistLHRQ.ListIndex)
				Gui.F_Label_Est.dropdownlistLHRQ.Text("ALL")
'				f.Data.DataTable.DeleteRow("FullTable",v.Global.lBottomRow)
				F.Intrinsic.Control.CallSub(Laborbuttons,"ControlName","CMDLCLEAR")
			F.Intrinsic.Control.EndIf
			'v.Global.sTestWC.Set("")
			v.Global.sTestWC.Set(V.Screen.F_Label_Est!txtLWC.Text)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDWEBSITE")
		'This opens the website screen
		'When website is clicked on a web browser will open the selected site.
		f.Intrinsic.Control.If(v.DataTable.WebsiteTemp.Exists,=,True)
			f.Data.DataTable.Close("WebsiteTemp")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromSQL("WebsiteTemp","Con","SELECT RTRIM(DISPLAY) AS DISPLAY, RTRIM(WEB_LINK) AS LINK, OP_ID FROM GCG_3623_WEB ",True)
		f.Data.DataTable.DeleteRow("Website")
		f.Data.DataTable.Merge("WebsiteTemp","Website",True,2)
		f.Data.DataTable.Close("WebsiteTemp")
		Gui.F_Websites..Show

	F.Intrinsic.Control.Case("CMDCLEAR")
		'This will clear all of the fields except for the estimate number
		Gui.F_Label_Est..Visible(False)
		f.Intrinsic.Control.CallSub(cleargroup1)
		f.Intrinsic.Control.CallSub(cleargroup2)
		'clear out the job jacket
		Gui.F_Label_Est.chkRolls.Value(0)
		Gui.F_Label_Est.chkFanfold.Value(0)
		Gui.F_Label_Est.chkSheets.Value(0)
		Gui.F_Label_Est.txtRCoreSize.Text("")
		Gui.F_Label_Est.txtRLblRoll.Text("")
		Gui.F_Label_Est.txtRRollBox.Text("")
		Gui.F_Label_Est.txtRRollOD.Text("")
		Gui.F_Label_Est.txtRODAct.Text("")
		Gui.F_Label_Est.txtFLblFold.Text("")
		Gui.F_Label_Est.txtFLblStack.Text("")
		Gui.F_Label_Est.txtFStackBox.Text("")
		Gui.F_Label_Est.txtSLblSheet.Text("")
		Gui.F_Label_Est.txtSSheetStack.Text("")
		Gui.F_Label_Est.txtSStackBox.Text("")
		Gui.F_Label_Est.txtLbsCart.Text("")
		Gui.F_Label_Est.ddlRWindDir.Text("OUT")
		gui.F_Label_Est.txtPOver.Text("10")
		gui.F_Label_Est.txtPUnder.Text("10")
		Gui.F_Label_Est.chkOPinfeed.Value(0)
		Gui.F_Label_Est.chkOPerfed.Value(0)
		Gui.F_Label_Est.chkOAutoApplied.Value(0)
		Gui.F_Label_Est.chkOAirEject.Value(0)
		Gui.F_Label_Est.chkOLabeling.Value(0)
		Gui.F_Label_Est.chkORibbons.Value(0)
		Gui.F_Label_Est.chkORibbonSource.Value(0)
		Gui.F_Label_Est.chkOMisc.Value(0)
		Gui.F_Label_Est.chkOVacDie.Value(0)
		Gui.F_Label_Est.chkOCSM.Value(0)
		Gui.F_Label_Est.chkOSampleOF.Value(0)
		Gui.F_Label_Est.chkOBlanket.Value(0)
		Gui.F_Label_Est.chkPCoreLabels.Value(0)
		Gui.F_Label_Est.chkPInnerBoxes.Value(0)
		Gui.F_Label_Est.chkPShrinkWrap.Value(0)
		Gui.F_Label_Est.chkPPackLabels.Value(0)
		Gui.F_Label_Est.chkPPalletLabel.Value(0)
		Gui.F_Label_Est.chkPGay.Value(0)
		Gui.F_Label_Est.chkPChip.Value(0)
		Gui.F_Label_Est.chkPPlasticC.Value(0)
		Gui.F_Label_Est.chkPCorePlug.Value(0)
		Gui.F_Label_Est.txtOFaceCut.Text("")
		Gui.F_Label_Est.txtOBackCut.Text("")
		Gui.F_Label_Est.txtOShape.Text("")
		Gui.F_Label_Est.txtOColorFront.Text("")
		Gui.F_Label_Est.txtOColorBack.Text("")
		Gui.F_Label_Est.txtOInkType.Text("")
		Gui.F_Label_Est.txtOInkCoverage.Text("")
		Gui.F_Label_Est.txtOVarnType.Text("")
		Gui.F_Label_Est.txtOVarnCoverage.Text("")
		Gui.F_Label_Est.txtOVarPrint.Text("")
		Gui.F_Label_Est.txtOExtraColor.Text("")
		Gui.F_Label_Est.txtOTotalPlates.Text("")
		Gui.F_Label_Est.chkOFourColor.Value(0)
		Gui.F_Label_Est.chkODeadened.Value(0)
		Gui.F_Label_Est.txtOLbsMLabel.Text("")
		Gui.F_Label_Est.txtOLbsCarton.Text("")
		Gui.F_Label_Est.txtOGapAcross.Text("")
		Gui.F_Label_Est.txtOGapDown.Text("")
		gui.F_Label_Est.txtPLabelsShrink.Text("")
		Gui.F_Label_Est.txtQuoteNo.Text("")
		'setting Charge Type and Amount Type to default values
		Gui.F_Label_Est.ddlPType.Text("Upcharge")
		Gui.F_Label_Est.ddlPAmtType.Text("Percent")
		Gui.F_Label_Est.lvwHLocation.ClearItems
		'Clear Process Group ddl
		Gui.F_Label_Est.ddlHProcessGrp.Text("")
		'Clear Die ddl
		Gui.F_Label_Est.ddlMLabelShape.Text("")
		Gui.F_Label_Est.ddlMUM.Text("")
		'make the list view have checkboxes
		Gui.F_Label_Est.lvwHLocation.Checkboxes(true)
		'get all locations and populate to the lvw
		f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLoc","SELECT LOCATION, LOCATION_DESC FROM V_LOCATIONS ORDER BY LOCATION ASC")
		f.Intrinsic.Control.DoUntil(v.ODBC.Con!rstLoc.EOF,=,True)
			Gui.F_Label_Est.lvwHLocation.AddListItem(v.ODBC.Con!rstLoc.FieldVal!LOCATION,V.ODBC.Con!rstLoc.FieldVal!LOCATION)
			Gui.F_Label_Est.lvwHLocation.SetListItemSubItemText(v.ODBC.Con!rstLoc.FieldVal!LOCATION,1,v.ODBC.Con!rstLoc.FieldVal!LOCATION_DESC)
			F.ODBC.Con!rstLoc.MoveNext
		f.Intrinsic.Control.Loop
		f.ODBC.Con!rstLoc.Close
		f.Data.DataTable.DeleteRow("FullTable")
		f.Data.DataTable.DeleteRow("MaterialTop")
		f.Data.DataTable.DeleteRow("LaborTop")
		f.Data.DataTable.DeleteRow("Pricing")
		f.Data.DataTable.DeleteRow("SummaryBottom")
		f.Data.DataTable.DeleteRow("LaborHours")
		f.Data.DataTable.SetValue("RunQty",-1,"Qty",0)
		Gui.F_Label_Est.txtHUM.Text("")
		Gui.F_Label_Est.ddlHPL.Text("")
		Gui.F_Label_Est.txtPDieCharge.Text("")
		Gui.F_Label_Est.txtPPlateCharge.Text("")
		Gui.F_Label_Est.txtPProofCharge.Text("")
		Gui.F_Label_Est.txtPTotalPlateC.Text("")
		Gui.F_Label_Est.txtPPlateChaChar.Text("")
		Gui.F_Label_Est.txtPTotalColChan.Text("")
		Gui.F_Label_Est.txtPColorChaChar.Text("")
		Gui.F_Label_Est.ddlMView.ClearItems
		Gui.F_Label_Est.ddlMView.AddItem("All")
		F.Intrinsic.Control.BlockEvents
		Gui.F_Label_Est.ddlMView.Text("All")
		F.Intrinsic.Control.CallSub(Lock, "ESTNO", V.Screen.F_Label_Est!txtEstimate.Text, "LOCK", "Unlock")
		Gui.F_Label_Est.txtEstimate.Text("")		
		F.Intrinsic.Control.UnBlockEvents
		Gui.F_Label_Est.chkDigital.Value(0)
		Gui.F_Label_Est.chkPrecision.Value(0)
		Gui.F_Label_Est.chkPrime.Value(0)
		Gui.F_Label_Est..Visible(True)
		Gui.F_Label_Est.chkFreeze.Value(0)

	F.Intrinsic.Control.Case("CMDNEW")
		'This will clear all fields and generate a new estimate number
		Gui.F_Label_Est..Visible(false)
		'unlock the estimate
		F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Screen.F_Label_Est!txtEstimate.Text,"LOCK","Unlock")
		f.Intrinsic.Control.CallSub(cleargroup1)
		f.Intrinsic.Control.CallSub(cleargroup2)
		'clear out the job jacket
		Gui.F_Label_Est.chkRolls.Value(0)
		Gui.F_Label_Est.chkFanfold.Value(0)
		Gui.F_Label_Est.chkSheets.Value(0)
		Gui.F_Label_Est.txtRCoreSize.Text("")
		Gui.F_Label_Est.txtRLblRoll.Text("")
		Gui.F_Label_Est.txtRRollBox.Text("")
		Gui.F_Label_Est.txtRRollOD.Text("")
		Gui.F_Label_Est.txtRODAct.Text("")
		Gui.F_Label_Est.txtFLblFold.Text("")
		Gui.F_Label_Est.txtFLblStack.Text("")
		Gui.F_Label_Est.txtFStackBox.Text("")
		Gui.F_Label_Est.txtSLblSheet.Text("")
		Gui.F_Label_Est.txtSSheetStack.Text("")
		Gui.F_Label_Est.txtSStackBox.Text("")
		Gui.F_Label_Est.txtLbsCart.Text("")
		Gui.F_Label_Est.ddlRWindDir.Text("OUT")
		gui.F_Label_Est.txtPOver.Text("10")
		gui.F_Label_Est.txtPUnder.Text("10")
		Gui.F_Label_Est.chkOPinfeed.Value(0)
		Gui.F_Label_Est.chkOPerfed.Value(0)
		Gui.F_Label_Est.chkOAutoApplied.Value(0)
		Gui.F_Label_Est.chkOAirEject.Value(0)
		Gui.F_Label_Est.chkOLabeling.Value(0)
		Gui.F_Label_Est.chkORibbons.Value(0)
		Gui.F_Label_Est.chkORibbonSource.Value(0)
		Gui.F_Label_Est.chkOMisc.Value(0)
		Gui.F_Label_Est.chkOVacDie.Value(0)
		Gui.F_Label_Est.chkOCSM.Value(0)
		Gui.F_Label_Est.chkOSampleOF.Value(0)
		Gui.F_Label_Est.chkOBlanket.Value(0)
		Gui.F_Label_Est.chkPCoreLabels.Value(0)
		Gui.F_Label_Est.chkPInnerBoxes.Value(0)
		Gui.F_Label_Est.chkPShrinkWrap.Value(0)
		Gui.F_Label_Est.chkPPackLabels.Value(0)
		Gui.F_Label_Est.chkPPalletLabel.Value(0)
		Gui.F_Label_Est.chkPGay.Value(0)
		Gui.F_Label_Est.chkPChip.Value(0)
		Gui.F_Label_Est.chkPPlasticC.Value(0)
		Gui.F_Label_Est.chkPCorePlug.Value(0)
		Gui.F_Label_Est.txtOFaceCut.Text("")
		Gui.F_Label_Est.txtOBackCut.Text("")
		Gui.F_Label_Est.txtOShape.Text("")
		Gui.F_Label_Est.txtOColorFront.Text("")
		Gui.F_Label_Est.txtOColorBack.Text("")
		Gui.F_Label_Est.txtOInkType.Text("")
		Gui.F_Label_Est.txtOInkCoverage.Text("")
		Gui.F_Label_Est.txtOVarnType.Text("")
		Gui.F_Label_Est.txtOVarnCoverage.Text("")
		Gui.F_Label_Est.txtOVarPrint.Text("")
		Gui.F_Label_Est.txtOExtraColor.Text("")
		Gui.F_Label_Est.txtOTotalPlates.Text("")
		Gui.F_Label_Est.chkOFourColor.Value(0)
		Gui.F_Label_Est.chkODeadened.Value(0)
		Gui.F_Label_Est.txtOLbsMLabel.Text("")
		Gui.F_Label_Est.txtOLbsCarton.Text("")
		Gui.F_Label_Est.txtOGapAcross.Text("")
		Gui.F_Label_Est.txtOGapDown.Text("")
		gui.F_Label_Est.txtPLabelsShrink.Text("")
		Gui.F_Label_Est.txtQuoteNo.Text("")
		Gui.F_Label_Est.chkPrevArch.Value(0)
		Gui.F_Label_Est.chkDigital.Value(0)
		Gui.F_Label_Est.chkPrecision.Value(0)
		Gui.F_Label_Est.chkPrime.Value(0)
		'setting Charge Type and Amount Type to default values
		Gui.F_Label_Est.ddlPType.Text("Upcharge")
		Gui.F_Label_Est.ddlPAmtType.Text("Percent")
		Gui.F_Label_Est.lvwHLocation.ClearItems
		'Clear Process Group ddl
		Gui.F_Label_Est.ddlHProcessGrp.Text("")
		'Clear Die ddl
		Gui.F_Label_Est.ddlMLabelShape.Text("")
		Gui.F_Label_Est.ddlMUM.Text("")
		'make the list view have checkboxes
		Gui.F_Label_Est.lvwHLocation.Checkboxes(true)
		'get all locations and populate to the lvw
		f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLoc","SELECT LOCATION, LOCATION_DESC FROM V_LOCATIONS ORDER BY LOCATION ASC")
		f.Intrinsic.Control.DoUntil(v.ODBC.Con!rstLoc.EOF,=,True)
			Gui.F_Label_Est.lvwHLocation.AddListItem(v.ODBC.Con!rstLoc.FieldVal!LOCATION,V.ODBC.Con!rstLoc.FieldVal!LOCATION)
			Gui.F_Label_Est.lvwHLocation.SetListItemSubItemText(v.ODBC.Con!rstLoc.FieldVal!LOCATION,1,v.ODBC.Con!rstLoc.FieldVal!LOCATION_DESC)
			F.ODBC.Con!rstLoc.MoveNext
		f.Intrinsic.Control.Loop
		f.ODBC.Con!rstLoc.Close
		Gui.F_Label_Est.txtEstimate.Text("")
		F.ODBC.Connection!Con.GetID("GCG_3623_EST","EST_NO",TRUE,V.Local.iRows)
'		F.Intrinsic.String.Build("INSERT INTO GCG_3623_EST (EST_NO) VALUES ('{0}') ",V.Local.iRows,V.Local.sSQL)
		F.Intrinsic.String.Build("INSERT INTO GCG_3623_EST (EST_NO, CREATED_BY) VALUES ('{0}', '{1}') ",V.Local.iRows,V.Caller.User.Trim,V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		'Create a lock into the lock table for this estimate
		F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Local.iRows,"LOCK","Lock")
		Gui.F_Label_Est.txtEstimate.Text(V.Local.iRows)
		f.Intrinsic.Control.CallSub(DataTableCreation)
		Gui.F_Label_Est.txtHUM.Text("")
		Gui.F_Label_Est.ddlHPL.Text("")
		gui.F_Label_Est.txtPDieCharge.Text("")
		gui.F_Label_Est.txtpPlateCharge.Text("")
		gui.F_Label_Est.txtPProofCharge.Text("")
		Gui.F_Label_Est.txtPTotalPlateC.Text("")
		Gui.F_Label_Est.txtPPlateChaChar.Text("")
		Gui.F_Label_Est.txtPTotalColChan.Text("")
		Gui.F_Label_Est.txtPColorChaChar.Text("")
		f.Intrinsic.Control.BlockEvents
		Gui.F_Label_Est.dropdownlistLHRQ.ClearItems
		Gui.F_Label_Est.dropdownlistLHRQ.AddItem("ALL")
		Gui.F_Label_Est.dropdownlistLHRQ.Text("ALL")
		f.Intrinsic.Control.UnblockEvents
		Gui.F_Label_Est.ddlMView.ClearItems
		Gui.F_Label_Est.ddlMView.AddItem("All")
		F.Intrinsic.Control.BlockEvents
		Gui.F_Label_Est.ddlMView.Text("All")
		F.Intrinsic.Control.UnBlockEvents
		'set Created by
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCreateBy.Caption,":",V.Local.sUser)
		V.Local.sUser.RedimPreserve(0,1)
		F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),V.Caller.User,V.Local.sUser)
		Gui.F_Label_Est.lblCreateBy.Caption(V.Local.sUser)
		'set Changed by
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblLstCng.Caption,":",V.Local.sUser)
		V.Local.sUser.RedimPreserve(0,1)
		F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),"",V.Local.sUser)
		Gui.F_Label_Est.lblLstCng.Caption(V.Local.sUser)
		'set copied From
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCopyFrom.Caption,":",V.Local.sUser)
		V.Local.sUser.RedimPreserve(0,1)
		F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),"",V.Local.sUser)
		Gui.F_Label_Est.lblCopyFrom.Caption(V.Local.sUser)
		F.Intrinsic.Control.CallSub(Run_quantities)
		Gui.F_Label_Est.tabx1.SetTab(0)
		Gui.F_Label_Est..Visible(True)
		V.Global.bLoadMode.Set(False)
		v.Global.bArchived.Set(False)
		f.Intrinsic.Control.CallSub(Archived)
		Gui.F_Label_Est.chkFreeze.Value(0)

	F.Intrinsic.Control.Case("CMDSROUTER")
		'save est
		F.Intrinsic.Control.BlockEvents
		
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtFinishRouter.Text.Trim, =, "")
			F.Intrinsic.UI.Msgbox("Please enter a Router Number.", "NO ROUTER ENTERED")
			F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.CallSub(Save_est)
		
		'We want to check to see if the router exists in Global Shop already. If it does not, continue. Otherwise, ask the user if they want to create a new rev or override existing router.
		F.Intrinsic.String.GSSPartString(V.Screen.F_Label_Est!txtFinishRouter.Text, V.Screen.F_Label_Est!txtFinishRev.Text, V.Local.sRouter)
		F.Intrinsic.String.Build("Select Router from V_ROUTER_HEADER where ROUTER = '{0}'", V.Local.sRouter, V.Local.sSQL)
		F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.Trim, <>, "")
			F.Intrinsic.String.Build("{0}-{1}", V.Screen.F_Label_Est!txtFinishRouter.Text, V.Screen.F_Label_Est!txtFinishRev.Text, V.Local.sRTF)
			V.Global.bRTFlag.Set(False)
			F.Intrinsic.String.Build("Router/Rev {0} already exists. {1}Would you like to create a new revision or save your changes to the existing router?", V.Local.sRTF, V.Ambient.NewLine, V.Local.sSQL)
			Gui.F_RtSave.lblRtMess.Text(V.Local.sSQL)
			F.Intrinsic.Control.UnBlockEvents
			Gui.F_RtSave..Show
			F.Intrinsic.Control.DoUntil(V.Global.bRTFlag, =, True)
				F.Intrinsic.UI.Sleep(1)
				
			F.Intrinsic.Control.Loop

		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Args.BAD,=,"True")
			F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("UPDATE GCG_3623_EST SET ROUTER_NO = '{0}' WHERE EST_NO = '{1}' ", V.Local.sRouter, V.Screen.F_Label_Est!txtEstimate.Text, V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		
		'upload the router
		F.Intrinsic.Control.CallSub(Pricingtab,"ControlName",V.Args.ControlName)

		F.Intrinsic.Control.If(V.Args.BAD,=,"True")
			F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		'open the router callwrapper
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtFinishRouter.Text.Trim,<>,"")
			V.Local.sParam.Redim(0,1)
			F.Intrinsic.String.RPad(V.Screen.F_Label_Est!txtFinishRouter.Text.UCASE, " ", 17, V.Local.sParam(0))
			F.Intrinsic.String.RPad(V.Screen.F_Label_Est!txtFinishRev.Text.UCASE, " ", 3, V.Local.sParam(1))
			F.Intrinsic.String.Build("L!*!{0}{1}", V.Local.sParam(0), V.Local.sParam(1), V.Local.sRet)
'			F.Intrinsic.String.Build("O!*!{0}{1}", V.Local.sParam(0), V.Local.sParam(1), V.Local.sRet)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("L!*!{0}",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sRet)
'			F.Intrinsic.String.Build("O!*!{0}",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sRet)
		F.Intrinsic.Control.EndIf
		F.Global.General.CallWrapperAsync(400000,V.Local.sRet)
		
		F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Case("CMDCREATEQUOTE")
		
		F.Intrinsic.Control.BlockEvents
		'Check to make sure a customer is selected
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!txtCustomer.Text.Trim,=,"")
			f.Intrinsic.Control.UnBlockEvents
			f.Intrinsic.UI.Msgbox("Please enter a Customer")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.Else
			'make sure it is a valid customer or prospect
			f.Intrinsic.String.Build("SELECT * FROM V_CUSTOMER_MASTER WHERE CUSTOMER = '{0}'",V.Screen.F_Label_Est!txtCustomer.Text.Trim,v.Local.sSQL)
			f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstCustCheck",v.Local.sSQL)
			f.Intrinsic.Control.If(v.ODBC.Con!rstCustCheck.EOF,=,True)
				'customer didn't check out. Lets make sure it is not a prospect before we grill them.
				f.Intrinsic.String.Build("SELECT * FROM V_PROSPECT_MASTER WHERE PROSPECT = '{0}'",V.Screen.F_Label_Est!txtCustomer.Text.Trim,v.Local.sSQL)
				f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstProsp",v.Local.sSQL)
				f.Intrinsic.Control.If(v.ODBC.Con!rstProsp.EOF,=,True)
					'Not a valid customer or prospect
					f.Intrinsic.UI.Msgbox("Please select a valid Customer or Prospect")
					f.ODBC.Con!rstProsp.Close
					f.ODBC.Con!rstCustCheck.Close
					f.Intrinsic.Control.UnBlockEvents
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf
				f.ODBC.Con!rstProsp.Close
			f.Intrinsic.Control.EndIf
			f.ODBC.Con!rstCustCheck.Close
		f.Intrinsic.Control.EndIf
		
		f.Data.DataView.Create("RunQty","RunTest",22,"Qty <> 0","")
		f.Intrinsic.Control.If(v.DataView.RunQty!RunTest.RowCount,=,0)
			'We don't have any qty so stop this
			f.Intrinsic.UI.Msgbox("No Run Quantity has been entered","Attention")
			f.Data.DataView.Close("RunQty","RunTest")
			f.Intrinsic.Control.UnBlockEvents
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		f.Data.DataView.Close("RunQty","RunTest")
		
		f.Data.DataView.Create("Pricing","PricingTest",22)
		f.Intrinsic.Control.If(v.DataView.Pricing!PricingTest.RowCount,=,0)
			'We don't have any qty so stop this
			f.Intrinsic.UI.Msgbox("No Pricing has been entered","Attention")
			f.Data.DataView.Close("Pricing","PricingTest")
			f.Intrinsic.Control.UnBlockEvents
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		f.Data.DataView.Close("Pricing","PricingTest")

		'We need to ask if they want to create a new quote or use existing or cancel
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!txtQuoteNo.Text,<>,"")
			f.Intrinsic.UI.Msgbox("Would you like to Create a New Quote/Estimate?","Attention",3,v.Local.sRet)
'		f.Intrinsic.Control.Else
'			v.Local.sRet.Set("7")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sRet.Long,=,6)
			'yes create new quote number
			Gui.F_Label_Est.txtQuoteNo.Text("")
			F.ODBC.Connection!Con.GetID("GCG_3623_EST","EST_NO",TRUE,V.Local.sRet)
			F.Intrinsic.String.Build("INSERT INTO GCG_3623_EST (EST_NO, CREATED_BY) VALUES ('{0}', '{1}') ",V.Local.sRet.Long,V.Caller.User.Trim,V.Local.sSQL)
			f.ODBC.Connection!Con.Execute(V.Local.sSQL)
			'Unlock the previous estimate that was on the screen
			F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Screen.F_Label_Est!txtEstimate.Text,"LOCK","Unlock")
			'Lock the new estimate that is being loaded
			F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Local.sRet.Trim,"LOCK","Lock")
			'set the est no
			Gui.F_Label_Est.txtEstimate.Text(V.Local.sRet.Trim)
		f.Intrinsic.Control.ElseIf(v.Local.sRet.Long,=,7)
			'No Delete existing one
			f.Intrinsic.Control.CallSub(DeleteQuote)
		f.Intrinsic.Control.ElseIf(v.Local.sRet.Long,=,2)
			'Cancel
			f.Intrinsic.Control.UnBlockEvents
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		
		'save est
		F.Intrinsic.Control.CallSub(Save_est,"QUOTE","YES")
				
		'Quote Upload
		F.Intrinsic.UI.InvokeWaitDialog("Generating Quote.....")

		F.Data.DataTable.DeleteRow("dtOrderUpl")
		
		F.Data.Dataview.ToDataTable("Pricing", "PricingView", "dtOrderData", True)
		F.Data.DataView.Create("dtOrderData", "dvQuantStuff", 22, "[Quantity] > 0", "")
				
		F.Intrinsic.Control.If(V.DataView.dtOrderData!dvQuantStuff.RowCount, >, 0)
			
			F.Intrinsic.Control.CallSub(QuoteW)
			
			F.Intrinsic.Control.CallSub(ORDUPLUpload)
			F.Intrinsic.String.Build("SELECT TOP 1 QUOTE_NO from V_QUOTE_HEADER WHERE USER_2 = '{0}' AND DATE_QUOTE = '{1}'  AND LAST_CHG_PGM = 'ORDUP3' ORDER BY QUOTE_NO DESC",V.Screen.F_Label_Est!txtEstimate.Text,v.Ambient.Date.PervasiveDate,V.Local.sSQL)
			f.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			f.Intrinsic.String.Replace(v.Local.sRet,"*!*","",v.Local.sRet)
			Gui.F_Label_Est.txtQuoteNo.Text(v.Local.sRet)
			f.Intrinsic.String.Build("UPDATE GCG_3623_EST SET QUOTE_NO = '{0}' WHERE EST_NO = '{1}'",V.Local.sRet,v.Screen.F_Label_Est!txtEstimate.Text,v.Local.sSQL)
			f.ODBC.Connection!Con.Execute(v.Local.sSQL)
	
			'calling save quote info to gcg_3623_quote table
			F.Intrinsic.Control.CallSub(Save_quote_info,"Quote",V.Local.sRet)
			F.Intrinsic.UI.InvokeWaitDialog("Printing Quote...")
			'calling GAB script to Print Quote report
			F.Intrinsic.String.Build("{0}\GCG_3623_Quote.g2u",v.Caller.GasDir,v.Local.sParam)
			F.Global.Task.CallAsyncGAS(v.Local.sParam,V.Local.sRet,v.Local.iWidth)
			
			'This is to email the quote as a PDF to the customer. The switch for the script that does the quote pdf email is the quote number, customer number, and customer name.
			F.Intrinsic.String.Build("{0}\ATG_4136_EMAIL_QUOTE_PDF_HSL_V1.g2u",v.Caller.GasDir,v.Local.sParam)
			F.Intrinsic.String.Build("{0}@!@{1}@!@{2}@!@{3}", V.Local.sRet, V.Screen.F_Label_Est!txtCustomer.Text, V.Screen.F_Label_Est!txtCustName.Text, V.Screen.F_Label_Est!txtCustEmail.Text, V.Local.sRet)
			F.Global.Task.CallAsyncGAS(v.Local.sParam,V.Local.sRet,v.Local.iWidth)
	
			F.Intrinsic.UI.CloseWaitDialog

		F.Intrinsic.Control.EndIf
		
		F.Data.DataView.Close("dtOrderData", "dvQuantStuff")
		F.Data.DataTable.Close("dtOrderData")
		f.Intrinsic.Control.UnBlockEvents
		
	F.Intrinsic.Control.Case("CMDSUMOPCODE")
		F.Intrinsic.String.Split("OP Code*!*Description","*!*",V.Local.sTitle)
		F.Intrinsic.String.Split("2000*!*4200","*!*",V.Local.iWidth)
		F.Intrinsic.String.Build("SELECT MACHINE, DESCRIPTION, LMO FROM V_OP_CODES WHERE LMO =  'O'","",V.Local.sSQL)
		F.Intrinsic.UI.Browser("Op Code Browser","Con",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			Gui.F_Label_Est.txtSumOpCode.Text(V.Local.sRet(0))
			Gui.F_Label_Est.txtSumOPDesc.Text(V.Local.sRet(1))
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("CMDSUMOPVEND")
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtSumOpCode.Text,=,"")
			F.Intrinsic.UI.Msgbox("Select an Outside Op Code.")
		F.Intrinsic.Control.Else
			'list is parsed for the type-ahead substring as it is being typed
			F.Intrinsic.UI.SetBrowserHotTypeAhead(True)

			F.Intrinsic.UI.Browser(305,"",V.Local.sRet)

			F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
				F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
				Gui.F_Label_Est.txtSumOpVend.Text(V.Local.sRet(0))
				F.Intrinsic.String.Build("{0}*!**!**!*{1}*!*0*!*0*!*0*!*0*!*{2}*!*",V.Screen.F_Label_Est!txtSumOpCode.Text,V.Local.sRet(0),V.Screen.F_Label_Est!txtSumOPDesc.Text,V.Local.sRet)
				'Load Summary Bottom
				f.Intrinsic.Control.If(v.DataTable.SummaryBottomTemp.Exists,=,True)
					f.Data.DataTable.Close("SummaryBottomTemp")
				f.Intrinsic.Control.EndIf
				f.Data.DataTable.CreateFromString("SummaryBottomTemp",v.Local.sRet,"Part*!*Rev*!*Loc*!*Code*!*Setup*!*Qty*!*ShowCost*!*Freq*!*Description*!*UM","String*!*String*!*String*!*String*!*Float*!*Float*!*Float*!*Float*!*String*!*String","*!*","!*!",True)
				f.Data.DataTable.DeleteRow("SummaryBottom")
				f.Data.DataTable.Merge("SummaryBottomTemp","SummaryBottom",True,2)
				f.Data.DataTable.Close("SummaryBottomTemp")
				'setting iSumBotIndex to -1 to indicate a new record when adding record to summar top
				V.Global.iSumBotIndex.Set(-1)

			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Case("CMDCREATEPART")
	
		'Added by FEQ. New button that separates creating part from the create router button.
		F.Intrinsic.Control.CallSub("PartReqs")
		F.Intrinsic.Control.If(V.Args.BAD, =, "True")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.CallSub("CreateParts")
		
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("StdBrowsers_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.StdBrowsers.End

Program.Sub.Die_Filter.Start
F.Intrinsic.Control.SetErrorHandler("Die_Filter_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sLoc.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sRev.Declare(String)
V.Local.bExist.Declare(Boolean)
v.Local.sWhere.Declare(String)
v.Local.sFile.Declare(String)
V.Local.bLocked.Declare(Boolean)
V.Local.iCount.Declare(String)

'check all the text fields to see if filtering needs to occur
'get all of the locations
'using location when using the lost focus even on the loc in the history frame
F.Intrinsic.Variable.ArgExists("Loc",V.Local.bExist)
F.Intrinsic.Control.If(V.Local.bExist,=,True)
	V.Local.sLoc.Set(V.Args.Loc.Trim)
F.Intrinsic.Control.Else
	Gui.F_Label_Est.lvwHLocation.RetrieveCheckedListItems(V.Local.sLoc)
F.Intrinsic.Control.EndIf

'check to make sure something was returned
F.Intrinsic.Control.If(V.Local.sLoc,=,"***NORETURN***")
	'no location was selected so show all locations
	V.Global.sDieSql.Set("SELECT RTRIM(MST.PART), RTRIM(MST.LOCATION), ROUND(RTRIM(DIE.WIDTH),4) AS WIDTH, ROUND(RTRIM(DIE.LENGTH1),4) AS LENGTH, ROUND(RTRIM(DIE.ACROSS),4) AS ACROSS, ROUND(RTRIM(DIE.GAP_ACROSS),4) AS GAP_ACROSS, ROUND(RTRIM(DIE.GAP_DOWN),4) AS GAP_DOWN, RTRIM(DIE.LINER_THICK) AS LINER_THICK, RTRIM(DIE.MAT_USED) AS MAT_USED, ROUND(RTRIM(DIE.TOOL_NUMBER),4) AS TOOL_NUMBER, ROUND(RTRIM(DIE.CORNER_RADII),4) AS CORNER, RTRIM(MST.DESCRIPTION)")
	F.Intrinsic.String.Build("{0} FROM V_INVENTORY_MSTR AS MST Left JOIN GCG_3623_INVENTORY AS DIE on MST.PART = DIE.PART AND MST.LOCATION = DIE.LOCATION1 WHERE MST.LOCATION NOT IN ('{1}')  ",V.Global.sDieSql,V.Local.sLoc.Trim,V.Global.sDieSql)
	f.Intrinsic.String.Build("LOCATION NOT IN ('{0}')",v.Local.sLoc.Trim,v.Local.sWhere)
F.Intrinsic.Control.Else
	'replace all *!* with '','
	F.Intrinsic.String.Replace(V.Local.sLoc,"*!*","','",V.Local.sLoc)
	V.Global.sDieSql.Set("SELECT RTRIM(MST.PART), RTRIM(MST.LOCATION), ROUND(RTRIM(DIE.WIDTH),4) AS WIDTH, ROUND(RTRIM(DIE.LENGTH1),4) AS LENGTH, ROUND(RTRIM(DIE.ACROSS),4) AS ACROSS, ROUND(RTRIM(DIE.GAP_ACROSS),4) AS GAP_ACROSS, ROUND(RTRIM(DIE.GAP_DOWN),4) AS GAP_DOWN, RTRIM(DIE.LINER_THICK) AS LINER_THICK, RTRIM(DIE.MAT_USED) AS MAT_USED, ROUND(RTRIM(DIE.TOOL_NUMBER),4) AS TOOL_NUMBER, ROUND(RTRIM(DIE.CORNER_RADII),4) AS CORNER, RTRIM(MST.DESCRIPTION)")
	F.Intrinsic.String.Build("{0} FROM V_INVENTORY_MSTR AS MST Left JOIN GCG_3623_INVENTORY AS DIE on MST.PART = DIE.PART AND MST.LOCATION = DIE.LOCATION1 WHERE MST.LOCATION IN ('{1}') ",V.Global.sDieSql,V.Local.sLoc.Trim,V.Global.sDieSql)
	f.Intrinsic.String.Build("LOCATION IN ('{0}')",v.Local.sLoc.Trim,v.Local.sWhere)
F.Intrinsic.Control.EndIf

'see if the label shape drop down list is not blank, if so add it to the query	
F.intrinsic.control.if(V.Screen.F_Label_Est!ddlMLabelShape.Text,<>,"")
	F.Intrinsic.String.Build("{0} and UCASE(DIE.SHAPE) = '{1}'",V.global.Sdiesql,V.Screen.F_Label_Est!ddlMLabelShape.Text.UCase,V.global.sDieSql)
	F.Intrinsic.String.Build("{0} and SHAPE = '{1}'",V.Local.sWhere,V.Screen.F_Label_Est!ddlMLabelShape.Text,V.Local.sWhere)
F.Intrinsic.Control.EndIf

'see if the um drop down list is not blank, if so add it to the query
F.intrinsic.control.if(V.Screen.F_Label_Est!ddlMUM.text,<>,"")
	F.Intrinsic.String.Build("{0} and MST.UM_INVENTORY = '{1}'",V.global.Sdiesql,V.Screen.F_Label_Est!ddlMUM.Text.Trim,V.global.sDieSql)
	F.Intrinsic.String.Build("{0} and UM_INVENTORY = '{1}'",V.Local.sWhere,V.Screen.F_Label_Est!ddlMUM.Text.Trim,V.Local.sWhere)
F.Intrinsic.Control.EndIf

'see if the acr die text box is not blank, if so add it to the query
F.intrinsic.control.if(V.Screen.F_Label_Est!txtMACRDie.Text,<>,"")
	F.Intrinsic.String.Build("{0} and DIE.ACR_DIE = '{1}'",V.global.Sdiesql,V.Screen.F_Label_Est!txtMACRDie.Text.Trim,V.global.sDieSql)
	F.Intrinsic.String.Build("{0} and ACR_DIE = '{1}'",V.Local.sWhere,V.Screen.F_Label_Est!txtMACRDie.Text.Trim,V.Local.sWhere)
F.Intrinsic.Control.EndIf

'see if the gap across  text box is not blank, if so add it to the query
F.intrinsic.control.if(V.screen.F_Label_Est!txtMGapAcross.Text,<>,"")
	F.Intrinsic.String.Build("{0} and DIE.GAP_ACROSS = '{1}'",V.global.Sdiesql,V.screen.F_Label_Est!txtMGapAcross.Text.Trim,V.global.sDieSql)
	F.Intrinsic.String.Build("{0} and GAP_ACROSS = '{1}'",V.Local.sWhere,V.screen.F_Label_Est!txtMGapAcross.Text.Trim,V.Local.sWhere)
F.Intrinsic.Control.EndIf

'see if the gap down text box is not blank, if so add it to the query
F.intrinsic.control.if(V.Screen.F_Label_Est!txtMGapDown.Text,<>,"")
	F.Intrinsic.String.Build("{0} and DIE.GAP_DOWN = '{1}'",V.global.Sdiesql,V.screen.F_Label_Est!txtMGapDown.Text.Trim,V.global.sDieSql)
	F.Intrinsic.String.Build("{0} and GAP_DOWN = '{1}'",V.Local.sWhere,V.screen.F_Label_Est!txtMGapDown.Text.Trim,V.Local.sWhere)
F.Intrinsic.Control.EndIf

'see if the length text box is not blank, if so add it to the query
F.intrinsic.control.if(V.Screen.F_Label_Est!txtMLengthF.Text,<>,"")
	F.Intrinsic.String.Build("{0} and DIE.LENGTH1 BETWEEN '{1}' AND '{2}' ",V.global.Sdiesql,V.screen.F_Label_Est!txtMLengthF.Text.Trim,V.Screen.F_Label_Est!txtMLengthT.Text.Trim,V.global.sDieSql)
	F.Intrinsic.String.Build("{0} and LENGTH >= '{1}' AND LENGTH <= '{2}' ",V.Local.sWhere,V.screen.F_Label_Est!txtMLengthF.Text.Trim,V.Screen.F_Label_Est!txtMLengthT.Text.Trim,V.Local.sWhere)
F.Intrinsic.Control.EndIf

'see if the width text box is not blank, if so add it to the query
F.intrinsic.control.if(V.Screen.F_Label_Est!txtMWidthF.Text,<>,"")
	F.Intrinsic.String.Build("{0} and DIE.WIDTH BETWEEN '{1}' AND '{2}' ",V.global.Sdiesql,V.screen.F_Label_Est!txtMWidthF.Text.Trim,V.Screen.F_Label_Est!txtMWidthT.Text.Trim,V.global.sDieSql)
	F.Intrinsic.String.Build("{0} and WIDTH >= '{1}' AND WIDTH <= '{2}' ",V.Local.sWhere,V.screen.F_Label_Est!txtMWidthF.Text.Trim,V.Screen.F_Label_Est!txtMWidthT.Text.Trim,V.Local.sWhere)
F.Intrinsic.Control.EndIf

'see if the material used text box is not blank and if so add it to the query
F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtMMatUsed.Text,<>,"")
	f.Intrinsic.String.Build("{0} and UCASE(DIE.MAT_USED) = '{1}' ",V.Global.sDieSql,V.Screen.F_Label_Est!txtMMatUsed.Text.UCase,v.Global.sDieSql)
	f.Intrinsic.String.Build("{0} and MAT_USED = '{1}' ",V.Local.sWhere,V.Screen.F_Label_Est!txtMMatUsed.Text,v.Local.sWhere)
F.Intrinsic.Control.EndIf

'if we are calling this from txtMPartRev go ahead and add the part rev to the query
F.Intrinsic.Control.If(V.Args.ControlName,=,"TXTMPARTREV")
	F.Intrinsic.String.RPad(V.Screen.F_Label_Est!txtMPart.Text," ",17,V.Local.sPart)
	F.Intrinsic.String.RPad(V.Screen.F_Label_Est!txtMPartRev.Text," ",3,V.Local.sRev)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sPart,V.Local.sRev,V.Local.sRet)
	V.Local.sRet.Set(V.Local.sRet.Trim)
	F.Intrinsic.String.Build("{0} AND UCASE(MST.PART) = '{1}' ",V.Global.sDieSql,V.Local.sRet.UCase,V.Global.sDieSql)
	F.Intrinsic.String.Build("{0} AND PART = '{1}' ",V.Local.sWhere,V.Local.sRet,V.Local.sWhere)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Args.ControlName,=,"CMDPART")
	F.Intrinsic.String.RPad(V.Screen.F_Label_Est!txtMPart.Text," ",17,V.Local.sPart)
	F.Intrinsic.String.RPad(V.Screen.F_Label_Est!txtMPartRev.Text," ",3,V.Local.sRev)
	F.Intrinsic.String.Build("{0}{1}",V.Local.sPart,V.Local.sRev,V.Local.sRet)
	V.Local.sRet.Set(V.Local.sRet.Trim)
	F.Intrinsic.String.Build("{0} AND UCASE(MST.PART) LIKE '{1}%' ",V.Global.sDieSql,V.Local.sRet.UCase,V.Global.sDieSql)
	F.Intrinsic.String.Build("{0} AND PART LIKE '{1}%' ",V.Local.sWhere,V.Local.sRet,V.Local.sWhere)
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("{0} ORDER BY PART ASC, LOCATION ASC ",V.Global.sDieSql,V.Global.sDieSql)


f.Intrinsic.UI.InvokeWaitDialog("Opening Part Browser")

f.Intrinsic.Control.If(v.DataTable.DTBrowser.Exists,=,True)
	f.Data.DataTable.Close("DTBrowser")
f.Intrinsic.Control.EndIf

f.Intrinsic.String.Build("{0}\{1}PartBrowXML.xml",v.Caller.FilesDir,v.Caller.CompanyCode,v.Local.sFile)
f.Intrinsic.File.Exists(v.Local.sFile,v.Local.bExist)
f.Intrinsic.Control.If(v.DataTable.DTBrowser.Exists,=,True)
	f.Data.DataTable.Close("DTBrowser")
f.Intrinsic.Control.EndIf
f.Intrinsic.Control.If(v.Local.bExist,=,True)
	'Check to see if the file is locked or not
	F.Intrinsic.File.IsFileLocked(V.Local.sFile,V.Local.bLocked)
	
	F.Intrinsic.Control.DoUntil(V.Local.bLocked,=,False)
		F.Intrinsic.Math.Add(V.Local.iCount,1,V.Local.iCount)

		F.Intrinsic.Control.If(V.Local.iCount,>=,100)
			F.Intrinsic.UI.Msgbox("Part Browser XML is Locked. Please close file to open browser.")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.UI.Sleep(1)
		F.Intrinsic.File.IsFileLocked(V.Local.sFile,V.Local.bLocked)
	F.Intrinsic.Control.Loop

	f.Data.DataTable.CreateFromXML("DTBrowser",v.Local.sFile,True)
f.Intrinsic.Control.Else
	f.Intrinsic.String.Build("{0}\GCG_3623_XML_Part_Update.g2u",v.Caller.GasDir,v.Local.sFile)
	F.Global.Task.CallSyncGAS(v.Local.sFile)
	f.Intrinsic.String.Build("{0}\{1}PartBrowXML.xml",v.Caller.FilesDir,v.Caller.CompanyCode,v.Local.sFile)
	
	'Check to see if the file is locked or not
	F.Intrinsic.File.IsFileLocked(V.Local.sFile,V.Local.bLocked)
	
	F.Intrinsic.Control.DoUntil(V.Local.bLocked,=,False)
		F.Intrinsic.Math.Add(V.Local.iCount,1,V.Local.iCount)

		F.Intrinsic.Control.If(V.Local.iCount,>=,100)
			F.Intrinsic.UI.Msgbox("Part Browser XML is Locked. Please close file to open browser.")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.UI.Sleep(1)
		F.Intrinsic.File.IsFileLocked(V.Local.sFile,V.Local.bLocked)
	F.Intrinsic.Control.Loop
	f.Data.DataTable.CreateFromXML("DTBrowser",v.Local.sFile,True)
f.Intrinsic.Control.EndIf

f.Data.DataView.Create("DTBrowser","DVBrowser",22,v.Local.sWhere,"Part asc")

f.Intrinsic.UI.CloseWaitDialog

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Die_Filter_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Die_Filter.End

Program.Sub.gsfgMaterialTop_CellValueChanged.Start
F.Intrinsic.Control.SetErrorHandler("gsfgMaterialTop_CellValueChanged_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.fCost.Declare(Float)
v.Local.fMSI.Declare(Float)
v.Local.fPrice.Declare(float)
v.Local.gsfgMaterialTop.Declare(String,"MaterialTop")
v.Local.gsfgMaterialBottom.Declare(String,"FullTable")
v.Local.gsfgLaborTop.Declare(String,"LaborTop")
v.Local.gsfgLaborBottom.Declare(String,"FullTable")
v.Local.sDataTable.Declare(String)

v.Local.sDataTable.Set(v.Local.[v.Args.ControlName])

'We are recalculating Cost, MSI, Qty, and Setup here
f.Intrinsic.Control.SelectCase(v.Args.Column)
	'Cost
	f.Intrinsic.Control.Case("ShowCost")
		'They changed the Cost so we need to recalculate the MSI based on the LF Cost
		f.Intrinsic.Math.Mult(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).Width!FieldValFloat,12,v.Local.fMSI)
		f.Intrinsic.Math.Div(v.Local.fMSI,1000,v.Local.fMSI)
		f.Intrinsic.Control.If(v.Local.fMSI,<>,0)
			f.Intrinsic.Math.Div(v.Args.Value.Float,v.Local.fMSI,v.Local.fMSI)
		f.Intrinsic.Control.EndIf
		'This is the new MSI
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"MSI",v.Local.fMSI)
		'Updating Price
		f.Intrinsic.Math.Mult(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).Qty!FieldValFloat,v.Args.Value.Float,v.Local.fPrice)
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"Cost/um",v.Local.fPrice)
		
	'MSI
	f.Intrinsic.Control.Case("MSI")
		'They changed MSI so we need to recalculate the LF Cost based on the MSI
		f.Intrinsic.Math.Mult(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).Width!FieldValFloat,12,v.Local.fCost)
		f.Intrinsic.Math.Div(v.Local.fCost,1000,v.Local.fCost)
		f.Intrinsic.Math.Mult(v.Local.fCost,v.Args.Value.Float,v.Local.fCost)
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"ShowCost",v.Local.fCost)
		'Updating Price
		f.Intrinsic.Math.Mult(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).Qty!FieldValFloat,v.Local.fCost,v.Local.fPrice)
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"Cost/um",v.Local.fPrice)
		
	'Qty
	f.Intrinsic.Control.Case("Qty")
		'They changed the Qty so we need to recalculate the Price
		f.Intrinsic.Math.Mult(v.Args.Value.Float,v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).ShowCost!FieldValFloat,v.Local.fPrice)
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"Cost/um",v.Local.fPrice)
		
	'Width
	f.Intrinsic.Control.Case("Width")
		'They changed the Width so we need to recalculate the ShowCost and MSI
		f.Intrinsic.Math.Mult(v.Args.Value.Float,12,v.Local.fCost)
		f.Intrinsic.Math.Div(v.Local.fCost,1000,v.Local.fCost)
		f.Intrinsic.Math.Mult(v.Local.fCost,v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).MSI!FieldValFloat,v.Local.fCost)
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"ShowCost",v.Local.fCost)
		'recalculate msi
		f.Intrinsic.Math.Mult(v.Args.Value.Float,12,v.Local.fMSI)
		f.Intrinsic.Math.Div(v.Local.fMSI,1000,v.Local.fMSI)
		f.Intrinsic.Control.If(v.Local.fMSI,<>,0)
			f.Intrinsic.Math.Div(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).ShowCost!FieldValFloat,v.Local.fMSI,v.Local.fMSI)
		f.Intrinsic.Control.EndIf
		'This is the new MSI
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"MSI",v.Local.fMSI)
		'Updating Price
		f.Intrinsic.Math.Mult(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).Qty!FieldValFloat,v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).ShowCost!FieldValFloat,v.Local.fPrice)
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"Cost/um",v.Local.fPrice)
		
	'Setup
	f.Intrinsic.Control.Case("Setup")
		'They changed Setup so blank out the formula
		f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"FormulaM","")
		
f.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgMaterialTop_CellValueChanged_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.gsfgMaterialTop_CellValueChanged.End

Program.Sub.Save_Quote_Info.Start
F.Intrinsic.Control.SetErrorHandler("Save_Quote_Info_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sCust.Declare(String)
V.Local.sLoc.Declare(String)
v.Local.sRet.Declare(String)
v.Local.iCount.Declare(long)
v.Local.fPrice.Declare(float)
v.Local.fColor.Declare(Float)

'saving Quote and Estimate # to a custom table for linking purposes
F.Intrinsic.String.Build("Select * From GCG_3623_Quote Where Quote_No = '{0}'",v.Args.Quote,V.Local.sSQL)
F.ODBC.Connection!Con.OpenLocalRecordsetRW("rstQuote",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstQuote.EOF,=,True)
	F.ODBC.Con!rstQuote.AddNew
F.Intrinsic.Control.EndIf

F.ODBC.Con!rstQuote.Set!QUOTE_NO(V.Args.Quote)
F.ODBC.Con!rstQuote.Set!EST_NO(V.Screen.F_Label_Est!txtEstimate.Text)

F.Intrinsic.String.Build("Select * From GCG_3623_EST Where Est_No = {0}",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSql)
F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstEST",V.Local.sSql)
F.Intrinsic.Control.If(V.ODBC.Con!rstEst.EOF,=,False)
	f.Intrinsic.String.Build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER = '{0}' ",V.ODBC.Con!rstEst.FieldValTrim!CUSTOMER,V.Local.sSql)
	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstCust",v.Local.sSql)
	f.Intrinsic.Control.If(v.ODBC.Con!rstCust.EOF,=,False)
		F.ODBC.Con!rstQuote.Set!NAME_CUSTOMER(V.ODBC.Con!rstCust.FieldVal!NAME_CUSTOMER)
	f.Intrinsic.Control.EndIf
	f.ODBC.Con!rstCust.Close
	F.ODBC.Con!rstQuote.Set!CUSTOMER(V.ODBC.Con!rstEst.FieldValTrim!CUSTOMER)
	F.ODBC.Con!rstQuote.Set!CONTACT(V.ODBC.Con!rstEst.FieldValTrim!CONTACT)
	f.Global.Security.GetFullName(V.Caller.User,V.Local.sRet)
	F.ODBC.Con!rstQuote.Set!CREATED_BY(v.Local.sRet)
	F.ODBC.Con!rstQuote.Set!EST_DATE(V.ODBC.Con!rstEST.FieldVal!EST_DATE)
	F.ODBC.Con!rstQuote.Set!SENT_DATE(V.Ambient.Date)
	F.ODBC.CON!rstQuote.Set!LBL_WIDTH(V.ODBC.CON!rstEST.FieldVal!LBL_WIDTH)
	F.ODBC.CON!rstQuote.Set!LBL_DEPTH(V.ODBC.CON!rstEST.FieldVal!LBL_DEPTH)
	F.ODBC.Con!rstQuote.Set!LINER_WIDTH(V.ODBC.Con!rstEst.FieldValFloat!LINER_WIDTH)
	F.ODBC.Con!rstQuote.Set!REPEAT_LENGTH(V.ODBC.Con!rstEst.FieldValFloat!REPEAT_LENGTH)
	F.ODBC.CON!rstQuote.Set!FIN_LBL_ACROSS(V.ODBC.CON!rstEST.FieldValFloat!FIN_LBL_ACROSS)
	F.ODBC.Con!rstQuote.Set!CORE_SIZE(V.ODBC.CON!rstEST.FieldValFloat!CORE_SIZE)
	F.ODBC.CON!rstQuote.Set!LABELS_ROLL(V.ODBC.Con!rstEST.FieldValFloat!LABELS_ROLL)
	F.ODBC.CON!rstQuote.Set!ROLLS_BOX(V.ODBC.Con!rstEST.FieldValFloat!ROLLS_BOX)
	F.ODBC.CON!rstQuote.Set!ROLL_OD(V.ODBC.Con!rstEST.FieldValFloat!ROLL_OD)
	F.ODBC.CON!rstQuote.Set!ROLL_OD_ACT(V.ODBC.Con!rstEST.FieldValFloat!ROLL_OD_ACT)
	F.ODBC.CON!rstQuote.Set!LABELS_ROLL(V.ODBC.Con!rstEST.FieldValFloat!LABELS_ROLL)
	f.Intrinsic.Control.If(V.ODBC.Con!rstEst.FieldValTrim!FINISH_PART,<>,"")
		F.ODBC.Con!rstQuote.Set!FINISH_PART(V.ODBC.Con!rstEst.FieldValTrim!FINISH_PART)
	f.Intrinsic.Control.Else
		F.ODBC.Con!rstQuote.Set!FINISH_PART(V.Screen.F_Label_Est!txtEstimate.Text)
	f.Intrinsic.Control.Endif
	F.ODBC.Con!rstQuote.Set!FINISH_LOC(V.ODBC.Con!rstEst.FieldValTrim!FINISH_LOC)
	F.ODBC.Con!rstQuote.Set!CUSTOMER_NOTES(V.ODBC.Con!rstEst.FieldValTrim!CUSTOMER_NOTES)
	F.ODBC.Con!rstQuote.Set!FINISH_DESC(V.ODBC.Con!rstEst.FieldValTrim!FINISH_DESC)
	F.ODBC.Con!rstQuote.Set!WIND_DIR(V.ODBC.Con!rstEst.FieldValTrim!WIND_DIR)
	F.ODBC.Con!rstQuote.Set!DIE_CHARGE(V.ODBC.Con!rstEst.FieldValTrim!DIE_CHARGE)
	F.ODBC.Con!rstQuote.Set!PLATE_CHARGE(V.ODBC.Con!rstEst.FieldValTrim!PLATE_CHARGE)
	F.ODBC.Con!rstQuote.Set!POVER(V.ODBC.Con!rstEst.FieldValTrim!POVER)
	F.ODBC.Con!rstQuote.Set!PUNDER(V.ODBC.Con!rstEst.FieldValTrim!PUNDER)
	F.ODBC.Con!rstQuote.Set!OPINFEED(V.ODBC.Con!rstEst.FieldValTrim!OPINFEED)
	F.ODBC.Con!rstQuote.Set!OPERFED(V.ODBC.Con!rstEst.FieldValTrim!OPERFED)
	F.ODBC.Con!rstQuote.Set!OAUTOAPPLIED(V.ODBC.Con!rstEst.FieldValTrim!OAUTOAPPLIED)
	F.ODBC.Con!rstQuote.Set!OAIREJECT(V.ODBC.Con!rstEst.FieldValTrim!OAIREJECT)
	F.ODBC.Con!rstQuote.Set!OLABELING(V.ODBC.Con!rstEst.FieldValTrim!OLABELING)
	F.ODBC.Con!rstQuote.Set!ORIBONS(V.ODBC.Con!rstEst.FieldValTrim!ORIBONS)
	F.ODBC.Con!rstQuote.Set!ORIBONSOURCE(V.ODBC.Con!rstEst.FieldValTrim!ORIBONSOURCE)
	F.ODBC.Con!rstQuote.Set!OMISC(V.ODBC.Con!rstEst.FieldValTrim!OMISC)
	F.ODBC.Con!rstQuote.Set!OFACECUT(V.ODBC.Con!rstEst.FieldValTrim!OFACECUT)
	F.ODBC.Con!rstQuote.Set!OBACKCUT(V.ODBC.Con!rstEst.FieldValTrim!OBACKCUT)
	F.ODBC.Con!rstQuote.Set!OSHAPE(V.ODBC.Con!rstEst.FieldValTrim!OSHAPE)
	F.ODBC.Con!rstQuote.Set!OCOLORFRONT(V.ODBC.Con!rstEst.FieldValTrim!OCOLORFRONT)
	F.ODBC.Con!rstQuote.Set!OCOLORBACK(V.ODBC.Con!rstEst.FieldValTrim!OCOLORBACK)
	F.ODBC.Con!rstQuote.Set!OINKTYPE(V.ODBC.Con!rstEst.FieldValTrim!OINKTYPE)
	F.ODBC.Con!rstQuote.Set!OINKCOVER(V.ODBC.Con!rstEst.FieldValTrim!OINKCOVER)
	F.ODBC.Con!rstQuote.Set!OVARNTYPE(V.ODBC.Con!rstEST.FieldValTrim!OVARNTYPE)
	F.ODBC.Con!rstQuote.Set!OVARNCOVER(V.ODBC.Con!rstEST.FieldValFloat!OVARNCOVER)
	F.ODBC.Con!rstQuote.Set!OVARPRINT(V.ODBC.Con!rstEst.FieldValTrim!OVARPRINT)
	F.ODBC.Con!rstQuote.Set!OEXTRACOLOR(V.ODBC.Con!rstEst.FieldValTrim!OEXTRACOLOR)
	F.ODBC.Con!rstQuote.Set!OTOTPLATES(V.ODBC.Con!rstEst.FieldValTrim!OTOTPLATES)
'	F.ODBC.Con!rstQuote.Set!OFOURCOLOR(V.ODBC.Con!rstEst.FieldValTrim!OFOURCOLOR)
	F.ODBC.Con!rstQuote.Set!OFOURCOLOR(V.ODBC.Con!rstEst.FieldValTrim!H4COLOR)
	F.ODBC.Con!rstQuote.Set!ODEADENED(V.ODBC.Con!rstEst.FieldValTrim!ODEADENED)
	F.ODBC.Con!rstQuote.Set!OLBSMLABEL(V.ODBC.Con!rstEst.FieldValTrim!OLBSMLABEL)
	F.ODBC.Con!rstQuote.Set!OLBLCARTON(V.ODBC.Con!rstEst.FieldValTrim!LBL_CARTON)
	V.Local.sRet.Set("")
	F.Intrinsic.String.Build("SELECT LOCATION1 FROM GCG_3623_EST_LOC WHERE EST_NO = '{0}' ORDER BY LOCATION1 ASC",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSql)
	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLoc",v.Local.sSql)
	f.Intrinsic.Control.DoUntil(v.ODBC.Con!rstLoc.EOF,=,True)
		f.Intrinsic.String.Build("SELECT LOCATION_DESC FROM V_LOCATIONS WHERE LOCATION = '{0}'",V.ODBC.Con!rstLoc.FieldVal!LOCATION1,V.Local.sSql)
		F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLocDesc",v.Local.sSql)
		f.Intrinsic.Control.If(v.ODBC.Con!rstLocDesc.EOF,=,False)
			F.Intrinsic.Control.If(V.Local.sRet,<>,"")
				f.Intrinsic.String.Build("{0}{1}{2}",v.Local.sRet,v.Ambient.NewLine,v.ODBC.Con!rstLocDesc.FieldValTrim!LOCATION_DESC,V.Local.sRet)
			F.Intrinsic.Control.Else
				V.Local.sRet.Set(V.ODBC.Con!rstLocDesc.FieldValTrim!LOCATION_DESC)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstLocDesc.Close
		F.ODBC.Con!rstLoc.MoveNext
	f.Intrinsic.Control.Loop
	f.ODBC.Con!rstLoc.Close
	F.ODBC.Con!rstQuote.Set!SHIPPOINTS(V.Local.sRet.Trim)
	F.ODBC.Con!rstQuote.Set!GAPACROSS(V.ODBC.Con!rstEst.FieldValTrim!GAPACROSS)
	F.ODBC.Con!rstQuote.Set!GAPDOWN(V.ODBC.Con!rstEst.FieldValTrim!GAPDOWN)
	f.ODBC.Con!rstQuote.Set!HDIGITAL(v.ODBC.Con!rstEst.FieldVal!HDIGITAL)
	
	f.ODBC.Con!rstQuote.Set!PTOTALPLATEC(v.ODBC.Con!rstEst.FieldVal!PTOTALPLATEC)
	f.ODBC.Con!rstQuote.Set!PPLATECHACHAR(v.ODBC.Con!rstEst.FieldVal!PPLATECHACHAR)
	f.ODBC.Con!rstQuote.Set!PTOTALCOLCHAN(v.ODBC.Con!rstEst.FieldVal!PTOTALCOLCHAN)
	f.ODBC.Con!rstQuote.Set!PCOLORCHACHAR(v.ODBC.Con!rstEst.FieldVal!PCOLORCHACHAR)
	
	f.ODBC.Con!rstQuote.Set!PROOF_CHARGE(v.ODBC.Con!rstEst.FieldValFloat!PROOF_CHARGE)
	
	f.ODBC.Con!rstQuote.Set!UM(v.ODBC.Con!rstEst.FieldValTrim!FINISH_UM)
	
	f.ODBC.Con!rstQuote.Set!ROLLS(v.ODBC.Con!rstEst.FieldVal!ROLLS)
	f.ODBC.Con!rstQuote.Set!FANFOLD(v.ODBC.Con!rstEst.FieldVal!FANFOLD)
	f.ODBC.Con!rstQuote.Set!FLBLFOLD(v.ODBC.Con!rstEst.FieldValFloat!LABELS_FOLD)
	f.ODBC.Con!rstQuote.Set!FLBLSTACK(v.ODBC.Con!rstEst.FieldValFloat!LABELS_STACK)
	f.ODBC.Con!rstQuote.Set!FSTACKBOX(v.ODBC.Con!rstEst.FieldValFloat!STACK_BOX)
	f.ODBC.Con!rstQuote.Set!SHEETS(v.ODBC.Con!rstEst.FieldVal!SHEETS)
	f.ODBC.Con!rstQuote.Set!SLBLSHEET(v.ODBC.Con!rstEst.FieldValFloat!LABELS_SHEET)
	f.ODBC.Con!rstQuote.Set!SSHEETSTACK(v.ODBC.Con!rstEst.FieldValFloat!SHEETS_STACK)
	f.ODBC.Con!rstQuote.Set!SSTACKBOX(v.ODBC.Con!rstEst.FieldValFloat!STACKS_BOX)
	f.ODBC.Con!rstQuote.Set!SHRINKWRAP(v.ODBC.Con!rstEst.FieldVal!PSHRINKWRAP)
	f.ODBC.Con!rstQuote.Set!SLBLSHRINK(v.ODBC.Con!rstEst.FieldValFloat!PLABELSSHRINK)
	
	v.Local.sMaterial.Declare(String)
	
	f.Intrinsic.String.Build("SELECT DISTINCT GCG.PART, V.DESCRIPTION_3 FROM GCG_3623_EST_MAT AS GCG LEFT JOIN V_INVENTORY_ALL AS V ON GCG.PART = V.PART AND GCG.LOC = V.LOCATION WHERE (V.PRODUCT_LINE = 'RM' OR V.PRODUCT_LINE = 'ZM') AND GCG.EST_NO = '{0}' ORDER BY GCG.POS ASC, V.PRODUCT_LINE ASC",v.Screen.F_Label_Est!txtEstimate.Text,v.Local.sSQL)
	f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstMat",v.Local.sSQL)
	f.Intrinsic.Control.If(v.ODBC.Con!rstMat.EOF,=,False)
'		f.Intrinsic.String.Build("<b>Stock 1:</b> {0}{1}{2}*!*",v.ODBC.Con!rstMat.FieldValTrim!PART,v.Ambient.Tab,v.ODBC.Con!rstMat.FieldValTrim!DESCRIPTION_3,v.Local.sMaterial)
		f.Intrinsic.String.Build("<b>Stock 1:</b> {0}*!*",v.ODBC.Con!rstMat.FieldValTrim!DESCRIPTION_3,v.Local.sMaterial)
		f.ODBC.Con!rstMat.MoveNext
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.ODBC.Con!rstMat.EOF,=,False)
'		f.Intrinsic.String.Build("{0}<b>Stock 2:</b> {1}{2}{3}",v.Local.sMaterial,v.ODBC.Con!rstMat.FieldValTrim!PART,v.Ambient.Tab,v.ODBC.Con!rstMat.FieldValTrim!DESCRIPTION_3,v.Local.sMaterial)
		f.Intrinsic.String.Build("{0}<b>Stock 2:</b> {1}",v.Local.sMaterial,v.ODBC.Con!rstMat.FieldValTrim!DESCRIPTION_3,v.Local.sMaterial)
		f.ODBC.Con!rstMat.MoveNext
	f.Intrinsic.Control.EndIf
	f.ODBC.Con!rstMat.Close
	
	f.Intrinsic.Control.If(v.Local.sMaterial,=,"")
		v.Local.sMaterial.Set("*!*")
	f.Intrinsic.Control.EndIf
	
	F.ODBC.Con!rstQuote.Set!MATERIAL(v.Local.sMaterial)
	
	V.Local.iCount.Set(1)
	f.Intrinsic.String.Build("SELECT QTY, UNIT_PRICE FROM GCG_3623_EST_PRICE WHERE EST_NO = '{0}' AND QTY > 0 ORDER BY QTY ASC",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSql)
	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstPrice",v.Local.sSql)
'	f.Intrinsic.Control.DoUntil(v.ODBC.Con!rstPrice.EOF,=,True,"OR",v.Local.iCount,>,10)
	f.Intrinsic.Control.DoUntil(v.Local.iCount,>,10)
		f.Intrinsic.Control.If(v.ODBC.Con!rstPrice.EOF,=,False)
			F.Intrinsic.Control.If(V.ODBC.CON!rstPrice.FieldValFloat!QTY,>,0)
				F.ODBC.Con!rstQuote.Set!P_QTY[V.Local.iCount](v.ODBC.Con!rstPrice.FieldValFloat!UNIT_PRICE)
				F.ODBC.Con!rstQuote.Set!H_QTY[V.Local.iCount](v.ODBC.Con!rstPrice.FieldValFloat!QTY)
				f.Intrinsic.Math.Add(v.Local.iCount,1,v.Local.iCount)
			F.Intrinsic.Control.EndIf
			f.ODBC.Con!rstPrice.MoveNext
		f.Intrinsic.Control.Else
			F.ODBC.Con!rstQuote.Set!P_QTY[V.Local.iCount](0)
			F.ODBC.Con!rstQuote.Set!H_QTY[V.Local.iCount](0)
			f.Intrinsic.Math.Add(v.Local.iCount,1,v.Local.iCount)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Loop
	f.ODBC.Con!rstPrice.Close
	
	'Added by 'FEQ 10/23 #2 Mod
	F.ODBC.Con!rstQuote.Set!CHKPRECISION(V.Screen.F_Label_Est!chkPrecision.Value)
	F.ODBC.Con!rstQuote.Set!CHKPRIME(V.Screen.F_Label_Est!chkPrime.Value)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstEst.Close

F.ODBC.Con!rstQuote.Update
f.ODBC.Con!rstQuote.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Save_Quote_Info_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_label_est_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Save_Quote_Info.End

Program.Sub.Die_DDL_Upload.Start
F.Intrinsic.Control.SetErrorHandler("Die_DDL_Upload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.ssql.Declare(String)

'get the label and shape for the drop down lists on the material screen
F.Intrinsic.String.Build("Select distinct UM_INVENTORY from V_INVENTORY_MSTR where UM_INVENTORY <> '{0}' ","",V.Local.ssql)
F.ODBC.Connection!con.OpenRecordsetRO("rst",V.local.ssql)
Gui.F_Label_Est.ddlMUM.AddItem("")
F.Intrinsic.Control.If(V.ODBC.Con!rst.EOF,=,False)
	'do until the end of file is true
	F.Intrinsic.Control.DoUntil(V.odbc.con!rst.EOF,=,True)
		'add the to um ddl
		Gui.F_Label_Est.ddlMUM.AddItem(V.ODBC.Con!rst.FieldValTrim!UM_INVENTORY)
		F.ODBC.con!rst.MoveNext
	F.Intrinsic.Control.Loop
F.intrinsic.Control.EndIf

'close connection to the recordset
F.ODBC.Con!rst.close

F.Intrinsic.String.Build("Select distinct Shape from GCG_3623_INVENTORY where SHAPE <> '{0}' ","",V.Local.ssql)
F.ODBC.Connection!con.OpenRecordsetRO("rst",V.local.ssql)
Gui.F_Label_Est.ddlMLabelShape.AddItem("")
F.Intrinsic.Control.If(V.ODBC.Con!rst.EOF,=,False)
	'do until the end of file is true
	F.Intrinsic.Control.DoUntil(V.odbc.con!rst.EOF,=,True)
		'add the distinct shapes to the shape ddl on the material tab
		Gui.F_Label_Est.ddlMLabelShape.AddItem(V.ODBC.Con!rst.FieldValTrim!SHAPE)
		F.ODBC.con!rst.MoveNext
	F.Intrinsic.Control.Loop
F.intrinsic.Control.EndIf

'close connection to the recordset
F.ODBC.Con!rst.close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Die_DDL_Upload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Die_DDL_Upload.End

Program.Sub.Run_Quantities.Start
F.Intrinsic.Control.SetErrorHandler("Run_Quantities_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.iCount.Declare(long)
v.Local.iLine.Declare(long)

'Adding to the RunQty datatable
f.Data.DataTable.DeleteRow("RunQty")
v.Local.iLine.set(1)
f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstQty","SELECT * FROM GCG_3623_RUN_MAINT")
f.Intrinsic.Control.If(v.ODBC.Con!rstQty.EOF,=,False)
	f.Intrinsic.Control.For(v.Local.iCount,0,9,1)
		'Add the Line number to the datatable
		f.Data.DataTable.AddRow("RunQty","Line",v.Local.iLine.String,"Qty",v.ODBC.Con!rstQty.FieldValFloat!QTY_[v.Local.iLine])
		f.Intrinsic.Math.Add(v.Local.iLine,1,v.Local.iLine)
	f.Intrinsic.Control.Next(v.Local.iCount)
f.Intrinsic.Control.Else
	f.Intrinsic.Control.For(v.Local.iCount,0,9,1)
		'Add the Line number to the datatable
		f.Data.DataTable.AddRow("RunQty","Line",v.Local.iLine.String,"Qty",0)
		f.Intrinsic.Math.Add(v.Local.iLine,1,v.Local.iLine)
	f.Intrinsic.Control.Next(v.Local.iCount)
f.Intrinsic.Control.EndIf
f.ODBC.Con!rstQty.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Run_Quantities_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Run_Quantities.End

Program.Sub.Save_Est.Start
F.Intrinsic.Control.SetErrorHandler("Save_Est_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iCount.Declare(Long)
V.Local.sLoc.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iRet.Declare(Long)
V.Local.dTime.Declare(Date)
V.Local.dDate.Declare(Date)
V.Local.iRows.Declare(Long)
V.Local.iRunQuantityLoop.Declare(Long)
V.Local.sEstimate.Declare(String)
v.Local.sKey.Declare(string)
v.Local.sFieldMap.Declare(string)
v.Local.fColor.Declare(Float)
v.Local.bExist.Declare(Boolean)
v.Local.sUser.Declare(String)
V.Local.sTemp.Declare(String)
V.Local.sMatl.Declare(String)

'first make sure we are not saving an archived estimate
f.Intrinsic.Control.If(v.Global.bArchived,=,True)
	f.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf
'We are going to save the Estimate to the table

'change the global save to true
V.Global.bSaved.Set(True)
'checking if in load mode
'F.Intrinsic.Control.If(V.Global.bLoadMode,=,True)
f.Intrinsic.Variable.ArgExists("QUOTE",v.Local.bExist)

f.Intrinsic.Control.If(v.Local.bExist,=,False)
	F.Intrinsic.UI.Msgbox("Would you like to Save as a new Estimate #?","NewEstimate#",3,V.Local.iRet)
	
f.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Local.iRet,=,6)
	F.ODBC.Connection!Con.GetID("GCG_3623_EST","EST_NO",TRUE,V.Local.iRet)
	'unlock the current Estimate
	F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Screen.F_Label_Est!txtEstimate.Text,"LOCK","Unlock")
	'Lock the new estimate that is being loaded
	F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Local.iRet,"LOCK","Lock")
	Gui.F_Label_Est.txtEstimate.Text(V.Local.iRet.Trim)
	Gui.F_Label_Est.txtQuoteNo.Text("")
	Gui.F_Label_Est.dtpEstDate.Value(v.Ambient.Date)
	'#7 modification
	gui.F_Label_Est.dtpLastSaved.Value(V.Ambient.Date)
f.Intrinsic.Control.ElseIf(v.Local.iRet,=,2)
	f.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
'F.Intrinsic.Control.EndIf

'lock the screen
Gui.F_Label_Est..Enabled(False)

'spliting copy from label
F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCopyFrom.Caption,":",V.Local.sEstimate)
F.Intrinsic.String.Build("SELECT * FROM GCG_3623_EST WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)

F.ODBC.Connection!Con.OpenLocalRecordsetRW("rstEst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstEst.EOF,=,True)
	'no estimate was found so add a new one
	F.ODBC.Con!rstEst.AddNew
	F.ODBC.Con!rstEst.Set!EST_NO(V.Screen.F_Label_Est!txtEstimate.Text)
	F.ODBC.Con!rstEst.Set!CREATED_BY(V.Caller.User.Trim)
	'set Created by
	F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCreateBy.Caption,":",V.Local.sUser)
	V.Local.sUser.RedimPreserve(0,1)
	F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),V.Caller.User,V.Local.sUser)
	Gui.F_Label_Est.lblCreateBy.Caption(V.Local.sUser)
	'set Changed by
	F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblLstCng.Caption,":",V.Local.sUser)
	V.Local.sUser.RedimPreserve(0,1)
	F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),"",V.Local.sUser)
	Gui.F_Label_Est.lblLstCng.Caption(V.Local.sUser)
F.Intrinsic.Control.EndIf

'add all of the fields to this table
F.Intrinsic.String.Trim(V.Local.sEstimate(1),V.Local.sEstimate)
F.ODBC.Con!rstEst.Set!COPY_FROM(V.Local.sEstimate.Long)
F.ODBC.Con!rstEst.Set!SAVED("1")
F.ODBC.Con!rstEst.Set!CUSTOMER(V.Screen.F_Label_Est!txtCustomer.Text)
F.ODBC.Con!rstEst.Set!CONTACT(V.Screen.F_Label_Est!txtContact.Text)
F.ODBC.Con!rstEst.Set!NAME_CUSTOMER(V.Screen.F_Label_Est!txtCustName.Text)
F.ODBC.Con!rstEst.Set!ADDRESS(V.Screen.F_Label_Est!txtCustAddress.Text)
F.ODBC.Con!rstEst.Set!CITY(V.Screen.F_Label_Est!txtCustCity.Text)
F.ODBC.Con!rstEst.Set!STATE1(V.Screen.F_Label_Est!txtCustState.Text)
F.ODBC.Con!rstEst.Set!ZIP(V.Screen.F_Label_Est!txtCustZip.Text)
F.ODBC.Con!rstEst.Set!COUNTRY(V.Screen.F_Label_Est!txtCustCountry.Text)
F.ODBC.Con!rstEst.Set!PHONE(V.Screen.F_Label_Est!txtCustPhone.Text)
F.ODBC.Con!rstEst.Set!FAX(V.Screen.F_Label_Est!txtCustFax.Text)
F.ODBC.Con!rstEst.Set!EMAIL(V.Screen.F_Label_Est!txtCustEmail.Text)
F.ODBC.Con!rstEst.Set!GROUP_CUST(V.Screen.F_Label_Est!txtCustBG.Text)
F.ODBC.Con!rstEst.Set!CUSTOMER_NOTES(V.Screen.F_Label_Est!mltCustNotes.Text)
F.ODBC.Con!rstEst.Set!EST_DATE(V.Screen.F_Label_Est!dtpEstDate.Value.PervasiveDate)

'get all checked locations
Gui.F_Label_Est.lvwHLocation.RetrieveCheckedListItems(V.Local.sLoc)

'first delete all locations for this estimate in the table
F.Intrinsic.String.Build("DELETE FROM GCG_3623_EST_LOC WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)
F.ODBC.Connection!Con.Execute(V.Local.sSQL)
F.Intrinsic.Control.If(V.Local.sLoc,<>,"***NORETURN***")
	'split the locations and then we need to cycle through all of them to save them
	F.Intrinsic.String.Split(V.Local.sLoc,"*!*",V.Local.sLoc)
	'open a recordset and keep adding all of the locations, we have already deleted the previous ones
	F.Intrinsic.String.Build("SELECT * FROM GCG_3623_EST_LOC WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)
	F.ODBC.Connection!Con.OpenLocalRecordsetRW("rstLoc",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstLoc.EOF,=,True)
		F.Intrinsic.Control.For(V.Local.iCount,V.Local.sLoc.LBound,V.Local.sLoc.UBound,1)
			F.ODBC.Con!rstLoc.AddNew
			F.ODBC.Con!rstLoc.Set!EST_NO(V.Screen.F_Label_Est!txtEstimate.Text)
			F.ODBC.Con!rstLoc.Set!LOCATION1(V.Local.sLoc(V.Local.iCount).Trim)
			F.ODBC.Con!rstLoc.Update
		F.Intrinsic.Control.Next(V.Local.iCount)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstLoc.Close
F.Intrinsic.Control.EndIf

'F.ODBC.Con!rstEst.Set!H_SALES_REP(V.Screen.F_Label_Est!txtHSalesRep.Text)
'#7 We changed the functionality of the datepicker at the top right hand corner. It is now used to store the date the estimate was saved last
'F.ODBC.Con!rstEst.Set!H_DUE_DATE(V.Screen.F_Label_Est!dtpLastSaved.Value.PERVASIVEDATE)
Gui.F_Label_Est.dtpLastSaved.Value(V.Ambient.Date)
F.ODBC.Con!rstEst.Set!H_DUE_DATE(V.Ambient.Date.PervasiveDate)
F.ODBC.Con!rstEst.Set!H_AREA(V.Screen.F_Label_Est!txtHArea.Text)
F.ODBC.Con!rstEst.Set!H_BRANCH(V.Screen.F_Label_Est!txtHBranch.Text)
F.ODBC.Con!rstEst.Set!H_SHIP_VIA(V.Screen.F_Label_Est!txtHShipVia.Text)
F.ODBC.Con!rstEst.Set!H_CARRIER(V.Screen.F_Label_Est!txtHCarrier.Text)
F.ODBC.Con!rstEst.Set!H_PROCESS_GRP(V.Screen.F_Label_Est!ddlHProcessGrp.Text)
F.ODBC.Con!rstEst.Set!H_FOB(V.Screen.F_Label_Est!txtHFOB.Text)
F.ODBC.Con!rstEst.Set!H_TERMS(V.Screen.F_Label_Est!txtHTerms.Text)
F.ODBC.Con!rstEst.Set!H_PROJECT(V.Screen.F_Label_Est!txtHProject.Text)
F.ODBC.Con!rstEst.Set!H_THIRD_FREIGHT(V.Screen.F_Label_Est!txtHTrdFreight.Text)
F.ODBC.Con!rstEst.Set!H_FREIGHT_ZONE(V.Screen.F_Label_Est!txtHFreightZone.Text)
F.ODBC.Con!rstEst.Set!H_QTY1(v.DataTable.RunQty(0).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY2(v.DataTable.RunQty(1).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY3(v.DataTable.RunQty(2).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY4(v.DataTable.RunQty(3).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY5(v.DataTable.RunQty(4).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY6(v.DataTable.RunQty(5).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY7(v.DataTable.RunQty(6).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY8(v.DataTable.RunQty(7).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY9(v.DataTable.RunQty(8).Qty!FieldValFloat)
F.ODBC.Con!rstEst.Set!H_QTY10(v.DataTable.RunQty(9).Qty!FieldValFloat)
V.Local.sTemp.Set(V.Screen.F_Label_Est!mltHEstNote.Text)
F.ODBC.Con!rstEst.Set!H_EST_NOTES(V.Local.sTemp.PSQLFriendly)
F.ODBC.Con!rstEst.Set!CONTRACT_PRICE(V.Screen.F_Label_Est!chkHContPricing.Value)
F.ODBC.Con!rstEst.Set!LAST_CNG_BY(V.Caller.User.Trim)
F.ODBC.Con!rstEst.Set!LBL_WIDTH(V.Screen.F_Label_Est!txtHlblWidth.Text.Float)
F.ODBC.Con!rstEst.Set!LBL_DEPTH(v.Screen.F_Label_Est!txtHlblDepth.Text.Float)
F.ODBC.Con!rstEst.Set!LINER_WIDTH(v.Screen.F_Label_Est!txtHLinerWidth.Text.Float)
F.ODBC.Con!rstEst.Set!REPEAT_LENGTH(V.Screen.F_Label_Est!txtHRepeatLen.Text.Float)
F.ODBC.Con!rstEst.Set!FIN_LBL_ACROSS(V.Screen.F_Label_Est!txtHFinAcross.Text.Float)

f.Intrinsic.Math.Add(v.Screen.F_Label_Est!txtOColorFront.Text.Float,v.Screen.F_Label_Est!txtOColorBack.Text.Float,v.Local.fColor)
F.ODBC.Con!rstEst.Set!NUM_COLORS(v.Local.fColor)
F.ODBC.Con!rstEst.Set!HACRDIE(v.Screen.F_Label_Est!txtHAcrDie.Text.Float)
F.ODBC.Con!rstEst.Set!HACRPRESS(v.Screen.F_Label_Est!txtHAcrpress.Text.Float)
F.ODBC.Con!rstEst.Set!ROLLS(V.Screen.F_Label_Est!chkRolls.Value)
F.ODBC.Con!rstEst.Set!CORE_SIZE(v.Screen.F_Label_Est!txtRCoreSize.Text.Float)
F.ODBC.Con!rstEst.Set!LABELS_ROLL(V.Screen.F_Label_Est!txtRLblRoll.Text.Float)
F.ODBC.Con!rstEst.Set!ROLLS_BOX(V.Screen.F_Label_Est!txtRRollBox.Text.Float)
F.ODBC.Con!rstEst.Set!ROLL_OD(V.Screen.F_Label_Est!txtRRollOD.Text.Float)
F.ODBC.Con!rstEst.Set!ROLL_OD_ACT(v.Screen.F_Label_Est!txtRODAct.Text.Float)
F.ODBC.Con!rstEst.Set!FANFOLD(V.Screen.F_Label_Est!chkFanfold.Value)
F.ODBC.Con!rstEst.Set!LABELS_FOLD(V.Screen.F_Label_Est!txtFLblFold.Text.Float)
F.ODBC.Con!rstEst.Set!LABELS_STACK(V.Screen.F_Label_Est!txtFLblStack.Text.Float)
F.ODBC.Con!rstEst.Set!STACK_BOX(V.Screen.F_Label_Est!txtFStackBox.Text.Float)
F.ODBC.Con!rstEst.Set!SHEETS(V.Screen.F_Label_Est!chkSheets.Value)
F.ODBC.Con!rstEst.Set!LABELS_SHEET(V.Screen.F_Label_Est!txtSLblSheet.Text.Float)
F.ODBC.Con!rstEst.Set!SHEETS_STACK(V.Screen.F_Label_Est!txtSSheetStack.Text.Float)
F.ODBC.Con!rstEst.Set!STACKS_BOX(V.Screen.F_Label_Est!txtSStackBox.Text.Float)
F.ODBC.Con!rstEst.Set!WIND_DIR(V.Screen.F_Label_Est!ddlRWindDir.Text)
F.ODBC.Con!rstEst.Set!LBL_CARTON(V.Screen.F_Label_Est!txtLbsCart.Text.Float)
F.ODBC.Con!rstEst.Set!FINISH_PART(V.Screen.F_Label_Est!txtFinishPart.Text.Trim)
F.ODBC.Con!rstEst.Set!FINISH_LOC(V.Screen.F_Label_Est!txtFinishLoc.Text.Trim)
F.ODBC.Con!rstEst.Set!FINISH_PL(V.Screen.F_Label_Est!ddlHPL.Text.UCase)
F.ODBC.Con!rstEst.Set!FINISH_DESC(V.Screen.F_Label_Est!txtdesc.Text.UCase)
F.ODBC.Con!rstEst.Set!FINISH_UM(V.Screen.F_Label_Est!txtHUM.Text.UCase)
F.ODBC.Con!rstEst.Set!DIE_CHARGE(V.Screen.F_Label_Est!txtPDieCharge.Text.Float)
F.ODBC.Con!rstEst.Set!PLATE_CHARGE(V.Screen.F_Label_Est!txtPPlateCharge.Text.Float)
F.ODBC.Con!rstEst.Set!PROOF_CHARGE(V.Screen.F_Label_Est!txtPProofCharge.Text.Float)

F.ODBC.Con!rstEst.Set!PTOTALPLATEC(V.Screen.F_Label_Est!txtPTotalPlateC.Text.Float)
F.ODBC.Con!rstEst.Set!PPLATECHACHAR(V.Screen.F_Label_Est!txtPPlateChaChar.Text.Float)
F.ODBC.Con!rstEst.Set!PTOTALCOLCHAN(V.Screen.F_Label_Est!txtPTotalColChan.Text.Float)
F.ODBC.Con!rstEst.Set!PCOLORCHACHAR(V.Screen.F_Label_Est!txtPColorChaChar.Text.Float)

F.ODBC.Con!rstEst.Set!POVER(V.Screen.F_Label_Est!txtPOver.Text.Float)
F.ODBC.Con!rstEst.Set!PUNDER(V.Screen.F_Label_Est!txtPUnder.Text.Float)
F.ODBC.Con!rstEst.Set!OPINFEED(V.Screen.F_Label_Est!chkOPinfeed.Value)
F.ODBC.Con!rstEst.Set!OPERFED(V.Screen.F_Label_Est!chkOPerfed.Value)
F.ODBC.Con!rstEst.Set!OAUTOAPPLIED(V.Screen.F_Label_Est!chkOAutoApplied.Value)
F.ODBC.Con!rstEst.Set!OAIREJECT(V.Screen.F_Label_Est!chkOAirEject.Value)
F.ODBC.Con!rstEst.Set!OLABELING(V.Screen.F_Label_Est!chkOLabeling.Value)
F.ODBC.Con!rstEst.Set!ORIBONS(V.Screen.F_Label_Est!chkORibbons.Value)
F.ODBC.Con!rstEst.Set!ORIBONSOURCE(V.Screen.F_Label_Est!chkORibbonSource.Value)
F.ODBC.Con!rstEst.Set!OMISC(V.Screen.F_Label_Est!chkOMisc.Value)
F.ODBC.Con!rstEst.Set!OFACECUT(V.Screen.F_Label_Est!txtOFaceCut.Text.Trim)
F.ODBC.Con!rstEst.Set!OBACKCUT(V.Screen.F_Label_Est!txtOBackCut.Text.Trim)
F.ODBC.Con!rstEst.Set!OSHAPE(V.Screen.F_Label_Est!txtOShape.Text.Trim)
F.ODBC.Con!rstEst.Set!OCOLORFRONT(V.Screen.F_Label_Est!txtOColorFront.Text.Float)
F.ODBC.Con!rstEst.Set!OCOLORBACK(V.Screen.F_Label_Est!txtOColorBack.Text.Float)
F.ODBC.Con!rstEst.Set!OINKTYPE(V.Screen.F_Label_Est!txtOInkType.Text.Trim)
F.ODBC.Con!rstEst.Set!OINKCOVER(V.Screen.F_Label_Est!txtOInkCoverage.Text.Float)
F.ODBC.Con!rstEst.Set!OVARNTYPE(V.Screen.F_Label_Est!txtOVarnType.Text.Trim)
F.ODBC.Con!rstEst.Set!OVARNCOVER(V.Screen.F_Label_Est!txtOVarnCoverage.Text.Float)
F.ODBC.Con!rstEst.Set!OVARPRINT(V.Screen.F_Label_Est!txtOVarPrint.Text.Trim)
F.ODBC.Con!rstEst.Set!OEXTRACOLOR(V.Screen.F_Label_Est!txtOExtraColor.Text.Float)
F.ODBC.Con!rstEst.Set!OTOTPLATES(V.Screen.F_Label_Est!txtOTotalPlates.Text.Float)
'F.ODBC.Con!rstEst.Set!OFOURCOLOR(V.Screen.F_Label_Est!chkOFourColor.Value)
F.ODBC.Con!rstEst.Set!OFOURCOLOR(V.Screen.F_Label_Est!chk4Color.Value)
F.ODBC.Con!rstEst.Set!ODEADENED(V.Screen.F_Label_Est!chkODeadened.Value)
F.ODBC.Con!rstEst.Set!OLBSMLABEL(V.Screen.F_Label_Est!txtOLbsMLabel.Text.Float)
F.ODBC.Con!rstEst.Set!OLBLCARTON(V.Screen.F_Label_Est!txtOLbsCarton.Text.Float)
F.ODBC.Con!rstEst.Set!GAPACROSS(V.Screen.F_Label_Est!txtOGapAcross.Text.Float)
F.ODBC.Con!rstEst.Set!GAPDOWN(V.Screen.F_Label_Est!txtOGapDown.Text.Float)
f.ODBC.Con!rstEst.Set!H4COLOR(v.Screen.F_Label_Est!chk4Color.Value)
f.ODBC.Con!rstEst.Set!HDIGITAL(v.Screen.F_Label_Est!chkDigital.Value)

f.ODBC.Con!rstEst.Set!OVACDIE(v.Screen.F_Label_Est!chkOVacDie.Value)
f.ODBC.Con!rstEst.Set!OCSM(v.Screen.F_Label_Est!chkOCSM.Value)
f.ODBC.Con!rstEst.Set!OSAMPLEOF(v.Screen.F_Label_Est!chkOSampleOF.Value)
f.ODBC.Con!rstEst.Set!OBLANKET(v.Screen.F_Label_Est!chkOBlanket.Value)

f.ODBC.Con!rstEst.Set!PCORELABELS(v.Screen.F_Label_Est!chkPCoreLabels.Value)
f.ODBC.Con!rstEst.Set!PINNERBOXES(v.Screen.F_Label_Est!chkPInnerBoxes.Value)
f.ODBC.Con!rstEst.Set!PSHRINKWRAP(v.Screen.F_Label_Est!chkPShrinkWrap.Value)
f.ODBC.Con!rstEst.Set!PPACKLABELS(v.Screen.F_Label_Est!chkPPackLabels.Value)
f.ODBC.Con!rstEst.Set!PPALLETLABEL(v.Screen.F_Label_Est!chkPPalletLabel.Value)
f.ODBC.Con!rstEst.Set!PGAY(v.Screen.F_Label_Est!chkPGay.Value)
f.ODBC.Con!rstEst.Set!PCHIP(v.Screen.F_Label_Est!chkPChip.Value)
f.ODBC.Con!rstEst.Set!PPLASTICC(v.Screen.F_Label_Est!chkPPlasticC.Value)
f.ODBC.Con!rstEst.Set!PCOREPLUG(v.Screen.F_Label_Est!chkPCorePlug.Value)

'Function.Intrinsic.Debug.InvokeDebugger
'Function.Intrinsic.Debug.Stop

f.ODBC.Con!rstEst.Set!PLABELSSHRINK(v.Screen.F_Label_Est!txtPLabelsShrink.Text.Float)

F.ODBC.Con!rstEst.Set!QUOTE_NO(v.Screen.F_Label_Est!txtQuoteNo.Text)

F.Intrinsic.String.GSSPartString(V.Screen.F_Label_Est!txtFinishRouter.Text, V.Screen.F_Label_Est!txtFinishRev.Text, V.Local.sRet)

F.ODBC.Con!rstEst.Set!ROUTER_NO(V.Local.sRet)

'#3Mod FEQ 11/02/2018
'We are saving the Material and Press for the estimator.

'We are going to create temp tables to figure out what to save for the RM and Press
F.Data.DataView.ToDataTable("FullTable", "MaterialBottom", "dtMatTemp")
F.Data.Dictionary.CreateFromSQL("dicPL", "Con", "Select RTRIM(LTRIM(PART)), PRODUCT_LINE from V_INVENTORY_MSTR")
F.Data.Dictionary.SetDefaultReturn("dicPL", "")

F.Data.DataTable.AddColumn("dtMatTemp", "ProdLine", "String")

F.Data.DataTable.FillFromDictionary("dtMatTemp", "dicPL", "Part", "ProdLine")

'Makign a view to filter out the RM parts
F.Data.DataView.Create("dtMatTemp", "dvRawMat", 22, "[ProdLine] in ('RM', 'ZM')", "Seq ASC")
F.Intrinsic.Control.If(V.DataView.dtMatTemp!dvRawMat.RowCount, >, 0)
	F.Intrinsic.String.Left(V.DataView.dtMatTemp!dvRawMat(0).Part!FieldValTrim, 5, V.Local.sMatl)
F.Intrinsic.Control.Else
	V.Local.sMatl.Set("")
F.Intrinsic.Control.EndIf

f.ODBC.Con!rstEst.Set!FOR_MATL(V.Local.sMatl)

F.Data.Dictionary.Close("dicPL")

F.Data.DataView.Close("dtMatTemp", "dvRawMat")
F.Data.Datatable.Close("dtMatTemp")

F.Intrinsic.Control.If(V.DataView.FullTable!LaborBottom.RowCount, >, 0)
	F.ODBC.Con!rstEst.Set!PRESS_WC(V.DataView.FullTable!LaborBottom(0).Part!FieldValTrim)
F.Intrinsic.Control.Else
F.ODBC.Con!rstEst.Set!PRESS_WC("")
F.Intrinsic.Control.EndIf


'Added by 'FEQ 10/23 
F.ODBC.Con!rstEst.Set!CHKPRECISION(V.Screen.F_Label_Est!chkPrecision.Value)
F.ODBC.Con!rstEst.Set!CHKPRIME(V.Screen.F_Label_Est!chkPrime.Value)

F.ODBC.Con!rstEst.Update
F.ODBC.Con!rstEst.Close

F.Intrinsic.Control.If(v.Screen.F_Label_Est!txtQuoteNo.Text, <>, "")
	'we are going to save the precission press and prime labeling checkboxes to the quote.
	F.Intrinsic.String.Build("Select QUOTE_NO, CHKPRECISION, CHKPRIME from GCG_3623_QUOTE where QUOTE_NO = '{0}' order by EST_NO DESC", V.Screen.F_Label_Est!txtQuoteNo.Text, V.Local.sSQL)
	F.ODBC.Connection!Con.OpenLocalRecordsetRW("rstQuoteUpdate", V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstQuoteUpdate.EOF, <>, True)
		F.ODBC.Con!rstQuoteUpdate.Set!CHKPRECISION(V.Screen.F_Label_Est!chkPrecision.Value)
		F.ODBC.Con!rstQuoteUpdate.Set!CHKPRIME(V.Screen.F_Label_Est!chkPrime.Value)
		F.ODBC.Con!rstQuoteUpdate.Update
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstQuoteUpdate.Close	
F.Intrinsic.Control.EndIf

'Update FullTable with Est_No
f.Data.DataTable.SetValue("FullTable",-1,"Est_No",v.Screen.F_Label_Est!txtEstimate.Text)

'Formatting the columns so that we don't get multi step error for saving too long of fields to the DB.

'Now we are going to save Material
'we need to make sure the part is not greater than 20 characters

F.Intrinsic.String.Build("DELETE GCG_3623_EST_MAT WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)
F.ODBC.Connection!Con.Execute(V.Local.sSQL)
v.Local.sKey.Set("EST_NO*!*POS")
V.Local.sFieldMap.Set("ROW@!@ROW1*!*EST_NO@!@EST_NO*!*PART@!@PART*!*LOC@!@LOC*!*CODE@!@SORT_CODE*!*DESCRIPTION@!@DESCRIPTION*!*COST/UM@!@PRICE*!*COST@!@COST*!*QTY@!@QTY*!*UM@!@UM*!*LENGTH@!@LENGTH1*!*WIDTH@!@WIDTH*!*WEIGHT@!@WEIGHT*!*MSI@!@MSI*!*SETUP@!@SETUP*!*SHOWCOST@!@SHOWCOST*!*POS@!@POS*!*FORMULAM@!@FORMULAM*!*FORMULAQ@!@FORMULAQ*!*FREQ@!@FREQ")
f.Data.DataView.ToDataTable("FullTable","MaterialBottom","MaterialSave",True)
f.Data.DataTable.SaveToDB("MaterialSave","Con","GCG_3623_EST_MAT",v.Local.sKey,256,v.Local.sFieldMap)
f.Data.DataTable.Close("MaterialSave")

'Now we are going to save Labor
F.Intrinsic.String.Build("DELETE GCG_3623_EST_LABOR WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)
F.ODBC.Connection!Con.Execute(V.Local.sSQL)
v.Local.sKey.Set("EST_NO*!*POS")
V.Local.sFieldMap.Set("ROW@!@ROW1*!*EST_NO@!@EST_NO*!*PART@!@WC*!*CODE@!@OP_CODE*!*DESCRIPTION@!@DESCRIPTION*!*STDCOST@!@STD_COST*!*SHOWCOST@!@STD_RATE*!*QTY@!@STD_RUN*!*CREWSIZE@!@CREW*!*SETUP@!@SETUP*!*POS@!@POS*!*FORMULAQ@!@FORMULAR*!*FORMULAM@!@FORMULAS")
f.Data.DataView.ToDataTable("FullTable","LaborBottom","LaborSave",True)
f.Data.DataTable.SaveToDB("LaborSave","Con","GCG_3623_EST_LABOR",v.Local.sKey,256,v.Local.sFieldMap)
f.Data.DataTable.Close("LaborSave")

'Now we are going to save Pricing
f.Data.DataTable.SetValue("Pricing",-1,"Est_No",v.Screen.F_Label_Est!txtEstimate.Text)
F.Intrinsic.String.Build("DELETE GCG_3623_EST_PRICE WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)
F.ODBC.Connection!Con.Execute(V.Local.sSQL)
v.Local.sKey.Set("EST_NO*!*QUANTITY")
V.Local.sFieldMap.Set("EST_NO@!@EST_NO*!*DIRECT@!@DIRECT_COST*!*UNITCOST@!@UNIT_COST*!*MATERIAL@!@MAT_COST*!*OUTSIDE@!@OUT_COST*!*LABOR@!@LABOR_COST*!*LABORHRS@!@LABOR_HRS*!*OVERHEAD@!@OH_COST*!*TOTALCOST@!@TOTAL_COST*!*QUANTITY@!@QTY*!*TOTAL@!@TOTAL_PRICE*!*MARKUP@!@MARKUP*!*MARGIND@!@MARGINA*!*MARGINP@!@MARGINP*!*ROUTER@!@FINISH_PART*!*UNITPRICE@!@UNIT_PRICE*!*FORMULA@!@FORMULA")
f.Data.DataTable.SaveToDB("Pricing","Con","GCG_3623_EST_PRICE",v.Local.sKey,256,v.Local.sFieldMap)

'Now we are going to save the Summary
F.Intrinsic.String.Build("DELETE GCG_3623_EST_SUM WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)
F.ODBC.Connection!Con.Execute(V.Local.sSQL)
v.Local.sKey.Set("EST_NO*!*POS")
V.Local.sFieldMap.Set("EST_NO@!@EST_NO*!*SEQ@!@SEQ*!*LMO@!@LMO*!*PART@!@PART*!*REV@!@REV*!*LOC@!@LOC*!*CODE@!@OPERATION1*!*SETUP@!@SETUP*!*QTY@!@RUNTIME*!*COST@!@RATE*!*FREQ@!@FREQ*!*DESCRIPTION@!@DESCRIPTION*!*UM@!@UM*!*TOTALCOST@!@TOTAL_COST*!*DIRCOST@!@DIRECT_COST*!*OHCOST@!@OH_COST*!*LBRHRS@!@LABOR_HRS*!*MINCOST@!@MIN_COST*!*POS@!@POS*!*ROUTER@!@FINISH_PART*!*COMMENTS@!@COMMENTS")
f.Intrinsic.Control.If(v.DataTable.SummarySave.Exists,=,True)
	f.Data.DataTable.Close("SummarySave")
f.Intrinsic.Control.EndIf
f.Data.DataView.ToDataTable("FullTable","Summary","SummarySave",True)
'f.Data.DataTable.SaveToDB("FullTable","Con","GCG_3623_EST_SUM",v.Local.sKey,1,v.Local.sFieldMap)
f.Data.DataTable.SaveToDB("SummarySave","Con","GCG_3623_EST_SUM",v.Local.sKey,256,v.Local.sFieldMap)
f.Data.DataTable.Close("SummarySave")

'We are going to refresh the previous estimates grid
f.Intrinsic.Control.If(v.DataTable.PrevTemp.Exists,=,True)
	f.Data.DataTable.Close("PrevTemp")
	f.Intrinsic.Control.DoEvents
f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Try
	f.Data.DataTable.Close("PrevTemp")
f.Intrinsic.Control.Catch

f.Intrinsic.Control.EndTry

f.Intrinsic.Control.If(v.DataTable.PrevEst.Exists,=,True)
	F.Data.DataView.Close("PrevEst", "PrevEstView")
	f.Data.DataTable.Close("PrevEst")
	
	'#3mod	
	F.Data.DataTable.CreateFromSQL("PrevEst","Con","SELECT EST_NO, RTRIM(CUSTOMER) AS CUSTOMER,RTRIM(FINISH_PART) AS FINISH_PART, LBL_WIDTH, LBL_DEPTH, NUM_COLORS, RTRIM(CREATED_BY) AS CREATED_BY, EST_DATE, RTRIM(H_SALES_REP) AS H_SALES_REP, QUOTE_NO, RTRIM(LTRIM(FOR_MATL)) as FOR_MATL, HACRPRESS, ROLLS, FANFOLD, SHEETS, RTRIM(LTRIM(PRESS_WC)) as PRESS_WC FROM GCG_3623_EST WHERE SAVED = 1",True)
	F.Data.DataTable.AddExpressionColumn("PrevEst", "FINISHING", "String", "IIF([ROLLS]='TRUE', 'Rolls', IIF([FANFOLD]='TRUE', 'Fanfold', IIF([SHEETS]='TRUE', 'Sheets', '')))")
'	f.Data.DataTable.CreateFromSQL("PrevEst","Con","SELECT EST_NO, RTRIM(CUSTOMER) AS CUSTOMER,RTRIM(FINISH_PART) AS FINISH_PART, LBL_WIDTH, LBL_DEPTH, NUM_COLORS, RTRIM(CREATED_BY) AS CREATED_BY, EST_DATE, RTRIM(H_SALES_REP) AS H_SALES_REP, QUOTE_NO, HACRPRESS,  FROM GCG_3623_EST WHERE SAVED = 1",True)
	f.Data.DataView.Create("PrevEst","PrevEstView",22,"ISNULL(H_SALES_REP,'') <> 'Archived'","EST_NO DESC, CUSTOMER ASC")
	Gui.F_Label_Est.gsfgHPrevEst.AddGridviewFromDataview("GridPrevEst","PrevEst","PrevEstView")
	Gui.F_Label_Est.gsfgHPrevEst.MainView("GridPrevEst")
	F.Intrinsic.Control.CallSub(PrevEstProperties)
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.DoEvents

Gui.F_Label_Est..Enabled(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Save_Est_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Save_Est.End

Program.Sub.Prev_Click.Start
F.Intrinsic.Control.SetErrorHandler("Prev_Click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.sPos.Declare(String)
v.Local.sRet.Declare(String)
v.Local.sSQL.Declare(String)

f.Intrinsic.Control.SelectCase(v.Args.ControlName)
	'Refresh button
	f.Intrinsic.Control.Case("CMDPEFILTER")
		F.Intrinsic.Control.CallSub(prev_filter)
		
	'Grid Click
	f.Intrinsic.Control.Case("GSFGHPREVEST")
		Gui.F_Label_Est.gsfgHPrevEst.GetSelectedRows("GridPrevEst",v.Local.sPos)
		Gui.F_Label_Est.gsfgHPrevEst.GetCellValueByColumnName("GridPrevEst","Est_No",v.Local.sPos.Long,v.Local.sRet)
		'getting notes to display in selected estimate # text box
		F.Intrinsic.String.Build("Select H_Est_Notes From GCG_3623_Est Where Est_No = '{0}'",V.Local.sRet,V.Local.sSQL)
		F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstText",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstText.EOF,=,False)
			Gui.F_Label_Est.txtSelectedEstNote.Text(V.ODBC.Con!rstText.FieldValTrim!H_Est_Notes)
		F.Intrinsic.Control.Else
			Gui.F_Label_Est.txtSelectedEstNote.Text("")
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstText.Close

	'Previous filter clear button
	f.Intrinsic.Control.Case("CMDPECLEAR")
		gui.F_Label_Est.txtPEEstNum.Text("")
		gui.F_Label_Est.txtPECust.Text("")
		gui.F_Label_Est.txtPEFromWidth.Text("")
		gui.F_Label_Est.txtPEToWidth.Text("")
		gui.F_Label_Est.txtPEFromLength.Text("")
		gui.F_Label_Est.txtPEToLength.Text("")
		Gui.F_Label_Est.txtHistFinPart.Text("")
		gui.F_Label_Est.txtPEColors.Text("")
		gui.F_Label_Est.txtPEEst.Text("")
		Gui.F_Label_Est.dtpPEFromDate.Value(v.Ambient.Date)
		Gui.F_Label_Est.dtpPEToDate.Value(v.Ambient.Date)
		
		f.Data.DataView.SetFilter("PrevEst","PrevEstView","")
		
	'Show Archived was clicked
	f.Intrinsic.Control.Case("CHKPREVARCH")
		'we need to change the Previous Estimate view filter
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!chkPrevArch.Value,=,0)
			'Do not show Archived
			f.Data.DataView.SetFilter("PrevEst","PrevEstView","ISNULL(H_SALES_REP,'') <> 'Archived'")
		f.Intrinsic.Control.Else
			'Show Archived
			f.Data.DataView.SetFilter("PrevEst","PrevEstView","")
		f.Intrinsic.Control.EndIf
		
	'Refresh
	f.Intrinsic.Control.Case("CMDPREVREFRESH")
		f.Intrinsic.Control.If(v.DataTable.PrevTemp.Exists,=,True)
			f.Data.DataTable.Close("PrevTemp")
		f.Intrinsic.Control.EndIf
						
		Gui.F_Label_Est.gsfgHPrevEst.SuspendLayout
		
		Gui.F_Label_Est.gsfgHPrevEst.Visible(False)
				
		f.Intrinsic.Control.If(v.DataTable.PrevEst.Exists,=,True)
			F.Data.DataView.Close("PrevEst", "PrevEstView")
			f.Data.DataTable.Close("PrevEst")
			
			'#3mod Columns fix 'FEQ modded 1/28/2018. For quicker refresh rates
			F.Data.DataTable.CreateFromSQL("PrevEst","Con","SELECT EST_NO, RTRIM(CUSTOMER) AS CUSTOMER,RTRIM(FINISH_PART) AS FINISH_PART, LBL_WIDTH, LBL_DEPTH, NUM_COLORS, RTRIM(CREATED_BY) AS CREATED_BY, EST_DATE, RTRIM(H_SALES_REP) AS H_SALES_REP, QUOTE_NO, RTRIM(LTRIM(FOR_MATL)) as FOR_MATL, HACRPRESS, ROLLS, FANFOLD, SHEETS, RTRIM(LTRIM(PRESS_WC)) as PRESS_WC FROM GCG_3623_EST WHERE SAVED = 1",True)
			F.Data.DataTable.AddExpressionColumn("PrevEst", "FINISHING", "String", "IIF([ROLLS]='TRUE', 'Rolls', IIF([FANFOLD]='TRUE', 'Fanfold', IIF([SHEETS]='TRUE', 'Sheets', '')))")
		'	f.Data.DataTable.CreateFromSQL("PrevEst","Con","SELECT EST_NO, RTRIM(CUSTOMER) AS CUSTOMER,RTRIM(FINISH_PART) AS FINISH_PART, LBL_WIDTH, LBL_DEPTH, NUM_COLORS, RTRIM(CREATED_BY) AS CREATED_BY, EST_DATE, RTRIM(H_SALES_REP) AS H_SALES_REP, QUOTE_NO, HACRPRESS,  FROM GCG_3623_EST WHERE SAVED = 1",True)
			f.Data.DataView.Create("PrevEst","PrevEstView",22,"ISNULL(H_SALES_REP,'') <> 'Archived'","EST_NO DESC, CUSTOMER ASC")
			Gui.F_Label_Est.gsfgHPrevEst.AddGridviewFromDataview("GridPrevEst","PrevEst","PrevEstView")
			Gui.F_Label_Est.gsfgHPrevEst.MainView("GridPrevEst")
			F.Intrinsic.Control.CallSub(PrevEstProperties)
			
		f.Intrinsic.Control.EndIf
		
		Gui.F_Label_Est.gsfgHPrevEst.Visible(True)
		
		Gui.F_Label_Est.gsfgHPrevEst.ResumeLayout
				
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Prev_Click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Prev_Click.End

Program.Sub.Selection.Start
F.Intrinsic.Control.SetErrorHandler("Selection_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iWidth.Declare(Long)
V.Local.sTitle.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sLoc.Declare(String)
V.Local.iCount.Declare(String)
V.Local.sUser.Declare(String)
V.Local.sCtlName.Declare(String)
V.Local.sEstimate.Declare(String)

Gui.F_New_Open..Visible(False)

'Clear fields out
f.Intrinsic.Control.CallSub(cleargroup1)
f.Intrinsic.Control.CallSub(cleargroup2)
'Clear Die ddl
Gui.F_Label_Est.ddlMLabelShape.Text("")
Gui.F_Label_Est.ddlMUM.Text("")
Gui.F_Label_Est.lvwHLocation.ClearItems
'make the list view have checkboxes
Gui.F_Label_Est.lvwHLocation.Checkboxes(true)
'get all locations and populate to the lvw
f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLoc","SELECT LOCATION, LOCATION_DESC FROM V_LOCATIONS ORDER BY LOCATION ASC")
f.Intrinsic.Control.DoUntil(v.ODBC.Con!rstLoc.EOF,=,True)
	Gui.F_Label_Est.lvwHLocation.AddListItem(v.ODBC.Con!rstLoc.FieldVal!LOCATION,V.ODBC.Con!rstLoc.FieldVal!LOCATION)
	Gui.F_Label_Est.lvwHLocation.SetListItemSubItemText(v.ODBC.Con!rstLoc.FieldVal!LOCATION,1,v.ODBC.Con!rstLoc.FieldVal!LOCATION_DESC)
	F.ODBC.Con!rstLoc.MoveNext
f.Intrinsic.Control.Loop
f.ODBC.Con!rstLoc.Close
Gui.F_Label_Est.txtEstimate.Text("")

f.Intrinsic.Control.If(v.Args.ControlName,=,"CMDNEW")
	'get the next est no and add it to the table so no one else can use it.
	F.ODBC.Connection!Con.GetID("GCG_3623_EST","EST_NO",TRUE,V.Local.sRet)
	F.Intrinsic.String.Build("INSERT INTO GCG_3623_EST (EST_NO, CREATED_BY) VALUES ('{0}', '{1}') ",V.Local.sRet,V.Caller.User.Trim,V.Local.sSQL)
	F.ODBC.Connection!Con.Execute(V.Local.sSQL)
	'Create a lock into the lock table for this estimate
	F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Local.sRet.Trim,"LOCK","Lock")
	'set the new estimate no
	Gui.F_Label_Est.txtEstimate.Text(V.Local.sRet)

F.Intrinsic.Control.Else
	v.Global.bArchived.Set(True)
	f.Intrinsic.Control.CallSub(Archived)
	
f.Intrinsic.Control.EndIf

Gui.F_Label_Est.ddlMView.ClearItems
Gui.F_Label_Est.ddlMView.AddItem("All")
F.Intrinsic.Control.BlockEvents
Gui.F_Label_Est.ddlMView.Text("All")
'F.Intrinsic.Control.UnBlockEvents
Gui.F_Label_Est.dropdownlistLHRQ.AddItem("ALL")
'F.Intrinsic.Control.BlockEvents
Gui.F_Label_Est.dropdownlistLHRQ.Text("ALL")
F.Intrinsic.Control.UnBlockEvents
'clear out the job jacket
Gui.F_Label_Est.chkRolls.Value(0)
Gui.F_Label_Est.chkFanfold.Value(0)
Gui.F_Label_Est.chkSheets.Value(0)
Gui.F_Label_Est.txtRCoreSize.Text("")
Gui.F_Label_Est.txtRLblRoll.Text("")
Gui.F_Label_Est.txtRRollBox.Text("")
Gui.F_Label_Est.txtRRollOD.Text("")
Gui.F_Label_Est.txtRODAct.Text("")
Gui.F_Label_Est.txtFLblFold.Text("")
Gui.F_Label_Est.txtFLblStack.Text("")
Gui.F_Label_Est.txtFStackBox.Text("")
Gui.F_Label_Est.txtSLblSheet.Text("")
Gui.F_Label_Est.txtSSheetStack.Text("")
Gui.F_Label_Est.txtSStackBox.Text("")
Gui.F_Label_Est.txtLbsCart.Text("")
Gui.F_Label_Est.ddlRWindDir.Text("OUT")
gui.F_Label_Est.txtPOver.Text("10")
gui.F_Label_Est.txtPUnder.Text("10")
Gui.F_Label_Est.chkOPinfeed.Value(0)
Gui.F_Label_Est.chkOPerfed.Value(0)
Gui.F_Label_Est.chkOAutoApplied.Value(0)
Gui.F_Label_Est.chkOAirEject.Value(0)
Gui.F_Label_Est.chkOLabeling.Value(0)
Gui.F_Label_Est.chkORibbons.Value(0)
Gui.F_Label_Est.chkORibbonSource.Value(0)
Gui.F_Label_Est.chkOMisc.Value(0)
Gui.F_Label_Est.chkOVacDie.Value(0)
Gui.F_Label_Est.chkOCSM.Value(0)
Gui.F_Label_Est.chkOSampleOF.Value(0)
Gui.F_Label_Est.chkOBlanket.Value(0)
Gui.F_Label_Est.chkPCoreLabels.Value(0)
Gui.F_Label_Est.chkPInnerBoxes.Value(0)
Gui.F_Label_Est.chkPShrinkWrap.Value(0)
Gui.F_Label_Est.chkPPackLabels.Value(0)
Gui.F_Label_Est.chkPPalletLabel.Value(0)
Gui.F_Label_Est.chkPGay.Value(0)
Gui.F_Label_Est.chkPChip.Value(0)
Gui.F_Label_Est.chkPPlasticC.Value(0)
Gui.F_Label_Est.chkPCorePlug.Value(0)
Gui.F_Label_Est.txtOFaceCut.Text("")
Gui.F_Label_Est.txtOBackCut.Text("")
Gui.F_Label_Est.txtOShape.Text("")
Gui.F_Label_Est.txtOColorFront.Text("")
Gui.F_Label_Est.txtOColorBack.Text("")
Gui.F_Label_Est.txtOInkType.Text("")
Gui.F_Label_Est.txtOInkCoverage.Text("")
Gui.F_Label_Est.txtOVarnType.Text("")
Gui.F_Label_Est.txtOVarnCoverage.Text("")
Gui.F_Label_Est.txtOVarPrint.Text("")
Gui.F_Label_Est.txtOExtraColor.Text("")
Gui.F_Label_Est.txtOTotalPlates.Text("")
Gui.F_Label_Est.chkOFourColor.Value(0)
Gui.F_Label_Est.chkODeadened.Value(0)
Gui.F_Label_Est.txtOLbsMLabel.Text("")
Gui.F_Label_Est.txtOLbsCarton.Text("")
Gui.F_Label_Est.txtOGapAcross.Text("")
Gui.F_Label_Est.txtOGapDown.Text("")
gui.F_Label_Est.txtPLabelsShrink.Text("")

'set Created by
F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCreateBy.Caption,":",V.Local.sUser)
V.Local.sUser.RedimPreserve(0,1)
F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),V.Caller.User,V.Local.sUser)
Gui.F_Label_Est.lblCreateBy.Caption(V.Local.sUser)
'set Changed by
F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblLstCng.Caption,":",V.Local.sUser)
V.Local.sUser.RedimPreserve(0,1)
F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),"",V.Local.sUser)
Gui.F_Label_Est.lblLstCng.Caption(V.Local.sUser)
F.Intrinsic.Control.CallSub(Run_quantities)
'set copied From
F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCopyFrom.Caption,":",V.Local.sEstimate)
V.Local.sEstimate.RedimPreserve(0,1)
F.Intrinsic.String.Build("{0}: {1}",V.Local.sEstimate(0),"",V.Local.sEstimate)
Gui.F_Label_Est.lblCopyFrom.Caption(V.Local.sEstimate)
'set the header tab back to focus
Gui.F_Label_Est.tabx1.SetTab(0)
V.Global.bRouter.Set(False)
V.Global.bSaved.Set(True)

V.Global.bLoadMode.Set(False)

f.Intrinsic.UI.CloseWaitDialog
Gui.F_Label_Est..AlwaysOnTop(True)
Gui.F_Label_Est..Show
Gui.F_Label_Est..AlwaysOnTop(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Selection_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Selection.End

Program.Sub.LoadEst.Start
F.Intrinsic.Control.SetErrorHandler("LoadEst_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRout.Declare(String)
V.Local.sTemp.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iCount.Declare(Long)
V.Local.iPlace.Declare(Long)
V.Local.sUser.Declare(String)
V.Local.sLoc.Declare(String)
V.Local.sCopy.Declare(String)
V.Local.fLaborHour.Declare(Float)
V.Local.fTLaborHour.Declare(Float)
V.Local.sEstimate.Declare(String)
v.Local.iRows.Declare(Long)
V.Local.iUB.Declare(Long, 0)

V.Local.sRet.Set(V.Args.EstNo) 
V.Local.sCopy.Set(V.Args.Copy)

'F.Intrinsic.Control.BlockEvents

'if copy is blank then we are loading a new estimate so unlock and lock estimate
F.Intrinsic.Control.If(V.Local.sCopy,<>,"Copy")
	'Unlock the previous estimate that was on the screen
	F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Screen.F_Label_Est!txtEstimate.Text,"LOCK","Unlock")
	'Lock the new estimate that is being loaded
	F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Local.sRet.Trim,"LOCK","Lock")
	'set the est no
	Gui.F_Label_Est.txtEstimate.Text(V.Local.sRet.Trim)
f.Intrinsic.Control.Else
	'we are copying 
	'we need to check and see if the estimate we are on is blank
	f.Intrinsic.Control.If(v.Screen.F_Label_Est!txtEstimate.Text,<>,"")
		'we need to check and see if the estimate we are on has been saved
		f.Intrinsic.String.Build("SELECT SAVED FROM GCG_3623_EST WHERE EST_NO = '{0}' ",V.Screen.F_Label_Est!txtEstimate.Text,v.Local.sSQL)
		f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstEstCheck",v.Local.sSQL)
		f.Intrinsic.Control.If(v.ODBC.Con!rstEstCheck.EOF,=,False)
			f.Intrinsic.Control.If(v.ODBC.Con!rstEstCheck.FieldVal!SAVED,=,True)
				'estimate has been saved before so we need to create a new estimate number 
				'Unlock the previous estimate that was on the screen
				F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Screen.F_Label_Est!txtEstimate.Text,"LOCK","Unlock")
				F.ODBC.Connection!Con.GetID("GCG_3623_EST","EST_NO",TRUE,V.Local.iRows)
				F.Intrinsic.String.Build("INSERT INTO GCG_3623_EST (EST_NO, CREATED_BY) VALUES ('{0}', '{1}') ",V.Local.iRows,V.Caller.User.Trim,V.Local.sSQL)
				F.ODBC.Connection!Con.Execute(V.Local.sSQL)
				'Create a lock into the lock table for this estimate
				F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Local.iRows,"LOCK","Lock")
				Gui.F_Label_Est.txtEstimate.Text(V.Local.iRows)
			f.Intrinsic.Control.EndIf				
		f.Intrinsic.Control.EndIf
		f.ODBC.Con!rstEstCheck.Close
	f.Intrinsic.Control.Else
		'we have blank estimate so create a new estimate to put this on
		F.ODBC.Connection!Con.GetID("GCG_3623_EST","EST_NO",TRUE,V.Local.iRows)
		F.Intrinsic.String.Build("INSERT INTO GCG_3623_EST (EST_NO, CREATED_BY) VALUES ('{0}', '{1}') ",V.Local.iRows,V.Caller.User.Trim,V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		'Create a lock into the lock table for this estimate
		F.Intrinsic.Control.CallSub(Lock,"ESTNO",V.Local.iRows,"LOCK","Lock")
		Gui.F_Label_Est.txtEstimate.Text(V.Local.iRows)
	f.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'clear out the job jacket
Gui.F_Label_Est.chkRolls.Value(0)
Gui.F_Label_Est.chkFanfold.Value(0)
Gui.F_Label_Est.chkSheets.Value(0)
Gui.F_Label_Est.txtRCoreSize.Text("")
Gui.F_Label_Est.txtRLblRoll.Text("")
Gui.F_Label_Est.txtRRollBox.Text("")
Gui.F_Label_Est.txtRRollOD.Text("")
Gui.F_Label_Est.txtRODAct.Text("")
Gui.F_Label_Est.txtFLblFold.Text("")
Gui.F_Label_Est.txtFLblStack.Text("")
Gui.F_Label_Est.txtFStackBox.Text("")
Gui.F_Label_Est.txtSLblSheet.Text("")
Gui.F_Label_Est.txtSSheetStack.Text("")
Gui.F_Label_Est.txtSStackBox.Text("")
Gui.F_Label_Est.txtLbsCart.Text("")
Gui.F_Label_Est.ddlRWindDir.Text("OUT")
gui.F_Label_Est.txtPOver.Text("10")
gui.F_Label_Est.txtPUnder.Text("10")
Gui.F_Label_Est.chkOPinfeed.Value(0)
Gui.F_Label_Est.chkOPerfed.Value(0)
Gui.F_Label_Est.chkOAutoApplied.Value(0)
Gui.F_Label_Est.chkOAirEject.Value(0)
Gui.F_Label_Est.chkOLabeling.Value(0)
Gui.F_Label_Est.chkORibbons.Value(0)
Gui.F_Label_Est.chkORibbonSource.Value(0)
Gui.F_Label_Est.chkOMisc.Value(0)
Gui.F_Label_Est.chkOVacDie.Value(0)
Gui.F_Label_Est.chkOCSM.Value(0)
Gui.F_Label_Est.chkOSampleOF.Value(0)
Gui.F_Label_Est.chkOBlanket.Value(0)
Gui.F_Label_Est.chkPCoreLabels.Value(0)
Gui.F_Label_Est.chkPInnerBoxes.Value(0)
Gui.F_Label_Est.chkPShrinkWrap.Value(0)
Gui.F_Label_Est.chkPPackLabels.Value(0)
Gui.F_Label_Est.chkPPalletLabel.Value(0)
Gui.F_Label_Est.chkPGay.Value(0)
Gui.F_Label_Est.chkPChip.Value(0)
Gui.F_Label_Est.chkPPlasticC.Value(0)
Gui.F_Label_Est.chkPCorePlug.Value(0)
Gui.F_Label_Est.txtOFaceCut.Text("")
Gui.F_Label_Est.txtOBackCut.Text("")
Gui.F_Label_Est.txtOShape.Text("")
Gui.F_Label_Est.txtOColorFront.Text("")
Gui.F_Label_Est.txtOColorBack.Text("")
Gui.F_Label_Est.txtOInkType.Text("")
Gui.F_Label_Est.txtOInkCoverage.Text("")
Gui.F_Label_Est.txtOVarnType.Text("")
Gui.F_Label_Est.txtOVarnCoverage.Text("")
Gui.F_Label_Est.txtOVarPrint.Text("")
Gui.F_Label_Est.txtOExtraColor.Text("")
Gui.F_Label_Est.txtOTotalPlates.Text("")
Gui.F_Label_Est.chkOFourColor.Value(0)
Gui.F_Label_Est.chkODeadened.Value(0)
Gui.F_Label_Est.txtOLbsMLabel.Text("")
Gui.F_Label_Est.txtOLbsCarton.Text("")
Gui.F_Label_Est.txtOGapAcross.Text("")
Gui.F_Label_Est.txtOGapDown.Text("")
gui.F_Label_Est.txtPLabelsShrink.Text("")
Gui.F_Label_Est.chkPrevArch.Value(0)
Gui.F_Label_Est.txtQuoteNo.Text("")

'Clear all fields to blank so we can repopulate
f.Intrinsic.Control.CallSub(ClearGroup2)
'setting Charge Type and Amount Type to default values
Gui.F_Label_Est.ddlPType.Text("Upcharge")
Gui.F_Label_Est.ddlPAmtType.Text("Percent")
'clear the customer fields
f.Intrinsic.Control.CallSub(cleargroup1)
Gui.F_Label_Est.lvwHLocation.ClearItems
'Load button was pressed so load in the selected estimate

F.Intrinsic.String.Build("SELECT * FROM GCG_3623_EST WHERE EST_NO = '{0}' ",V.Local.sRet,V.Local.sSQL)
F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstHead",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstHead.EOF,=,False)
	'select all locations and populate them to the list
'	'make the lvw have checkboxes
	Gui.F_Label_Est.lvwHLocation.Checkboxes(true)
	f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLoc","SELECT LOCATION, LOCATION_DESC FROM V_LOCATIONS ORDER BY LOCATION ASC")
	f.Intrinsic.Control.DoUntil(v.ODBC.Con!rstLoc.EOF,=,True)
		Gui.F_Label_Est.lvwHLocation.AddListItem(v.ODBC.Con!rstLoc.FieldValTrim!LOCATION,V.ODBC.Con!rstLoc.FieldValTrim!LOCATION)
		Gui.F_Label_Est.lvwHLocation.SetListItemSubItemText(v.ODBC.Con!rstLoc.FieldValTrim!LOCATION,1,v.ODBC.Con!rstLoc.FieldValTrim!LOCATION_DESC)
		F.ODBC.Con!rstLoc.MoveNext
	f.Intrinsic.Control.Loop
	f.ODBC.Con!rstLoc.Close
	'reset sloc
	V.Local.sLoc.Redim(0,0)
	V.Local.sLoc.Set("")
	'Get locations for this estimate
	F.Intrinsic.String.Build("SELECT LOCATION1 FROM GCG_3623_EST_LOC WHERE EST_NO = '{0}' ORDER BY LOCATION1 ASC",V.Local.sRet,V.Local.sSQL)
	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLocCheck",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstLocCheck.EOF,=,False)
		F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sLoc)
		F.Intrinsic.String.Replace(V.Local.sLoc,"*!*","",V.Local.sLoc)
		F.Intrinsic.String.Split(V.Local.sLoc,"#$#",V.Local.sLoc)
		'cycle through all of the locations and set them
		F.Intrinsic.Control.For(V.Local.iCount,V.Local.sLoc.LBound,V.Local.sLoc.UBound,1)
			'Set the lvw check box for these keys
			Gui.F_Label_Est.lvwHLocation.ListItemCheck(V.Local.sLoc(v.Local.iCount).Trim,True)
		F.Intrinsic.Control.Next(V.Local.iCount)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstLocCheck.Close
	Gui.F_Label_Est.txtCustomer.Text(V.ODBC.Con!rstHead.FieldValTrim!CUSTOMER)
	Gui.F_Label_Est.txtContact.Text(V.ODBC.Con!rstHead.FieldValTrim!CONTACT)
	Gui.F_Label_Est.mltCustNotes.Text(V.ODBC.Con!rstHead.FieldValTrim!CUSTOMER_NOTES)
	Gui.F_Label_Est.txtCustName.Text(V.ODBC.con!rstHead.FieldValTrim!NAME_CUSTOMER)
	Gui.F_Label_Est.txtCustBG.Text(V.ODBC.con!rstHead.FieldValTrim!GROUP_CUST)
	Gui.F_Label_Est.txtCustAddress.Text(V.ODBC.con!rstHead.FieldValTrim!ADDRESS)
	Gui.F_Label_Est.txtCustCity.Text(V.ODBC.con!rstHead.FieldValTrim!CITY)
	Gui.F_Label_Est.txtCustState.Text(V.ODBC.con!rstHead.FieldValTrim!STATE1)
	Gui.F_Label_Est.txtCustZip.Text(V.ODBC.con!rstHead.FieldValTrim!ZIP)
	Gui.F_Label_Est.txtCustCountry.Text(V.ODBC.con!rstHead.FieldValTrim!COUNTRY)
	Gui.F_Label_Est.txtCustPhone.Text(V.ODBC.con!rstHead.FieldValTrim!PHONE)
	Gui.F_Label_Est.txtCustFax.Text(V.ODBC.con!rstHead.FieldValTrim!FAX)
	Gui.F_Label_Est.txtCustEmail.Text(V.ODBC.con!rstHead.FieldValTrim!EMAIL)
	'Gui.F_Label_Est.txtHSalesRep.Text(V.ODBC.Con!rstHead.FieldValTrim!H_SALES_REP)
	Gui.F_Label_Est.txtHArea.Text(V.ODBC.Con!rstHead.FieldValTrim!H_AREA)
	Gui.F_Label_Est.txtHBranch.Text(V.ODBC.Con!rstHead.FieldValTrim!H_BRANCH)
	Gui.F_Label_Est.txtHShipVia.Text(V.ODBC.Con!rstHead.FieldValTrim!H_SHIP_VIA)
	Gui.F_Label_Est.txtHCarrier.Text(V.ODBC.Con!rstHead.FieldValTrim!H_CARRIER)
	Gui.F_Label_Est.ddlHProcessGrp.Text(V.ODBC.Con!rstHead.FieldValTrim!H_PROCESS_GRP)
	Gui.F_Label_Est.txtHFOB.Text(V.ODBC.Con!rstHead.FieldValTrim!H_FOB)
	Gui.F_Label_Est.txtHTerms.Text(V.ODBC.Con!rstHead.FieldValTrim!H_TERMS)
	Gui.F_Label_Est.txtHProject.Text(V.ODBC.Con!rstHead.FieldValTrim!H_PROJECT)
	Gui.F_Label_Est.txtHTrdFreight.Text(V.ODBC.Con!rstHead.FieldValTrim!H_THIRD_FREIGHT)
	Gui.F_Label_Est.txtHFreightZone.Text(V.ODBC.Con!rstHead.FieldValTrim!H_FREIGHT_ZONE)
	Gui.F_Label_Est.mltHEstNote.Text(V.ODBC.Con!rstHead.FieldValTrim!H_EST_NOTES)
	Gui.F_Label_Est.txtHlblWidth.Text(V.ODBC.Con!rstHead.FieldValTrim!LBL_WIDTH)
	Gui.F_Label_Est.txtHlblDepth.Text(V.ODBC.Con!rstHead.FieldValTrim!LBL_DEPTH)
	Gui.F_Label_Est.txtHLinerWidth.Text(V.ODBC.Con!rstHead.FieldValTrim!LINER_WIDTH)
	Gui.F_Label_Est.txtHRepeatLen.Text(V.ODBC.Con!rstHead.FieldValTrim!REPEAT_LENGTH)
	Gui.F_Label_Est.txtHFinAcross.Text(V.ODBC.Con!rstHead.FieldValTrim!FIN_LBL_ACROSS)
	F.Intrinsic.Control.BlockEvents
	Gui.F_Label_Est.txtHAcrDie.Text(V.ODBC.Con!rstHead.FieldValTrim!HACRDIE)
	Gui.F_Label_Est.txtHAcrPress.Text(V.ODBC.Con!rstHead.FieldValTrim!HACRPRESS)
	Gui.F_Label_Est.txtFinishPart.Text(V.ODBC.Con!rstHead.FieldValTrim!FINISH_PART)
	F.Intrinsic.Control.UnBlockEvents
	V.Local.sTemp.Redim(0,2)
	F.Intrinsic.String.RPad(V.ODBC.Con!rstHead.FieldValTrim!ROUTER_NO, " ", 20, V.Local.sTemp(0))
	F.Intrinsic.Control.If(V.Local.sTemp(0).Trim, <>, "")
		'Check to see if router exists in database
		F.Intrinsic.String.Build("Select Top 1 Router from V_ROUTER_HEADER where ROUTER = '{0}'", V.Local.sTemp(0).Trim, V.Local.sSQL)
		F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRout)
		F.Intrinsic.Control.If(V.Local.sRout.Trim, <>, "")
			V.Global.bRouter.Set(True)
		F.Intrinsic.Control.Else
			V.Global.bRouter.Set(False)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Left(V.Local.sTemp(0), 17, V.Local.sTemp(1))
		Gui.F_Label_Est.txtFinishRouter.Text(V.Local.sTemp(1))
		F.Intrinsic.String.Right(V.Local.sTemp(0), 3, V.Local.sTemp(2))
		Gui.F_Label_Est.txtFinishRev.Text(V.Local.sTemp(2))

	F.Intrinsic.Control.Else
'		Gui.F_Label_Est.txtFinishRouter.Text(V.ODBC.Con!rstHead.FieldValTrim!FINISH_PART)
		Gui.F_Label_Est.txtFinishRouter.Text("")
		Gui.F_Label_Est.txtFinishRev.Text("")
		
	F.Intrinsic.Control.EndIf
	
'	Gui.F_Label_Est.txtFinishRouter.Text(V.Local.sTemp(1))
'	F.Intrinsic.String.Right(V.Local.sTemp(0), 3, V.Local.sTemp(2))
'	Gui.F_Label_Est.txtFinishRev.Text(V.Local.sTemp(2))
	Gui.F_Label_Est.txtFinishLoc.Text(V.ODBC.Con!rstHead.FieldValTrim!FINISH_LOC)
	Gui.F_Label_Est.ddlHPL.Text(V.ODBC.Con!rstHead.FieldValTrim!FINISH_PL)
	Gui.F_Label_Est.txtdesc.Text(V.ODBC.Con!rstHead.FieldValTrim!FINISH_DESC)
	Gui.F_Label_Est.txtHUM.Text(V.ODBC.Con!rstHead.FieldValTrim!FINISH_UM)
	Gui.F_Label_Est.dtpLastSaved.Value(V.ODBC.Con!rstHead.FieldVal!H_DUE_DATE)
'	Gui.F_Label_Est.dtpEstDate.Value(V.ODBC.Con!rstHead.FieldVal!EST_DATE)
	gui.F_Label_Est.txtPDieCharge.Text(V.ODBC.Con!rstHead.FieldVal!DIE_CHARGE)
	gui.F_Label_Est.txtPPlateCharge.Text(V.ODBC.Con!rstHead.FieldVal!PLATE_CHARGE)
	gui.F_Label_Est.txtPProofCharge.Text(V.ODBC.Con!rstHead.FieldVal!PROOF_CHARGE)
	
	Gui.F_Label_Est.txtPTotalPlateC.Text(V.ODBC.Con!rstHead.FieldVal!PTOTALPLATEC)
	Gui.F_Label_Est.txtPPlateChaChar.Text(V.ODBC.Con!rstHead.FieldVal!PPLATECHACHAR)
	Gui.F_Label_Est.txtPTotalColChan.Text(V.ODBC.Con!rstHead.FieldVal!PTOTALCOLCHAN)
	Gui.F_Label_Est.txtPColorChaChar.Text(V.ODBC.Con!rstHead.FieldVal!PCOLORCHACHAR)
	
	gui.F_Label_Est.txtPOver.Text(V.ODBC.Con!rstHead.FieldVal!POVER)
	gui.F_Label_Est.txtPUnder.Text(V.ODBC.Con!rstHead.FieldVal!PUNDER)
	Gui.F_Label_Est.chkOPinfeed.Value(V.ODBC.Con!rstHead.FieldVal!OPINFEED)
	Gui.F_Label_Est.chkOPerfed.Value(V.ODBC.Con!rstHead.FieldVal!OPERFED)
	Gui.F_Label_Est.chkOAutoApplied.Value(V.ODBC.Con!rstHead.FieldVal!OAUTOAPPLIED)
	Gui.F_Label_Est.chkOAirEject.Value(V.ODBC.Con!rstHead.FieldVal!OAIREJECT)
	Gui.F_Label_Est.chkOLabeling.Value(V.ODBC.Con!rstHead.FieldVal!OLABELING)
	Gui.F_Label_Est.chkORibbons.Value(V.ODBC.Con!rstHead.FieldVal!ORIBONS)
	Gui.F_Label_Est.chkORibbonSource.Value(V.ODBC.Con!rstHead.FieldVal!ORIBONSOURCE)
	Gui.F_Label_Est.chkOMisc.Value(V.ODBC.Con!rstHead.FieldVal!OMISC)
	Gui.F_Label_Est.txtOFaceCut.Text(V.ODBC.Con!rstHead.FieldValTrim!OFACECUT)
	Gui.F_Label_Est.txtOBackCut.Text(V.ODBC.Con!rstHead.FieldValTrim!OBACKCUT)
	Gui.F_Label_Est.txtOShape.Text(V.ODBC.Con!rstHead.FieldValTrim!OSHAPE)
	Gui.F_Label_Est.txtOColorFront.Text(V.ODBC.Con!rstHead.FieldValTrim!OCOLORFRONT)
	Gui.F_Label_Est.txtOColorBack.Text(V.ODBC.Con!rstHead.FieldValTrim!OCOLORBACK)
	Gui.F_Label_Est.txtOInkType.Text(V.ODBC.Con!rstHead.FieldValTrim!OINKTYPE)
	Gui.F_Label_Est.txtOInkCoverage.Text(V.ODBC.Con!rstHead.FieldValTrim!OINKCOVER)
	Gui.F_Label_Est.txtOVarnType.Text(V.ODBC.Con!rstHead.FieldValTrim!OVARNTYPE)
	Gui.F_Label_Est.txtOVarnCoverage.Text(V.ODBC.Con!rstHead.FieldValTrim!OVARNCOVER)
	Gui.F_Label_Est.txtOVarPrint.Text(V.ODBC.Con!rstHead.FieldValTrim!OVARPRINT)
	Gui.F_Label_Est.txtOExtraColor.Text(V.ODBC.Con!rstHead.FieldValTrim!OEXTRACOLOR)
	Gui.F_Label_Est.txtOTotalPlates.Text(V.ODBC.Con!rstHead.FieldValTrim!OTOTPLATES)
'	Gui.F_Label_Est.chkOFourColor.Value(V.ODBC.Con!rstHead.FieldVal!OFOURCOLOR)
	Gui.F_Label_Est.chkOFourColor.Value(V.ODBC.Con!rstHead.FieldVal!H4COLOR)
	Gui.F_Label_Est.chkODeadened.Value(V.ODBC.Con!rstHead.FieldVal!ODEADENED)
	Gui.F_Label_Est.txtOLbsMLabel.Text(V.ODBC.Con!rstHead.FieldValTrim!OLBSMLABEL)
	Gui.F_Label_Est.txtOLbsCarton.Text(V.ODBC.Con!rstHead.FieldValTrim!OLBLCARTON)
	Gui.F_Label_Est.txtOGapAcross.Text(V.ODBC.Con!rstHead.FieldValTrim!GAPACROSS)
	Gui.F_Label_Est.txtOGapDown.Text(V.ODBC.Con!rstHead.FieldValTrim!GAPDOWN)
	
	gui.F_Label_Est.txtPLabelsShrink.Text(V.ODBC.Con!rstHead.FieldValTrim!PLABELSSHRINK)
	
	F.Intrinsic.Control.If(V.ODBC.Con!rstHead.FieldValTrim!CONTRACT_PRICE,=,"True")
		Gui.F_Label_Est.chkHContPricing.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkHContPricing.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!H4COLOR,=,"True")
		Gui.F_Label_Est.chk4Color.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chk4Color.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!HDIGITAL,=,"True")
		Gui.F_Label_Est.chkDigital.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkDigital.Value(0)
	F.Intrinsic.Control.EndIf
	
	'FEQ 11/27/2018 populating checkboxes from the EST table #2 Mod
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!CHKPRECISION,=,"True")
		Gui.F_Label_Est.chkPrecision.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPrecision.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!CHKPRIME,=,"True")
		Gui.F_Label_Est.chkPrime.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPrime.Value(0)
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!OVACDIE,=,"True")
		Gui.F_Label_Est.chkOVacDie.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkOVacDie.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!OCSM,=,"True")
		Gui.F_Label_Est.chkOCSM.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkOCSM.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!OSAMPLEOF,=,"True")
		Gui.F_Label_Est.chkOSampleOF.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkOSampleOF.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!OBLANKET,=,"True")
		Gui.F_Label_Est.chkOBlanket.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkOBlanket.Value(0)
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PCORELABELS,=,"True")
		Gui.F_Label_Est.chkPCoreLabels.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPCoreLabels.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PINNERBOXES,=,"True")
		Gui.F_Label_Est.chkPInnerBoxes.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPInnerBoxes.Value(0)
	F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PSHRINKWRAP,=,"True")
		Gui.F_Label_Est.chkPShrinkWrap.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPShrinkWrap.Value(0)
	F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PPACKLABELS,=,"True")
		Gui.F_Label_Est.chkPPackLabels.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPPackLabels.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PPALLETLABEL,=,"True")
		Gui.F_Label_Est.chkPPalletLabel.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPPalletLabel.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PGAY,=,"True")
		Gui.F_Label_Est.chkPGay.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPGay.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PCHIP,=,"True")
		Gui.F_Label_Est.chkPChip.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPChip.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PPLASTICC,=,"True")
		Gui.F_Label_Est.chkPPlasticC.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPPlasticC.Value(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldVal!PCOREPLUG,=,"True")
		Gui.F_Label_Est.chkPCorePlug.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkPCorePlug.Value(0)
	F.Intrinsic.Control.EndIf

	'if we are copying then we don't want to change the created and changed by labels
	F.Intrinsic.Control.If(V.Local.sCopy,<>,"Copy")
		'#7 Mod
		Gui.F_Label_Est.dtpLastSaved.Value(V.ODBC.Con!rstHead.FieldVal!H_DUE_DATE)
		Gui.F_Label_Est.dtpEstDate.Value(V.ODBC.Con!rstHead.FieldVal!EST_DATE)
		'set Created by
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCreateBy.Caption,":",V.Local.sUser)
		V.Local.sUser.RedimPreserve(0,1)
		F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),V.ODBC.Con!rstHead.FieldValTrim!CREATED_BY,V.Local.sUser)
		Gui.F_Label_Est.lblCreateBy.Caption(V.Local.sUser)

		'set copied From
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCopyFrom.Caption,":",V.Local.sEstimate)
		V.Local.sEstimate.RedimPreserve(0,1)
		F.Intrinsic.Control.If(V.ODBC.Con!rstHead.FieldValLong!COPY_FROM,<>,0)
			F.Intrinsic.String.Build("{0}: {1}",V.Local.sEstimate(0),V.ODBC.Con!rstHead.FieldValTrim!Copy_From,V.Local.sEstimate)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}: {1}",V.Local.sEstimate(0),"",V.Local.sEstimate)
		F.Intrinsic.Control.EndIf
		Gui.F_Label_Est.lblCopyFrom.Caption(V.Local.sEstimate)

		'set suser blank again
		V.Local.sUser.Redim(0,0)
		V.Local.sUser.Set("")

		'set Changed By
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblLstCng.Caption,":",V.Local.sUser)
		V.Local.sUser.RedimPreserve(0,1)
		F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),V.ODBC.Con!rstHead.FieldValTrim!LAST_CNG_BY,V.Local.sUser)
		Gui.F_Label_Est.lblLstCng.Caption(V.Local.sUser)
		
		f.Intrinsic.Control.If(v.ODBC.Con!rstHead.FieldValTrim!QUOTE_NO,<>,"")
			Gui.F_Label_Est.txtQuoteNo.Text(v.ODBC.Con!rstHead.FieldValTrim!QUOTE_NO)
		f.Intrinsic.Control.Else
			'we have a blank quote number so lets see if we have one and set the latest
			F.Intrinsic.String.Build("SELECT TOP 1 QUOTE_NO from V_QUOTE_HEADER WHERE USER_2 = '{0}'  ORDER BY QUOTE_NO DESC",V.Screen.F_Label_Est!txtEstimate.Text,V.Local.sSQL)
			f.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
			f.Intrinsic.String.Replace(v.Local.sRet,"*!*","",v.Local.sRet)
			Gui.F_Label_Est.txtQuoteNo.Text(v.Local.sRet.Trim)
			V.Local.sRet.Set(V.Args.EstNo) 
		f.Intrinsic.Control.EndIf
		
		'This is probably not necessary, but will leave in case it is.
'		F.Intrinsic.String.Build("SELECT TOP 1 CHKPRECISION, CHKPRIME from GCG_3623_QUOTE where QUOTE_NO = '{0}'", V.Screen.F_Label_Est!txtQuoteNo.Text, V.Local.sSQL)
'		F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstPPs", V.Local.sSQL)
'		F.Intrinsic.Control.If(V.ODBC.Con!rstPPs.EOF, =, True)			
'			Gui.F_Label_Est.chkPrecision.Value(False)
'			Gui.F_Label_Est.chkPrime.Value(False)
'		
'		F.Intrinsic.Control.Else
'			
'			'FEQ 11/27/2018 populating checkboxes from the EST table #2 Mod
'			F.Intrinsic.Control.If(v.ODBC.Con!rstPPs.FieldVal!CHKPRECISION,=,"True")
'				Gui.F_Label_Est.chkPrecision.Value(1)
'			F.Intrinsic.Control.Else
'				Gui.F_Label_Est.chkPrecision.Value(0)
'			F.Intrinsic.Control.EndIf
'			
'			F.Intrinsic.Control.If(v.ODBC.Con!rstPPs.FieldVal!CHKPRIME,=,"True")
'				Gui.F_Label_Est.chkPrime.Value(1)
'			F.Intrinsic.Control.Else
'				Gui.F_Label_Est.chkPrime.Value(0)
'			F.Intrinsic.Control.EndIf
'			
'		F.Intrinsic.Control.EndIf
'		
'		F.ODBC.Con!rstPPs.Close
	F.Intrinsic.Control.Else
		'#7
		gui.F_Label_Est.dtpLastSaved.Value(v.Ambient.Date)
		Gui.F_Label_Est.dtpEstDate.Value(v.Ambient.Date)
		'set Created by
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCreateBy.Caption,":",V.Local.sUser)
		V.Local.sUser.RedimPreserve(0,1)
		F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),v.Caller.User,V.Local.sUser)
		Gui.F_Label_Est.lblCreateBy.Caption(V.Local.sUser)
		
		'set Changed By
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblLstCng.Caption,":",V.Local.sUser)
		V.Local.sUser.RedimPreserve(0,1)
		F.Intrinsic.String.Build("{0}: {1}",V.Local.sUser(0),"",V.Local.sUser)
		Gui.F_Label_Est.lblLstCng.Caption(V.Local.sUser)
	
		'set copied From
		F.Intrinsic.String.Split(V.Screen.F_Label_Est!lblCopyFrom.Caption,":",V.Local.sEstimate)
		V.Local.sEstimate.RedimPreserve(0,1)
		F.Intrinsic.String.Build("{0}: {1}",V.Local.sEstimate(0),V.Args.EstNo,V.Local.sEstimate)
		Gui.F_Label_Est.lblCopyFrom.Caption(V.Local.sEstimate)
		
		Gui.F_Label_Est.txtQuoteNo.Text("")
		'FEQ 10/23 
		Gui.F_Label_Est.chkPrecision.Value(False)
		Gui.F_Label_Est.chkPrime.Value(False)
		
	F.Intrinsic.Control.EndIf
	
	'Load RunQty from EST
	f.Data.DataTable.DeleteRow("RunQty")
	'We need to loop through the Run Quantity and add the fields
	F.Intrinsic.Control.For(V.Local.iCount,0,9,1)
		F.Intrinsic.Math.Add(V.Local.iCount,1,V.Local.iPlace)
		f.Data.DataTable.AddRow("RunQty","Line",v.Local.iPlace,"Qty",v.ODBC.Con!rstHead.FieldValFloat!H_QTY[v.Local.iPlace])
	F.Intrinsic.Control.Next(V.Local.iCount)
	
	'Load the Job jacket fields
	'Check each check box and set them
	f.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.If(V.ODBC.Con!rstHead.FieldValTrim!ROLLS,=,"True")
		Gui.F_Label_Est.chkRolls.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkRolls.Value(0)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.ODBC.Con!rstHead.FieldValTrim!FANFOLD,=,"True")
		Gui.F_Label_Est.chkFanfold.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkFanfold.Value(0)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.ODBC.Con!rstHead.FieldValTrim!SHEETS,=,"True")
		Gui.F_Label_Est.chkSheets.Value(1)
	F.Intrinsic.Control.Else
		Gui.F_Label_Est.chkSheets.Value(0)
	F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.UnBlockEvents
	'now we can actually set the fields
	Gui.F_Label_Est.txtRCoreSize.Text(V.ODBC.Con!rstHead.FieldValTrim!CORE_SIZE)
	Gui.F_Label_Est.txtRLblRoll.Text(V.ODBC.Con!rstHead.FieldValTrim!LABELS_ROLL)
	Gui.F_Label_Est.txtRRollBox.Text(V.ODBC.Con!rstHead.FieldValTrim!ROLLS_BOX)
	Gui.F_Label_Est.txtRRollOD.Text(V.ODBC.Con!rstHead.FieldValTrim!ROLL_OD)
	Gui.F_Label_Est.txtRODAct.Text(V.ODBC.Con!rstHead.FieldValTrim!ROLL_OD_ACT)
	Gui.F_Label_Est.txtFLblFold.Text(V.ODBC.Con!rstHead.FieldValTrim!LABELS_FOLD)
	Gui.F_Label_Est.txtFLblStack.Text(V.ODBC.Con!rstHead.FieldValTrim!LABELS_STACK)
	Gui.F_Label_Est.txtFStackBox.Text(V.ODBC.Con!rstHead.FieldValTrim!STACK_BOX)
	Gui.F_Label_Est.txtSLblSheet.Text(V.ODBC.Con!rstHead.FieldValTrim!LABELS_SHEET)
	Gui.F_Label_Est.txtSSheetStack.Text(V.ODBC.Con!rstHead.FieldValTrim!SHEETS_STACK)
	Gui.F_Label_Est.txtSStackBox.Text(V.ODBC.Con!rstHead.FieldValTrim!STACKS_BOX)
	Gui.F_Label_Est.ddlRWindDir.Text(V.ODBC.Con!rstHead.FieldValTrim!WIND_DIR)
	Gui.F_Label_Est.txtLbsCart.Text(V.ODBC.Con!rstHead.FieldValTrim!LBL_CARTON)


F.Intrinsic.Control.EndIf
F.ODBC.Con!rstHead.Close

'F.Intrinsic.Control.UnBlockEvents

'get the material grid from the table
F.Intrinsic.String.Build("SELECT EST_NO, RTRIM(PART) AS PART, RTRIM(LOC) AS LOC, RTRIM(SORT_CODE) AS CODE, RTRIM(DESCRIPTION) AS DESCRIPTION, PRICE AS 'COST/UM', COST, QTY, RTRIM(UM) AS UM, LENGTH1 AS LENGTH, WIDTH, WEIGHT, MSI, SETUP, SHOWCOST, POS, RTRIM(FORMULAM) AS FORMULAM, RTRIM(FORMULAQ) AS FORMULAQ, FREQ, RTRIM('M') AS LMO, ISNULL(ROW1,0) AS ROW FROM GCG_3623_EST_MAT WHERE EST_NO = '{0}' ORDER BY POS DESC",V.Local.sRet,V.Local.sSQL)
f.Intrinsic.Control.If(v.DataTable.MaterialTemp.Exists,=,True)
	f.Data.DataTable.Close("MaterialTemp")
f.Intrinsic.Control.EndIf

f.Data.DataTable.CreateFromSQL("MaterialTemp","Con",v.Local.sSQL,True)
f.Data.DataTable.Merge("MaterialTemp","FullTable",True,2)
f.Data.DataTable.Close("MaterialTemp")

'Get Labor grid from the table
F.Intrinsic.String.Build("SELECT EST_NO, RTRIM(WC) AS PART, RTRIM(OP_CODE) AS CODE, RTRIM(DESCRIPTION) AS DESCRIPTION, STD_COST AS STDCOST, STD_RATE AS SHOWCOST, STD_RUN AS QTY, CREW AS CREWSIZE, SETUP, POS, RTRIM(FORMULAR) AS FORMULAQ, RTRIM(FORMULAS) AS FORMULAM, RTRIM('L') AS LMO, ISNULL(ROW1,0) AS ROW FROM GCG_3623_EST_LABOR WHERE EST_NO = '{0}' ORDER BY POS DESC",V.Local.sRet,V.Local.sSQL)
f.Intrinsic.Control.If(v.DataTable.LaborTemp.Exists,=,True)
	f.Data.DataTable.Close("LaborTemp")
f.Intrinsic.Control.EndIf
f.Data.DataTable.CreateFromSQL("LaborTemp","Con",v.Local.sSQL,True)
f.Data.DataTable.Merge("LaborTemp","FullTable",True,2)

'Get Total Labor Hours
f.Data.DataTable.Compute("LaborTemp","SUM(SHOWCOST)","",V.Local.fTLaborHour)
f.Data.DataTable.Compute("LaborTemp","SUM(SETUP)","",V.Local.fLaborHour)
F.Intrinsic.Math.Add(V.Local.fLaborHour,V.Local.fTLaborHour,V.Local.fTLaborHour)
f.Data.DataTable.Close("LaborTemp")

'populating workcenter dropdown list in labor tab for labor hours grid
F.Intrinsic.String.Build("Select distinct WC From GCG_3623_EST_LABOR Where EST_NO = '{0}'Order by WC",V.Local.sRet,V.Local.sSQL)
F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLab",V.Local.sSQL)
Gui.F_Label_Est.dropdownlistLHRQ.ClearItems
Gui.F_Label_Est.dropdownlistLHRQ.AddItem("ALL",0)
V.Local.iCount.Set(1)

F.Intrinsic.Control.DoUntil(V.ODBC.Con!rstLab.EOF,=,True)
	Gui.F_Label_Est.dropdownlistLHRQ.AddItem(V.ODBC.Con!rstLab.FieldValTrim!WC,V.Local.iCount)
	'stupid addto array
'	F.Intrinsic.Variable.AddToArray(V.Global.sDropdownlist,V.ODBC.Con!rstLab.FieldValTrim!WC)
	'For some reason the AddToArray function is broke. Apparently it was fixed in a hotfix, but I will go ahead and make the appropriate modifications not to have to rely on that
	F.Intrinsic.Math.Add(V.Global.sDropdownlist.UBound, 1, V.Local.iUB)
	V.Global.sDropdownlist.RedimPreserve(0, V.Local.iUB)
	V.Global.sDropdownlist(V.Local.iUB).Set(V.ODBC.Con!rstLab.FieldValTrim!WC)
	F.Intrinsic.Math.Add(V.Local.iCount,1,V.Local.iCount)
F.ODBC.Con!rstLab.MoveNext
F.Intrinsic.Control.Loop
F.ODBC.Con!rstLab.Close


'get the pricing grid from the table
F.Intrinsic.String.Build("SELECT EST_NO, RTRIM(FINISH_PART) AS ROUTER, QTY AS QUANTITY, DIRECT_COST AS DIRECT, MAT_COST AS MATERIAL, OUT_COST AS OUTSIDE, LABOR_COST AS LABOR, LABOR_HRS AS LABORHRS, OH_COST AS OVERHEAD, TOTAL_COST AS TOTALCOST, UNIT_COST AS UNITCOST, MARKUP, UNIT_PRICE AS UNITPRICE, TOTAL_PRICE AS TOTAL, MARGINP, MARGINA AS MARGIND,RTRIM(FORMULA) AS FORMULA FROM GCG_3623_EST_PRICE WHERE EST_NO = '{0}' ORDER BY EST_NO DESC",V.Local.sRet,V.Local.sSQL)
f.Intrinsic.Control.If(v.DataTable.PriceTemp.Exists,=,True)
	f.Data.DataTable.Close("PriceTemp")
f.Intrinsic.Control.EndIf
f.Data.DataTable.CreateFromSQL("PriceTemp","Con",v.Local.sSQL,True)
f.Data.DataTable.DeleteRow("Pricing")
f.Data.DataTable.Merge("PriceTemp","Pricing",True,2)
f.Data.DataTable.Close("PriceTemp")


'Add Outside Sequences to the table
F.Intrinsic.String.Build("SELECT EST_NO, RTRIM(FINISH_PART) AS ROUTER, RTRIM(SEQ) AS SEQ, RTRIM(LMO) AS LMO, RTRIM(PART) AS PART, RTRIM(REV) AS REV, RTRIM(LOC) AS LOC, RTRIM(OPERATION1) AS CODE, SETUP, RUNTIME AS QTY, RATE AS COST, FREQ, RTRIM(DESCRIPTION) AS DESCRIPTION, RTRIM(UM) AS UM, TOTAL_COST AS TOTALCOST, DIRECT_COST AS DIRCOST, OH_COST AS OHCOST, LABOR_HRS AS LBRHRS, MIN_COST AS MINCOST, POS FROM GCG_3623_EST_SUM WHERE EST_NO = '{0}' AND LMO = 'O' ORDER BY POS DESC",V.Local.sRet,V.Local.sSQL)
f.Intrinsic.Control.If(v.DataTable.OutsideTemp.Exists,=,True)
	f.Data.DataTable.Close("OutsideTemp")
f.Intrinsic.Control.EndIf
f.Data.DataTable.CreateFromSQL("OutsideTemp","Con",v.Local.sSQL,True)
f.Data.DataTable.Merge("OutsideTemp","FullTable",True,2)
f.Data.DataTable.Close("OutsideTemp")

'Create a dictionary for the comments and put them on the FullTable
f.Intrinsic.String.Build("SELECT POS, RTRIM(COMMENTS) AS COMMENTS FROM GCG_3623_EST_SUM WHERE EST_NO = '{0}' ORDER BY POS DESC",V.Local.sRet,V.Local.sSQL)
f.Data.Dictionary.CreateFromSQL("Comments","Con",v.Local.sSQL)
f.Data.Dictionary.SetDefaultReturn("Comments","")
f.Data.Dictionary.AddItem("Comments",0,"")
f.Data.DataTable.FillFromDictionary("FullTable","Comments","Pos","Comments")
f.Data.Dictionary.Close("Comments")

'Create a dictionary for the Router and put them on the FullTable
f.Intrinsic.String.Build("SELECT POS, RTRIM(FINISH_PART) AS ROUTER FROM GCG_3623_EST_SUM WHERE EST_NO = '{0}' ORDER BY POS DESC",V.Local.sRet,V.Local.sSQL)
f.Data.Dictionary.CreateFromSQL("ROUTER","Con",v.Local.sSQL)
f.Data.Dictionary.SetDefaultReturn("ROUTER","")
f.Data.DataTable.FillFromDictionary("FullTable","ROUTER","Pos","ROUTER")
f.Data.Dictionary.Close("ROUTER")

'Create a dictionary for the SEQ and put them on the FullTable
f.Intrinsic.String.Build("SELECT POS, RTRIM(SEQ) AS SEQ FROM GCG_3623_EST_SUM WHERE EST_NO = '{0}' ORDER BY POS DESC",V.Local.sRet,V.Local.sSQL)
f.Data.Dictionary.CreateFromSQL("SEQ","Con",v.Local.sSQL)
f.Data.Dictionary.SetDefaultReturn("SEQ","")
f.Data.DataTable.FillFromDictionary("FullTable","SEQ","Pos","SEQ")
f.Data.Dictionary.Close("SEQ")

'set the header tab back to focus
Gui.F_Label_Est.tabx1.SetTab(0)

'setting dropdown list to all that will call dropdownlistlhrq change sub to populate labor quantity in the labor tab
Gui.F_Label_Est.dropdownlistLHRQ.Text("ALL")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("LoadEst_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.LoadEst.End

Program.Sub.Launch_Maint.Start
F.Intrinsic.Control.SetErrorHandler("Launch_Maint_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iHandle.Declare(Long)
V.Local.sFile.Declare(String)

F.Intrinsic.String.Build("{0}\GCG_3623_Custom_Maintenance.g2u",V.Caller.GasDir,V.Local.sFile)
F.Global.General.CallAsyncGAS(V.Local.sFile,V.Local.iHandle)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Launch_Maint_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Launch_Maint.End

Program.Sub.Check_Credentials.Start
F.Intrinsic.Control.SetErrorHandler("Check_Credentials_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sGroups.Declare(String)
V.Local.iC.Declare(Long)
V.Local.sSQL.Declare(String)

'Get user groups
F.Global.Security.GetUserGroups(V.Caller.User,V.Caller.CompanyCode,V.Local.sGroups)
F.Intrinsic.String.Split(V.Local.sGroups,"*!*",V.Local.sGroups)

'For each group the user is in, check for allowances
F.Intrinsic.Control.For(V.Local.iC,0,V.Local.sGroups.UBound,1)
	F.Intrinsic.String.Build("SELECT * FROM GCG_3623_GRP_MAINT WHERE GRP = '{0}'",V.Local.sGroups(V.Local.iC),V.Local.sSQL)
	F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstCred",V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.ODBC.Con!rstCred.EOF,<>,True)
		'If user is Admin, has access to edit and Maintenance
		F.Intrinsic.Control.If(V.ODBC.Con!rstCred.FieldVal!Admin1,=,True)
			Gui.F_Label_Est.cmdEstMaint.Visible(True)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstCred.Close
F.Intrinsic.Control.Next(V.Local.iC)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Check_Credentials_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Check_Credentials.End

Program.Sub.DeleteRouter.Start
F.Intrinsic.Control.SetErrorHandler("DeleteRouter_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sTables.Declare(String)
V.Local.iCount.Declare(Long)

F.Intrinsic.Control.If(V.Global.sRouter.Trim, <>, "")

	'Split the tables so we can delete
	F.Intrinsic.String.Split("ROUTER_DESC*!*ROUTER_HEADER*!*ROUTER_LINE*!*ROUTER_CHANGES*!*ROUTER_OP_CODES*!*ROUTER_XREF*!*RTR_BARSTOCK*!*RTR_LINE_YIELD*!*RTR_PRICE_1_4*!*RTR_PRICE_5_8*!*RTR_PRICE_9_10*!*RTR_REV_HIST*!*RTR_REV_NOTES","*!*",V.Local.sTables)
	'Delete Router_Desc
	F.Intrinsic.Control.For(V.Local.iCount,V.Local.sTables.LBound,V.Local.sTables.UBound,1)
		F.Intrinsic.String.Build("DELETE FROM {0} WHERE ROUTER = '{1}' ",V.Local.sTables(V.Local.iCount),V.Global.sRouter.Trim,V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
	F.Intrinsic.Control.Next(V.Local.iCount)
	
	F.Intrinsic.Control.If(V.Caller.GSSVersion.Float, <, 2017.1)
		F.Intrinsic.String.Build("DELETE FROM ROUTER_SUPP WHERE RTR_NUM = '{0}' ",V.Global.sRouter.Trim,V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.Else
		'If GS version is greater than or equal to 2017.1, we use the new tables
		
		F.Intrinsic.String.Build("DELETE FROM ROUTER_SUPP_LINE WHERE RTR_NUM = '{0}' ",V.Global.sRouter.Trim,V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		
		F.Intrinsic.String.Build("DELETE FROM ROUTER_SUPP_HDR WHERE RTR_NUM = '{0}' ",V.Global.sRouter.Trim,V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("DeleteRouter_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.DeleteRouter.End

Program.Sub.Lock.Start
F.Intrinsic.Control.SetErrorHandler("Lock_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)

'this sub is for locking and unlocking estimate numbers
'if lock was passed then create a lock, if unlock was passed then unlock the table
F.Intrinsic.Control.If(V.Args.LOCK,=,"Lock")
	'add the est to the table to lock it
	F.Intrinsic.String.Build("INSERT INTO GCG_3623_EST_LOCK VALUES ('{0}', '{1}') ",V.Args.ESTNO.Trim,V.Caller.User.Trim,V.Local.sSQL)
	F.ODBC.Connection!Con.Execute(V.Local.sSQL)
F.Intrinsic.Control.Else
	'take away the lock from the table
	F.Intrinsic.String.Build("DELETE FROM GCG_3623_EST_LOCK WHERE EST_NO = '{0}' ",V.Args.ESTNO.Trim,V.Local.sSQL)
	F.ODBC.Connection!Con.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Lock_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Gui.F_Label_Est.txtEstimate.Text("")
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Lock.End

Program.Sub.Txt_Lost_Focus.Start
F.Intrinsic.Control.SetErrorHandler("Txt_Lost_Focus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.sRet.Declare(String)
v.Local.sEval.Declare(String)
v.Local.fAmount.Declare(Float)
v.Local.fTemp.Declare(Float)

'this sub is for when the text boxes lose focus

F.Intrinsic.Control.SelectCase(V.Args.ControlName)

	F.Intrinsic.Control.Case("TXTMWIDTHF")
		'if this text box is not empty and if txtMWidthT is empty then automatically set T to the same value
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtMWidthF.Text,<>,"")
			'we have something so copy it to T if it is blank
			F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtMWidthT.Text,=,"")
				Gui.F_Label_Est.txtMWidthT.Text(V.Screen.F_Label_Est!txtMWidthF.Text)
				Gui.F_Label_Est.txtMWidthT.SelectAll
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("TXTMLENGTHF")
		'if this text box is empty and if txtmLengthT is empty then automatically set T to the same value
			F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtMLengthF.Text,<>,"")
				'we have something so copy it to t if it is blank
				F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtMLengthT.Text,=,"")
					Gui.F_Label_Est.txtMLengthT.Text(V.Screen.F_Label_Est!txtMLengthF.Text)
					Gui.F_Label_Est.txtMLengthT.SelectAll
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
	F.Intrinsic.Control.Case("TXTHLBLWIDTH")
		'we need to populate the material width ranges
		
	F.Intrinsic.Control.Case("TXTHACRDIE")
		'we need to populate the material # ARC Die field
		
	f.Intrinsic.Control.CaseAny("TXTRCORESIZE","TXTRLBLROLL","TXTRROLLBOX")
		'we need to calculare weight/m, weight/carton, and roll od actual
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!chkRolls.Value,=,1)
			'(Carrier Width / # Across) * Repeat Length * Weight MSI where PL is RM * 1.05
			f.Data.DataView.ToString("FullTable","MaterialBottom","Part*!*Loc","","','",v.Local.sRet)
			f.Intrinsic.String.Build("SELECT Sum(GCG.LBS_PER_MSI) AS LBS_PER_MSI FROM GCG_3623_INVENTORY AS GCG LEFT JOIN V_INVENTORY_MSTR AS MST ON GCG.PART = MST.PART AND GCG.LOCATION1 = MST.LOCATION WHERE RTRIM(MST.PART) + RTRIM(MST.LOCATION) IN ('{0}') AND MST.PRODUCT_LINE = 'RM'",v.Local.sRet,v.Local.sRet)
			f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstRM",v.Local.sRet)
			f.Intrinsic.Control.If(v.ODBC.Con!rstRM.EOF,=,False)
				f.Intrinsic.String.Build("({0}/{1})*{2}*{3}*1.05",v.Screen.F_Label_Est!txtHLinerWidth.Text.Float,v.Screen.F_Label_Est!txtHFinAcross.Text.Float,v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.ODBC.Con!rstRM.FieldValFloat!LBS_PER_MSI,v.Local.sEval)
				f.Intrinsic.Control.Try
					f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
				f.Intrinsic.Control.CatchWhen(700)
					v.Local.fAmount.Set(0)
				f.Intrinsic.Control.EndTry
			f.Intrinsic.Control.EndIf
			F.ODBC.Con!rstRM.Close
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtOLbsMLabel.Text(v.Local.fAmount)
			
			'WeightM * ((# of labels per roll * # of rolls per carton)/1000)
			f.Intrinsic.String.Build("{0}*(({1}*{2})/1000)",v.Screen.F_Label_Est!txtOLbsMLabel.Text.Float,v.Screen.F_Label_Est!txtRLblRoll.Text.Float,v.Screen.F_Label_Est!txtRRollBox.Text.Float,v.Local.sEval)
			f.Intrinsic.Control.Try
				f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
			f.Intrinsic.Control.CatchWhen(700)
				v.Local.fAmount.Set(0)
			f.Intrinsic.Control.EndTry
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtLbsCart.Text(v.Local.fAmount)
			
			
			f.Data.DataView.ToString("FullTable","MaterialBottom","Part*!*Loc","","','",v.Local.sRet)
			f.Intrinsic.String.Build("SELECT Sum(GCG.CALIPER_THICKNESS) AS CALIPER_THICKNESS FROM GCG_3623_INVENTORY AS GCG LEFT JOIN V_INVENTORY_MSTR AS MST ON GCG.PART = MST.PART AND GCG.LOCATION1 = MST.LOCATION WHERE RTRIM(MST.PART) + RTRIM(MST.LOCATION) IN ('{0}') AND MST.PRODUCT_LINE = 'RM'",v.Local.sRet,v.Local.sRet)
			f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstCal",v.Local.sRet)
			f.Intrinsic.Control.If(v.ODBC.Con!rstCal.EOF,=,False)
				'SQRT(((Roll Length feet * Caliper)/0.065476)+Inner Diameter^2)
				f.Intrinsic.Control.Try
					f.Intrinsic.Math.Div(v.Screen.F_Label_Est!txtRLblRoll.Text.Float,v.Screen.F_Label_Est!txtHFinAcross.Text.Float,v.Local.fAmount)
'					f.Intrinsic.Math.Mult(v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.Screen.F_Label_Est!txtRLblRoll.Text.Float,v.Local.fAmount)
					f.Intrinsic.Math.Mult(v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.Local.fAmount,v.Local.fAmount)
					f.Intrinsic.Math.Div(v.Local.fAmount,12,v.Local.fAmount)
					f.Intrinsic.Math.Mult(v.Local.fAmount,v.ODBC.Con!rstCal.FieldValFloat!CALIPER_THICKNESS,v.Local.fAmount)
					f.Intrinsic.Math.Div(v.Local.fAmount,0.065476,v.Local.fAmount)
					f.Intrinsic.Math.Evaluate("[v.Screen.F_Label_Est!txtRCoreSize.Text.Float]^2",v.Local.fTemp)
					f.Intrinsic.Math.Add(v.Local.fAmount,v.Local.fTemp,v.Local.fAmount)
					f.Intrinsic.Math.Evaluate("[v.Local.fAmount]^0.5",v.Local.fAmount)
				f.Intrinsic.Control.CatchWhen(700)
					v.Local.fAmount.Set(0)
				f.Intrinsic.Control.EndTry
			f.Intrinsic.Control.EndIf
			f.ODBC.Con!rstCal.Close
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtRODAct.Text(v.Local.fAmount)
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.CaseAny("TXTFLBLFOLD","TXTFLBLSTACK","TXTFSTACKBOX")
		'we need to calculate weight/m, weight/carton
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!chkFanfold.Value,=,1)
			'(Carrier Width / Inner Diameter) * Repeat Length * Weight MSI * 1.05
			f.Data.DataView.ToString("FullTable","MaterialBottom","Part*!*Loc","","','",v.Local.sRet)
			f.Intrinsic.String.Build("SELECT Sum(GCG.LBS_PER_MSI) AS LBS_PER_MSI FROM GCG_3623_INVENTORY AS GCG LEFT JOIN V_INVENTORY_MSTR AS MST ON GCG.PART = MST.PART AND GCG.LOCATION1 = MST.LOCATION WHERE RTRIM(MST.PART) + RTRIM(MST.LOCATION) IN ('{0}') AND MST.PRODUCT_LINE = 'RM'",v.Local.sRet,v.Local.sRet)
			f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstRM",v.Local.sRet)
			f.Intrinsic.Control.If(v.ODBC.Con!rstRM.EOF,=,False)
				f.Intrinsic.String.Build("({0}/{1})*{2}*{3}*1.05",v.Screen.F_Label_Est!txtHLinerWidth.Text.Float,v.Screen.F_Label_Est!txtHFinAcross.Text.Float,v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.ODBC.Con!rstRM.FieldValFloat!LBS_PER_MSI,v.Local.sEval)
				f.Intrinsic.Control.Try
					f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
				f.Intrinsic.Control.CatchWhen(700)
					v.Local.fAmount.Set(0)
				f.Intrinsic.Control.EndTry
			f.Intrinsic.Control.EndIf
			F.ODBC.Con!rstRM.Close
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtOLbsMLabel.Text(v.Local.fAmount)
			
			'WeightM * ((LabelsStack*StacksCarton)/1000)
			f.Intrinsic.String.Build("{0}*(({1}*{2})/1000)",v.Screen.F_Label_Est!txtOLbsMLabel.Text.Float,v.Screen.F_Label_Est!txtFLblStack.Text.Float,v.Screen.F_Label_Est!txtFStackBox.Text.Float,v.Local.sEval)
			f.Intrinsic.Control.Try
				f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
			f.Intrinsic.Control.CatchWhen(700)
				v.Local.fAmount.Set(0)
			f.Intrinsic.Control.EndTry
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtLbsCart.Text(v.Local.fAmount)
		f.Intrinsic.Control.EndIf
		
		
		
	f.Intrinsic.Control.CaseAny("TXTSSHEETSTACK","TXTSSTACKBOX")
		'we need to calculate weight/m and weight/carton
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!chkSheets.Value,=,1)
			'Carrier Width * Repeat Length * Weight MSI * 1.05
			f.Data.DataView.ToString("FullTable","MaterialBottom","Part*!*Loc","","','",v.Local.sRet)
			f.Intrinsic.String.Build("SELECT Sum(GCG.LBS_PER_MSI) AS LBS_PER_MSI FROM GCG_3623_INVENTORY AS GCG LEFT JOIN V_INVENTORY_MSTR AS MST ON GCG.PART = MST.PART AND GCG.LOCATION1 = MST.LOCATION WHERE RTRIM(MST.PART) + RTRIM(MST.LOCATION) IN ('{0}') AND MST.PRODUCT_LINE = 'RM'",v.Local.sRet,v.Local.sRet)
			f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstRM",v.Local.sRet)
			f.Intrinsic.Control.If(v.ODBC.Con!rstRM.EOF,=,False)
				f.Intrinsic.String.Build("{0}*{1}*{2}*1.05",v.Screen.F_Label_Est!txtHLinerWidth.Text.Float,v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.ODBC.Con!rstRM.FieldValFloat!LBS_PER_MSI,v.Local.sEval)
				f.Intrinsic.Control.Try
					f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
				f.Intrinsic.Control.CatchWhen(700)
					v.Local.fAmount.Set(0)
				f.Intrinsic.Control.EndTry
			f.Intrinsic.Control.EndIf
			F.ODBC.Con!rstRM.Close
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtOLbsMLabel.Text(v.Local.fAmount)
			
			'WeightM * ((SheetsStack * StacksCarton)/1000)
			f.Intrinsic.String.Build("{0}*(({1}*{2})/1000)",v.Screen.F_Label_Est!txtOLbsMLabel.Text.Float,v.Screen.F_Label_Est!txtSSheetStack.Text.Float,v.Screen.F_Label_Est!txtSStackBox.Text.Float,v.Local.sEval)
			f.Intrinsic.Control.Try
				f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
			f.Intrinsic.Control.CatchWhen(700)
				v.Local.fAmount.Set(0)
			f.Intrinsic.Control.EndTry
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtLbsCart.Text(v.Local.fAmount)
		f.Intrinsic.Control.EndIf

F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Txt_Lost_Focus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Txt_Lost_Focus.End

Program.Sub.Prev_Filter.Start
F.Intrinsic.Control.SetErrorHandler("Prev_Filter_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sWhere.Declare(String)
V.Local.iRows.Declare(Long)
V.Local.dFrom.Declare(Date)
V.Local.dTo.Declare(Date)

'Base Query
V.Local.sSQL.Set("SELECT EST_NO, CUSTOMER,FINISH_PART, LBL_WIDTH, LBL_DEPTH, NUM_COLORS, CREATED_BY, EST_DATE FROM GCG_3623_EST WHERE SAVED = '1' ")

'Now see which fields have values so we can add them to the query
F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEEstNum.Text,<>,"")
	'we have something in it so add it
	F.Intrinsic.Control.If(V.Local.sWhere,=,"")
		F.Intrinsic.String.Build("EST_NO >= {0} ",V.Screen.F_Label_Est!txtPEEstNum.Text.Trim,V.Local.sWhere)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0} AND EST_NO >= {1} ",V.Local.sWhere,v.Screen.F_Label_Est!txtPEEstNum.Text.Trim,V.Local.sWhere)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPECust.Text,<>,"")
	'we have something in it so add it
	F.Intrinsic.Control.If(V.Local.sWhere,=,"")
		F.Intrinsic.String.Build("CUSTOMER LIKE '{0}%' ",V.Screen.F_Label_Est!txtPECust.Text.Ucase,V.Local.sWhere)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0} AND CUSTOMER LIKE '{1}%' ",V.Local.sWhere,V.Screen.F_Label_Est!txtPECust.Text.Ucase,V.Local.sWhere)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtHistFinPart.Text,<>,"")
	'added in search by part
	F.Intrinsic.Control.If(V.Local.sWhere,=,"")
		F.Intrinsic.String.Build("FINISH_PART Like '{0}%'",V.Screen.F_Label_Est!txtHistFinPart.Text.Ucase,V.Local.sWhere)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0} AND FINISH_PART Like '{1}%'",V.Local.sWhere,V.Screen.F_Label_Est!txtHistFinPart.Text.Ucase,V.Local.sWhere)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEFromWidth.Text,<>,"","AND",V.Screen.F_Label_Est!txtPEToWidth.Text,<>,"")
	'we have something in it so add it
	'Check to make sure from is greater than to
	F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEFromWidth.Text.Float,<=,V.Screen.F_Label_Est!txtPEToWidth.Text.Float)
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("LBL_WIDTH >= {0} AND LBL_WIDTH <= {1} ",V.Screen.F_Label_Est!txtPEFromWidth.Text,V.Screen.F_Label_Est!txtPEToWidth.Text,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND LBL_WIDTH >= {1} AND LBL_WIDTH <= {2} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEFromWidth.Text,V.Screen.F_Label_Est!txtPEToWidth.Text,V.Local.sWhere)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("LBL_WIDTH >= {0} AND LBL_WIDTH <= {1} ",V.Screen.F_Label_Est!txtPEToWidth.Text,V.Screen.F_Label_Est!txtPEFromWidth.Text,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND LBL_WIDTH >= {1} AND LBL_WIDTH <= {2} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEToWidth.Text,V.Screen.F_Label_Est!txtPEFromWidth.Text,V.Local.sWhere)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Else
	'only one is filled in
	F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEFromWidth.Text,<>,"")
		'we have a from so we need to do greater than or equal to
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("LBL_WIDTH >= {0} ",V.Screen.F_Label_Est!txtPEFromWidth.Text,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND LBL_WIDTH >= {1} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEFromWidth.Text,V.Local.sWhere)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.ElseIf(V.Screen.F_Label_Est!txtPEToWidth.Text,<>,"")
		'to width is filled in so we need to do less than or equal to
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("LBL_WIDTH <= {0} ",V.Screen.F_Label_Est!txtPEToWidth.Text,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND LBL_WIDTH <= {1} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEToWidth.Text,V.Local.sWhere)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEFromLength.Text,<>,"","AND",V.Screen.F_Label_Est!txtPEToLength.Text,<>,"")
	'we have something in it so add it
	F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEFromLength.Text.Float,<=,V.Screen.F_Label_Est!txtPEToLength.Text.Float)
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("LBL_DEPTH >= {0} AND LBL_DEPTH <= {1} ",V.Screen.F_Label_Est!txtPEFromLength.Text,V.Screen.F_Label_Est!txtPEToLength.Text,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND LBL_DEPTH >= {1} AND LBL_DEPTH <= {2} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEFromLength.Text,V.Screen.F_Label_Est!txtPEToLength.Text,V.Local.sWhere)
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("LBL_DEPTH >= {0} AND LBL_DEPTH <= {1} ",V.Screen.F_Label_Est!txtPEToLength.Text,V.Screen.F_Label_Est!txtPEFromLength.Text,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND LBL_DEPTH >= {1} AND LBL_DEPTH <= {2} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEToLength.Text,V.Screen.F_Label_Est!txtPEFromLength.Text,V.Local.sWhere)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Else
	'only one is filled in
	F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEFromLength.Text,<>,"")
		'we have a from so we need to do greater than or equal to
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("LBL_DEPTH >= {0} ",V.Screen.F_Label_Est!txtPEFromLength.Text,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} and LBL_DEPTH >= {1} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEFromLength.Text,V.Local.sWhere)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.ElseIf(V.Screen.F_Label_Est!txtPEToLength.Text,<>,"")
		'to length is filled in so we need to do less than or equal to
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("LBL_DEPTH <= {0} ",V.Screen.F_Label_Est!txtPEToLength.Text,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND LBL_DEPTH <= {1} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEToLength.Text,V.Local.sWhere)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEColors.Text,<>,"")
	'we have something in it so add it
	F.Intrinsic.Control.If(V.Local.sWhere,=,"")
		F.Intrinsic.String.Build("NUM_COLORS >= {0} ",V.Screen.F_Label_Est!txtPEColors.Text,V.Local.sWhere)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0} AND NUM_COLORS >= {1} ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEColors.Text,V.Local.sWhere)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtPEEst.Text,<>,"")
	'we have something in it so add it
	F.Intrinsic.Control.If(V.Local.sWhere,=,"")
		F.Intrinsic.String.Build("CREATED_BY LIKE '{0}%' ",V.Screen.F_Label_Est!txtPEEst.Text.Ucase,V.Local.sWhere)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0} AND CREATED_BY LIKE '{1}%' ",V.Local.sWhere,V.Screen.F_Label_Est!txtPEEst.Text.Ucase,V.Local.sWhere)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.F_Label_Est!dtpPEFromDate.Value,<>,V.Ambient.Date,"OR",V.Screen.F_Label_Est!dtpPEToDate.Value,<>,V.Ambient.Date)
	'we have something in it so add it
	V.Local.dFrom.Set(V.Screen.F_Label_Est!dtpPEFromDate.Value)
	V.Local.dTo.Set(V.Screen.F_Label_Est!dtpPEToDate.Value)
	F.Intrinsic.Control.If(V.Screen.F_Label_Est!dtpPEFromDate.Value,<=,V.Screen.F_Label_Est!dtpPEToDate.Value)
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("EST_DATE >= '{0}' AND EST_DATE <= '{1}' ",V.Screen.F_Label_Est!dtpPEFromDate.Value,v.Screen.F_Label_Est!dtpPEToDate.Value,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND EST_DATE >= '{1}' AND EST_DATE <= '{2}' ",V.Local.sWhere,V.Screen.F_Label_Est!dtpPEFromDate.Value,v.Screen.F_Label_Est!dtpPEToDate.Value,V.Local.sWhere)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Local.sWhere,=,"")
			F.Intrinsic.String.Build("EST_DATE >= '{0}' AND EST_DATE <= '{1}' ",V.Screen.F_Label_Est!dtpPEToDate.Value,v.Screen.F_Label_Est!dtpPEFromDate.Value,V.Local.sWhere)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0} AND EST_DATE >= '{1}' AND EST_DATE <= '{2}' ",V.Local.sWhere,V.Screen.F_Label_Est!dtpPEToDate.Value,v.Screen.F_Label_Est!dtpPEFromDate.Value,V.Local.sWhere)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

f.Data.DataView.SetFilter("PrevEst","PrevEstView",v.Local.sWhere)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Prev_Filter_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Prev_Filter.End

Program.Sub.Lost_Focus_Browsers.Start
F.Intrinsic.Control.SetErrorHandler("Lost_Focus_Browsers_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sTitle.Declare(String)
V.Local.iWidth.Declare(Long)

'This sub is for lost focus on some fields that we use browsers for.
'If we find the item they typed in then we populate the fields, else the standard browsers will use the value in the field to get close to the value

F.Intrinsic.Control.SelectCase(V.Args.ControlName)
	F.Intrinsic.Control.Case("TXTCUSTOMER")
		'Customer text box lost focus so we are goign to populate the customer information that was entered if it was correct
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtCustomer.Text,<>,"","AND",V.Screen.F_Label_Est!txtCustName.Text,=,"")
			'we have somethign entered throw it in a query
			V.Local.sRet.Set(V.Screen.F_Label_Est!txtCustomer.Text)
			F.Intrinsic.String.Build("SELECT VCM.CUSTOMER, VCM.NAME_CUSTOMER, VCM.ADDRESS1, VCM.CITY, VCM.STATE, VCM.ZIP, VCM.COUNTRY, VCM.TELEPHONE, VCS.FAX_NUMBER, VCS.EMAIL, VBG.GROUP_CUST FROM V_CUSTOMER_MASTER AS VCM LEFT JOIN V_CUSTOMER_SALES AS VCS ON VCM.CUSTOMER = VCS.CUSTOMER LEFT JOIN V_BUYING_GROUP AS VBG ON VCM.CUSTOMER = VBG.CUSTOMER WHERE UCASE(VCM.CUSTOMER) = '{0}' ",V.Local.sRet.UCase,V.Local.sSQL)
			F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstCust",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.Con!rstCust.EOF,=,False)
				'we have a customer
				F.Intrinsic.Control.CallSub(cleargroup1)
				'set each field to its value
				Gui.F_Label_Est.txtCustomer.Text(V.ODBC.con!rstCust.FieldValTrim!CUSTOMER)
				Gui.F_Label_Est.txtCustName.Text(V.ODBC.con!rstCust.FieldValTrim!NAME_CUSTOMER)
				Gui.F_Label_Est.txtCustBG.Text(V.ODBC.con!rstCust.FieldValTrim!GROUP_CUST)
				Gui.F_Label_Est.txtCustAddress.Text(V.ODBC.con!rstCust.FieldValTrim!ADDRESS1)
				Gui.F_Label_Est.txtCustCity.Text(V.ODBC.con!rstCust.FieldValTrim!CITY)
				Gui.F_Label_Est.txtCustState.Text(V.ODBC.con!rstCust.FieldValTrim!STATE)
				Gui.F_Label_Est.txtCustZip.Text(V.ODBC.con!rstCust.FieldValTrim!ZIP)
				Gui.F_Label_Est.txtCustCountry.Text(V.ODBC.con!rstCust.FieldValTrim!COUNTRY)
				Gui.F_Label_Est.txtCustPhone.Text(V.ODBC.con!rstCust.FieldValTrim!TELEPHONE)
				Gui.F_Label_Est.txtCustFax.Text(V.ODBC.con!rstCust.FieldValTrim!FAX_NUMBER)
				Gui.F_Label_Est.txtCustEmail.Text(V.ODBC.con!rstCust.FieldValTrim!EMAIL)
			F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstCust.Close
			'check to see if the customer has a contract in the contract header table if they do then check the box
			F.Intrinsic.String.Build("SELECT * FROM V_CONTRACT_HEADER WHERE UCASE(CUSTOMER) = '{0}' ",V.Local.sRet.UCase,V.Local.sSQL)
			F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstCont",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.Con!rstCont.EOF,=,False)
				'there is something in the table so check the box
				Gui.F_Label_Est.chkHContPricing.Value(1)
			F.Intrinsic.Control.Else
				'there is nothing in the table so unckeck the box
				Gui.F_Label_Est.chkHContPricing.Value(0)
			F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstCont.Close
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("TXTCONTACT")
		'Opens the Contact browser
		'this will populate the contact field based on the Customer selected
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtCustomer.Text,<>,"")
			V.Local.sRet.Set(V.Screen.F_Label_Est!txtContact.Text.Trim)
			F.Intrinsic.String.Build("SELECT NAME, EMAIL1, ADDRESS_1, CITY, STATE, ZIP, PHONE1, FAX1 FROM V_CONTACT WHERE CUST = '{0}' AND UCASE(NAME) = '{1}' ORDER BY NAME ASC",V.Screen.F_Label_Est!txtCustomer.Text,V.Local.sRet.UCase,V.Local.sSQL)
			F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstContact",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.Con!rstContact.EOF,=,False)
				'we have only a single line so populate the screen
				Gui.F_Label_Est.txtContact.Text(V.ODBC.Con!rstContact.FieldValTrim!NAME)
				Gui.F_Label_Est.txtCustEmail.Text(V.ODBC.Con!rstContact.FieldValTrim!EMAIL1)
				Gui.F_Label_Est.txtCustAddress.Text(V.ODBC.Con!rstContact.FieldValTrim!ADDRESS_1)
				Gui.F_Label_Est.txtCustCity.Text(V.ODBC.Con!rstContact.FieldValTrim!CITY)
				Gui.F_Label_Est.txtCustState.Text(V.ODBC.Con!rstContact.FieldValTrim!STATE)
				Gui.F_Label_Est.txtCustZip.Text(V.ODBC.Con!rstContact.FieldValTrim!ZIP)
				Gui.F_Label_Est.txtCustPhone.Text(V.ODBC.Con!rstContact.FieldValTrim!PHONE1)
				Gui.F_Label_Est.txtCustFax.Text(V.ODBC.Con!rstContact.FieldValTrim!FAX1)
			F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstContact.Close
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("TXTMATLOC")
		'if non inventory part is not checked we can do this
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!chkMCreateNonInv.Value,=,0,"AND",V.Screen.F_Label_Est!txtMPart.Text,<>,"",V.Screen.F_Label_Est!txtMPart.Text,<>,v.Global.sTestWC)
			F.Intrinsic.Control.CallSub(Stdbrowsers,"ControlName","CMDPART","Loc",V.Screen.F_Label_Est!txtMatLoc.Text)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("TXTLWC")
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtLWC.Text,<>,"","AND",V.Screen.F_Label_Est!txtLWC.Text,<>,v.Global.sTestWC)
			F.Intrinsic.Control.CallSub(Stdbrowsers,"ControlName","CMDWC")
		F.Intrinsic.Control.EndIf

F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Lost_Focus_Browsers_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Lost_Focus_Browsers.End

Program.Sub.gsfgpricinginfo_posttextmatrix.Start
F.Intrinsic.Control.SetErrorHandler("gsfgpricinginfo_posttextmatrix_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.fMarkup.Declare(Float)
V.Local.fTotalPrice.Declare(Float)
V.Local.fTotalCost.Declare(Float)
V.Local.fMarginPerc.Declare(Float)
V.Local.fMarginDollar.Declare(Float)
V.Local.iRow.Declare(Long)
V.Local.fUnitPrice.Declare(Float)
V.Local.fUnitCost.Declare(Float)
V.Local.sFormula.Declare(String)
v.Local.iCount.Declare(Long)
v.Local.sRet.Declare(String)
v.Local.iCount2.Declare(Long)

'Selection based on what column we are leaving
F.Intrinsic.Control.SelectCase(V.Args.Column)
	'Markup
	f.Intrinsic.Control.Case("Markup")
		'Markup was changed so lets use the new amount and put it into Total Cost to get the new Total Price
		'Set Markup
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Markup",v.Args.Markup.Float)

		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"UnitPrice",v.Args.UnitPrice.Float)
		'we need to get total cost
		v.Local.fTotalCost.Set(v.DataTable.Pricing(v.Args.RowIndex).TotalCost!FieldValFloat)
		'multiply Unit Price by qty to get total price
		f.Intrinsic.Math.Mult(v.DataTable.Pricing(v.Args.RowIndex).UnitPrice!FieldValFloat,v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat,v.Local.fTotalPrice)
		'set Total Price
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Total",v.Local.fTotalPrice)
		'Because we changed Total Price we need to readjust the Margin  % and price
		'Lets set Margin dollars first
		F.Intrinsic.Math.Sub(V.Local.fTotalPrice,V.Local.fTotalCost,V.Local.fMarginDollar)
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"MarginD",v.Local.fMarginDollar)
		F.Intrinsic.Control.If(V.Local.fTotalPrice,>,0)
			'Now lets figure out Margin percentage
			F.Intrinsic.Math.Div(V.Local.fMarginDollar,V.Local.fTotalPrice,V.Local.fMarginPerc)
		F.Intrinsic.Control.Else
			V.Local.fMarginPerc.Set(0)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Math.Mult(V.Local.fMarginPerc,100,V.Local.fMarginPerc)
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"MarginP",v.Local.fMarginPerc)
		
		
		
	'Unit Price
	f.Intrinsic.Control.Case("UnitPrice")
		'Set Total Price
		f.Intrinsic.Math.Mult(v.Args.Value.Float,v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat,v.Local.fTotalPrice)
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Total",v.Local.fTotalPrice)
		'Set Markup Percent
		'Set Unit Cost
		v.Local.fUnitCost.set(v.DataTable.Pricing(v.Args.RowIndex).UnitCost!FieldValFloat)
		'Lets grab the formula and pull the markup from there
		f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		f.Intrinsic.Control.If(v.Local.sFormula(1).Trim,<>,"")
			'we have markups so we need to wipe the formula because they manually changed the price
			f.Intrinsic.String.Build("{0}@!@@!@",v.Local.sFormula(0).Float,v.Local.sFormula)
			f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Formula",v.Local.sFormula)
		f.Intrinsic.Control.EndIf

		f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		'( Unit Price / 1.Initial markup ) / Unit Cost will give us 1.Additional markups.
		f.Intrinsic.Math.Div(v.Local.sFormula(0).Float,100,v.Local.sFormula(0))
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,1,v.Local.sFormula(0))
		f.Intrinsic.Math.Div(v.Args.Value.Float,v.Local.sFormula(0).Float,v.Local.fMarkup)
		'We have the initila markup amount so lets find out the rest of the markup
		f.Intrinsic.Math.Div(v.Local.fMarkup,v.Local.fUnitCost,v.Local.fMarkup)
		'We can add 1.additional markup we just got to 1.initial
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,v.Local.fMarkup,v.Local.fMarkup)
		'markup now has 2. something in front of it, take it away and mult by 100
		f.Intrinsic.Math.Sub(v.Local.fMarkup,2,v.Local.fMarkup)
		f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)	
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Markup",v.Local.fMarkup)
		'We need to get total cost
		v.Local.fTotalCost.Set(v.DataTable.Pricing(v.Args.RowIndex).TotalCost!FieldValFloat)
		'Set Margin $
		F.Intrinsic.Math.Sub(V.Local.fTotalPrice,V.Local.fTotalCost,V.Local.fMarginDollar)
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"MarginD",v.Local.fMarginDollar)
		'Set Margin Percent
		F.Intrinsic.Control.If(V.Local.fTotalPrice,<>,0)
			F.Intrinsic.Math.Div(V.Local.fMarginDollar,V.Local.fTotalPrice,V.Local.fMarginPerc)
			F.Intrinsic.Math.Mult(V.Local.fMarginPerc,100,V.Local.fMarginPerc)
		F.Intrinsic.Control.Else
			V.Local.fMarginPerc.Set(0)
		F.Intrinsic.Control.EndIf
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"MarginP",v.Local.fMarginPerc)
		
		
		
		
	'Total Price
	f.Intrinsic.Control.Case("Total")
		'Total Price was changed so we need to update the markup, margin percent and margin dollar
		v.Local.fTotalPrice.Set(v.Args.Value.Float)
		v.Local.fToTalCost.Set(v.DataTable.Pricing!(v.Args.RowIndex).TotalCost!FieldValFloat)
		'setting unit price
		f.Intrinsic.Control.If(v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat,>,0)
			f.Intrinsic.Math.Div(v.Local.fTotalPrice,v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat,v.Local.fUnitPrice)
		F.Intrinsic.Control.Else
			V.Local.fUnitPrice.Set(0)
		F.Intrinsic.Control.EndIf
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"UnitPrice",v.Local.fUnitPrice)
		'Set Markup Percent
		'Set Unit Cost
		v.Local.fUnitCost.set(v.DataTable.Pricing(v.Args.RowIndex).UnitCost!FieldValFloat)
		'Lets grab the formula and pull the markup from there
		f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		f.Intrinsic.Control.If(v.Local.sFormula(1).Trim,<>,"")
			'we have markups so we need to wipe the formula because they manually changed the price
			f.Intrinsic.String.Build("{0}@!@@!@",v.Local.sFormula(0).Float,v.Local.sFormula)
			f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Formula",v.Local.sFormula)
		f.Intrinsic.Control.EndIf

		f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		'( Unit Price / 1.Initial markup ) / Unit Cost will give us 1.Additional markups.
		f.Intrinsic.Math.Div(v.Local.sFormula(0).Float,100,v.Local.sFormula(0))
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,1,v.Local.sFormula(0))
		f.Intrinsic.Math.Div(v.Local.fUnitPrice,v.Local.sFormula(0).Float,v.Local.fMarkup)
		'We have the initila markup amount so lets find out the rest of the markup
		f.Intrinsic.Math.Div(v.Local.fMarkup,v.Local.fUnitCost,v.Local.fMarkup)
		'We can add 1.additional markup we just got to 1.initial
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,v.Local.fMarkup,v.Local.fMarkup)
		'markup now has 2. something in front of it, take it away and mult by 100
		f.Intrinsic.Math.Sub(v.Local.fMarkup,2,v.Local.fMarkup)
		f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)	
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Markup",v.Local.fMarkup)
		'Now we can get the margin dollar
		F.Intrinsic.Math.Sub(V.Args.Value.Float,V.Local.fTotalCost,V.Local.fMarginDollar)
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"MarginD",v.Local.fMarginDollar)
		F.Intrinsic.Control.If(V.Args.Value.Float,>,0)
			'Now lets figure out margin percent
			F.Intrinsic.Math.Div(V.Local.fMarginDollar,V.Args.Value.Float,V.Local.fMarginPerc)
		F.Intrinsic.Control.Else
			V.Local.fMarginPerc.Set(0)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Math.Mult(V.Local.fMarginPerc,100,V.Local.fMarginPerc)
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"MarginP",v.Local.fMarginPerc)
		
		
		
	'Margin Percent
	F.Intrinsic.Control.Case("MarginP")
		'Margin Percent was changed so we need to update Markup, Total Price, and margin dollar
		'We need to get Total Cost
		v.Local.fTotalCost.Set(v.DataTable.Pricing(v.Args.RowIndex).TotalCost!FieldValFloat)
		'we need to put margin percent into the correct format
		F.Intrinsic.Math.Div(V.Args.Value.Float,100,V.Local.fMarginPerc)
		F.Intrinsic.Math.Sub(1,V.Local.fMarginPerc,V.Local.fMarginPerc)
		F.Intrinsic.Control.If(V.Local.fMarginPerc,>,0)
			'now we can get total price from margin percent
			F.Intrinsic.Math.Div(V.Local.fTotalCost,V.Local.fMarginPerc,V.Local.fTotalPrice)
		F.Intrinsic.Control.Else
			V.Local.fTotalPrice.Set(0)
		F.Intrinsic.Control.EndIf
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Total",v.Local.fTotalPrice)
		f.Intrinsic.Control.If(v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat,>,0)
			'setting unit price
			f.Intrinsic.Math.Div(v.Local.fTotalPrice,v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat,v.Local.fUnitPrice)
		F.Intrinsic.Control.Else
			V.Local.fUnitPrice.Set(0)
		F.Intrinsic.Control.EndIf
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"UnitPrice",v.Local.fUnitPrice)
		
		'Now we can get margin dollars
		F.Intrinsic.Math.Sub(V.Local.fTotalPrice,V.Local.fTotalCost,V.Local.fMarginDollar)
		f.Data.DataView.SetValue("Pricing","PricingView",v.Args.RowHandle,"MarginD",v.Local.fMarginDollar)
		'Set Markup Percent
		'Set Unit Cost
		v.Local.fUnitCost.set(v.DataTable.Pricing(v.Args.RowIndex).UnitCost!FieldValFloat)
		'Lets grab the formula and pull the markup from there
		f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		f.Intrinsic.Control.If(v.Local.sFormula(1).Trim,<>,"")
			'we have markups so we need to wipe the formula because they manually changed the price
			f.Intrinsic.String.Build("{0}@!@@!@",v.Local.sFormula(0).Float,v.Local.sFormula)
			f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Formula",v.Local.sFormula)
		f.Intrinsic.Control.EndIf

		f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		'( Unit Price / 1.Initial markup ) / Unit Cost will give us 1.Additional markups.
		f.Intrinsic.Math.Div(v.Local.sFormula(0).Float,100,v.Local.sFormula(0))
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,1,v.Local.sFormula(0))
		f.Intrinsic.Math.Div(v.Local.fUnitPrice,v.Local.sFormula(0).Float,v.Local.fMarkup)
		'We have the initila markup amount so lets find out the rest of the markup
		f.Intrinsic.Math.Div(v.Local.fMarkup,v.Local.fUnitCost,v.Local.fMarkup)
		'We can add 1.additional markup we just got to 1.initial
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,v.Local.fMarkup,v.Local.fMarkup)
		'markup now has 2. something in front of it, take it away and mult by 100
		f.Intrinsic.Math.Sub(v.Local.fMarkup,2,v.Local.fMarkup)
		f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)	
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Markup",v.Local.fMarkup)
		
		
		
		
	'Margin Dollar
	F.Intrinsic.Control.Case("MarginD")
		'Margin Dollar was changed so we need to update Margin Percent, Total Price, Markup Percent
		'We need to get Total Cost
		v.Local.fTotalCost.Set(v.DataTable.Pricing(v.Args.RowIndex).TotalCost!FieldValFloat)
		'we need to add the margin dollar to total cost to get total price
		F.Intrinsic.Math.Add(V.Local.fTotalCost,V.Args.Value.Float,V.Local.fTotalPrice)
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Total",v.Local.fTotalPrice)
		F.Intrinsic.Control.If(V.Local.fTotalPrice,>,0)
			'we can now get the margin percent
			F.Intrinsic.Math.Div(V.Args.Value.Float,V.Local.fTotalPrice,V.Local.fMarginPerc)
		F.Intrinsic.Control.Else
			V.Local.fMarginPerc.Set(0)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Math.Mult(V.Local.fMarginPerc,100,V.Local.fMarginPerc)
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"MarginP",v.Local.fMarginPerc)
		f.Intrinsic.Control.If(v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat,>,0)
			'setting unit price
			f.Intrinsic.Math.Div(v.Local.fTotalPrice,v.DataTable.Pricing(V.Args.RowIndex).Quantity!FieldValFloat,v.Local.fUnitPrice)
		F.Intrinsic.Control.Else
			V.Local.fUnitPrice.Set(0)
		F.Intrinsic.Control.EndIf
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"UnitPrice",v.Local.fUnitPrice)
		'Set Markup Percent
		'Set Unit Cost
		v.Local.fUnitCost.set(v.DataTable.Pricing(v.Args.RowIndex).UnitCost!FieldValFloat)
		'Lets grab the formula and pull the markup from there
		f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		f.Intrinsic.Control.If(v.Local.sFormula(1).Trim,<>,"")
			'we have markups so we need to wipe the formula because they manually changed the price
			f.Intrinsic.String.Build("{0}@!@@!@",v.Local.sFormula(0).Float,v.Local.sFormula)
			f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Formula",v.Local.sFormula)
		f.Intrinsic.Control.EndIf

		f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sFormula)
		v.Local.sFormula.RedimPreserve(0,2)
		'( Unit Price / 1.Initial markup ) / Unit Cost will give us 1.Additional markups.
		f.Intrinsic.Math.Div(v.Local.sFormula(0).Float,100,v.Local.sFormula(0))
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,1,v.Local.sFormula(0))
		f.Intrinsic.Math.Div(v.Local.fUnitPrice,v.Local.sFormula(0).Float,v.Local.fMarkup)
		'We have the initila markup amount so lets find out the rest of the markup
		f.Intrinsic.Math.Div(v.Local.fMarkup,v.Local.fUnitCost,v.Local.fMarkup)
		'We can add 1.additional markup we just got to 1.initial
		f.Intrinsic.Math.Add(v.Local.sFormula(0).Float,v.Local.fMarkup,v.Local.fMarkup)
		'markup now has 2. something in front of it, take it away and mult by 100
		f.Intrinsic.Math.Sub(v.Local.fMarkup,2,v.Local.fMarkup)
		f.Intrinsic.Math.Mult(v.Local.fMarkup,100,v.Local.fMarkup)	
		f.Data.DataTable.SetValue("Pricing",v.Args.RowIndex,"Markup",v.Local.fMarkup)
		
		
		
F.Intrinsic.Control.EndSelect

f.Intrinsic.Control.If(v.Args.Column,<>,"Markup")
	'It was a column other than markup so we need to take away the qty we are on from its formula
	f.Intrinsic.Control.For(v.Local.iCount,v.DataView.Pricing!PricingView.RowCount--)
		'If we have a formula
		f.Intrinsic.Control.If(v.DataView.Pricing!PricingView(v.Local.iCount).Formula!FieldValTrim,<>,"")
			v.Local.sFormula.RedimPreserve(0,0)
			v.Local.sFormula.Set("")
			f.Intrinsic.String.Split(v.DataView.Pricing!PricingView(v.Local.iCount).Formula!FieldValTrim,"@!@",v.Local.sFormula)
			v.Local.sFormula.RedimPreserve(0,2)
			v.Local.sRet.RedimPreserve(0,0)
			v.Local.sRet.Set(v.Local.sFormula(2))
			f.Intrinsic.String.Split(v.Local.sRet,"','",v.Local.sRet)
			'We need to loop through the qty's to see if it matches ours
			f.Intrinsic.Control.For(v.Local.iCount2,v.Local.sRet.UBound)
				f.Intrinsic.Control.If(v.Local.sRet(v.Local.iCount2).Float,=,v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat)
					'They equal each other so we need to take the value out of the formula.
					v.Local.sRet(v.Local.iCount2).Set("")
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Next(v.Local.iCount2)
			'Delete duplicates mostly blanks so all we have to do is pop the array
			f.Intrinsic.String.RemoveArrayDuplicates(v.Local.sRet,v.Local.sRet)
			'Sort the array asc so the blanks come to the top
			f.Intrinsic.String.SortAsc(v.Local.sRet,v.Local.sRet)
			'If the first value is blank then pop the array
			f.Intrinsic.Control.If(v.Local.sRet(0).Trim,=,"","AND",v.Local.sRet.UBound,>,0)
				f.Intrinsic.Variable.PopArray(v.Local.sRet,v.Local.sRet)
			f.Intrinsic.Control.EndIf
			'We are done so we need to put the values back together and put the formula back
			f.Intrinsic.Control.If(v.Local.sRet.UBound,>,0)
				f.Intrinsic.String.Join(v.Local.sRet,"','",v.Local.sRet)
			f.Intrinsic.Control.EndIf
			v.Local.sFormula(2).Set(v.Local.sRet)
			'Join the formula back together.
			f.Intrinsic.Control.If(v.Local.sFormula.UBound,>,0)
				f.Intrinsic.String.Join(v.Local.sFormula,"@!@",v.Local.sFormula)
			f.Intrinsic.Control.EndIf
			f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iCount,"Formula",v.Local.sFormula)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.iCount)
	
f.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgpricinginfo_posttextmatrix_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.gsfgpricinginfo_posttextmatrix.End

Program.Sub.Focus.Start
F.Intrinsic.Control.SetErrorHandler("Focus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.sEval.Declare(String)
v.Local.fAmount.Declare(Float)
v.Local.sRet.Declare(String)
v.Local.fTemp.Declare(Float)


'check to make see if we are in the label_est form
F.Intrinsic.Control.If(V.Args.SCREEN,=,"F_LABEL_EST")
	'Case statement to switch tabs if on certain controls
	F.Intrinsic.Control.SelectCase(V.Args.CONTROLNAME)

		'Second tab
		F.Intrinsic.Control.Case("TXTMPART")
			Gui.F_Label_Est.tabx1.SetTab(1)
			Gui.F_Label_Est.txtMPart.SelectAll

		'Third tab
		F.Intrinsic.Control.Case("TXTLWC")
			Gui.F_Label_Est.tabx1.SetTab(2)
			Gui.F_Label_Est.txtLWC.SelectAll

		'Seventh tab
		F.Intrinsic.Control.Case("TXTHAREA")
			Gui.F_Label_Est.tabx1.SetTab(7)
			Gui.F_Label_Est.txtHArea.SelectAll
			
		
		'Lbs/M label
		f.Intrinsic.Control.Case("TXTOLBSMLABEL")
			'(Carrier Width / # Across) * Repeat Length * Weight MSI where PL is RM * 1.05
			'We need to get all material and put it to string
			f.Intrinsic.Control.If(v.Screen.F_Label_Est!chkRolls.Value,=,1)
				'rolls is clicked
				f.Data.DataView.ToString("FullTable","MaterialBottom","Part*!*Loc","","','",v.Local.sRet)
				f.Intrinsic.String.Build("SELECT Sum(GCG.LBS_PER_MSI) AS LBS_PER_MSI FROM GCG_3623_INVENTORY AS GCG LEFT JOIN V_INVENTORY_MSTR AS MST ON GCG.PART = MST.PART AND GCG.LOCATION1 = MST.LOCATION WHERE RTRIM(MST.PART) + RTRIM(MST.LOCATION) IN ('{0}') AND MST.PRODUCT_LINE = 'RM'",v.Local.sRet,v.Local.sRet)
				f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstRM",v.Local.sRet)
				f.Intrinsic.Control.If(v.ODBC.Con!rstRM.EOF,=,False)
					f.Intrinsic.String.Build("({0}/{1})*{2}*{3}*1.05",v.Screen.F_Label_Est!txtHLinerWidth.Text.Float,v.Screen.F_Label_Est!txtHFinAcross.Text.Float,v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.ODBC.Con!rstRM.FieldValFloat!LBS_PER_MSI,v.Local.sEval)
					f.Intrinsic.Control.Try
						f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
					f.Intrinsic.Control.CatchWhen(700)
						v.Local.fAmount.Set(0)
					f.Intrinsic.Control.EndTry
				f.Intrinsic.Control.EndIf
				F.ODBC.Con!rstRM.Close
				
			f.Intrinsic.Control.ElseIf(v.Screen.F_Label_Est!chkFanfold.Value,=,1)
				'fanfold is clicked
				'(Carrier Width / Inner Diameter) * Repeat Length * Weight MSI * 1.05
				f.Data.DataView.ToString("FullTable","MaterialBottom","Part*!*Loc","","','",v.Local.sRet)
				f.Intrinsic.String.Build("SELECT Sum(GCG.LBS_PER_MSI) AS LBS_PER_MSI FROM GCG_3623_INVENTORY AS GCG LEFT JOIN V_INVENTORY_MSTR AS MST ON GCG.PART = MST.PART AND GCG.LOCATION1 = MST.LOCATION WHERE RTRIM(MST.PART) + RTRIM(MST.LOCATION) IN ('{0}') AND MST.PRODUCT_LINE = 'RM'",v.Local.sRet,v.Local.sRet)
				f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstRM",v.Local.sRet)
				f.Intrinsic.Control.If(v.ODBC.Con!rstRM.EOF,=,False)
					f.Intrinsic.String.Build("({0}/{1})*{2}*{3}*1.05",v.Screen.F_Label_Est!txtHLinerWidth.Text.Float,v.Screen.F_Label_Est!txtHFinAcross.Text.Float,v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.ODBC.Con!rstRM.FieldValFloat!LBS_PER_MSI,v.Local.sEval)
					f.Intrinsic.Control.Try
						f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
					f.Intrinsic.Control.CatchWhen(700)
						v.Local.fAmount.Set(0)
					f.Intrinsic.Control.EndTry
				f.Intrinsic.Control.EndIf
				F.ODBC.Con!rstRM.Close
			f.Intrinsic.Control.ElseIf(v.Screen.F_Label_Est!chkSheets.Value,=,1)
				'sheets is clicked
				'Carrier Width * Repeat Length * Weight MSI * 1.05
				f.Data.DataView.ToString("FullTable","MaterialBottom","Part*!*Loc","","','",v.Local.sRet)
				f.Intrinsic.String.Build("SELECT Sum(GCG.LBS_PER_MSI) AS LBS_PER_MSI FROM GCG_3623_INVENTORY AS GCG LEFT JOIN V_INVENTORY_MSTR AS MST ON GCG.PART = MST.PART AND GCG.LOCATION1 = MST.LOCATION WHERE RTRIM(MST.PART) + RTRIM(MST.LOCATION) IN ('{0}') AND MST.PRODUCT_LINE = 'RM'",v.Local.sRet,v.Local.sRet)
				f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstRM",v.Local.sRet)
				f.Intrinsic.Control.If(v.ODBC.Con!rstRM.EOF,=,False)
					f.Intrinsic.String.Build("{0}*{1}*{2}*1.05",v.Screen.F_Label_Est!txtHLinerWidth.Text.Float,v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.ODBC.Con!rstRM.FieldValFloat!LBS_PER_MSI,v.Local.sEval)
					f.Intrinsic.Control.Try
						f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
					f.Intrinsic.Control.CatchWhen(700)
						v.Local.fAmount.Set(0)
					f.Intrinsic.Control.EndTry
				f.Intrinsic.Control.EndIf
				F.ODBC.Con!rstRM.Close
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtOLbsMLabel.Text(v.Local.fAmount)
		'lbs/Carton
		f.Intrinsic.Control.Case("TXTLBSCART")
			f.Intrinsic.Control.If(v.Screen.F_Label_Est!chkRolls.Value,=,1)
				'rolls is clicked
				'WeightM * ((# of labels per roll * # of rolls per carton)/1000)
				f.Intrinsic.String.Build("{0}*(({1}*{2})/1000)",v.Screen.F_Label_Est!txtOLbsMLabel.Text.Float,v.Screen.F_Label_Est!txtRLblRoll.Text.Float,v.Screen.F_Label_Est!txtRRollBox.Text.Float,v.Local.sEval)
				f.Intrinsic.Control.Try
					f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
				f.Intrinsic.Control.CatchWhen(700)
					v.Local.fAmount.Set(0)
				f.Intrinsic.Control.EndTry
				
			f.Intrinsic.Control.ElseIf(v.Screen.F_Label_Est!chkFanfold.Value,=,1)
				'fanfold is clicked
				'WeightM * ((LabelsStack*StacksCarton)/1000)
				f.Intrinsic.String.Build("{0}*(({1}*{2})/1000)",v.Screen.F_Label_Est!txtOLbsMLabel.Text.Float,v.Screen.F_Label_Est!txtFLblStack.Text.Float,v.Screen.F_Label_Est!txtFStackBox.Text.Float,v.Local.sEval)
				f.Intrinsic.Control.Try
					f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
				f.Intrinsic.Control.CatchWhen(700)
					v.Local.fAmount.Set(0)
				f.Intrinsic.Control.EndTry
			f.Intrinsic.Control.ElseIf(v.Screen.F_Label_Est!chkSheets.Value,=,1)
				'sheets is clicked
				'WeightM * ((SheetsStack * StacksCarton)/1000)
				f.Intrinsic.String.Build("{0}*(({1}*{2})/1000)",v.Screen.F_Label_Est!txtOLbsMLabel.Text.Float,v.Screen.F_Label_Est!txtSSheetStack.Text.Float,v.Screen.F_Label_Est!txtSStackBox.Text.Float,v.Local.sEval)
				f.Intrinsic.Control.Try
					f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
				f.Intrinsic.Control.CatchWhen(700)
					v.Local.fAmount.Set(0)
				f.Intrinsic.Control.EndTry
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtLbsCart.Text(v.Local.fAmount)
		'Roll OD Actual
		f.Intrinsic.Control.Case("TXTRODACT")
			f.Intrinsic.Control.If(v.Screen.F_Label_Est!chkRolls.Value,=,1)
				'rolls is clicked
				f.Data.DataView.ToString("FullTable","MaterialBottom","Part*!*Loc","","','",v.Local.sRet)
				f.Intrinsic.String.Build("SELECT Sum(GCG.CALIPER_THICKNESS) AS CALIPER_THICKNESS FROM GCG_3623_INVENTORY AS GCG LEFT JOIN V_INVENTORY_MSTR AS MST ON GCG.PART = MST.PART AND GCG.LOCATION1 = MST.LOCATION WHERE RTRIM(MST.PART) + RTRIM(MST.LOCATION) IN ('{0}') AND MST.PRODUCT_LINE = 'RM'",v.Local.sRet,v.Local.sRet)
				f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstCal",v.Local.sRet)
				f.Intrinsic.Control.If(v.ODBC.Con!rstCal.EOF,=,False)
					'SQRT(((Roll Length feet * Caliper)/0.065476)+Inner Diameter^2)
					f.Intrinsic.Control.Try
'						f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
						f.Intrinsic.Math.Div(v.Screen.F_Label_Est!txtRLblRoll.Text,v.Screen.F_Label_Est!txtHFinAcross.Text,v.Local.fAmount)
						f.Intrinsic.Math.Mult(v.Screen.F_Label_Est!txtHRepeatLen.Text.Float,v.Screen.F_Label_Est!txtRLblRoll.Text.Float,v.Local.fAmount)
						f.Intrinsic.Math.Div(v.Local.fAmount,12,v.Local.fAmount)
						f.Intrinsic.Math.Mult(v.Local.fAmount,v.ODBC.Con!rstCal.FieldValFloat!CALIPER_THICKNESS,v.Local.fAmount)
						f.Intrinsic.Math.Div(v.Local.fAmount,0.065476,v.Local.fAmount)
						f.Intrinsic.Math.Evaluate("[v.Screen.F_Label_Est!txtRCoreSize.Text.Float]^2",v.Local.fTemp)
						f.Intrinsic.Math.Add(v.Local.fAmount,v.Local.fTemp,v.Local.fAmount)
						f.Intrinsic.Math.Evaluate("[v.Local.fAmount]^0.5",v.Local.fAmount)
					f.Intrinsic.Control.CatchWhen(700)
						v.Local.fAmount.Set(0)
					f.Intrinsic.Control.EndTry
				f.Intrinsic.Control.EndIf
				f.ODBC.Con!rstCal.Close
				
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Math.Round(v.Local.fAmount,4,v.Local.fAmount)
			Gui.F_Label_Est.txtRODAct.Text(v.Local.fAmount)
			
		
			
		F.Intrinsic.Control.CaseElse
			Gui.F_Label_Est.[v.Args.CONTROLNAME].SelectAll

	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.Else
	'Select all when you gain focus of a text box
	Gui.[V.Args.SCREEN].[V.Args.CONTROLNAME].SelectAll
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Focus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Focus.End

Program.Sub.DropDownListlhrq_change.Start
F.Intrinsic.Control.SetErrorHandler("dropdownlistlhrq_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.fLaborHour.Declare(Float)
V.Local.fTLaborHour.Declare(Float)
V.Local.i.Declare(Long)
V.Local.iCount.Declare(Long,1)
V.Local.sIndex.Declare(String)
v.Local.sFilter.Declare(string)

'this is going to get the time in hours it takes to make the specific qty
'labor Qty is in pieces per hour so we need to conver it to labor hours
'Setup + (Run Qty / Labor Qty) = value
' The value for each row needs to be added together to create the displayed labor hours
'we are not including setup in this

f.Data.DataTable.DeleteRow("LaborHours")
F.Intrinsic.Control.If(V.Screen.F_Label_Est!dropdownlistLHRQ.Text,=,"ALL","OR",V.Screen.F_Label_Est!dropdownlistLHRQ.Text,=,"")
	V.Local.sFilter.Set("LMO = 'L'")
F.Intrinsic.Control.Else
	f.Intrinsic.String.Build("PART = '{0}' AND LMO = 'L' ",V.Screen.F_Label_Est!dropdownlistLHRQ.Text,V.Local.sFilter)
F.Intrinsic.Control.EndIf

f.Data.DataView.Create("FullTable","LaborHoursTemp",22,V.Local.sFilter,"")
f.Data.DataView.ToDataTable("FullTable","LaborHoursTemp","LaborHoursTemp",True)
f.Data.DataView.Close("FullTable","LaborHoursTemp")
f.Intrinsic.Control.For(v.Local.iCount,9)
	f.Intrinsic.Control.If(v.DataView.RunQty!RunQtyView(v.Local.iCount).Qty!FieldValFloat,>,0)
		f.Intrinsic.String.Build("IIF([Qty] > 0,[Setup] + ({0} / [Qty]),[Setup])",v.DataView.RunQty!RunQtyView(v.Local.iCount).Qty!FieldValFloat,v.Local.sFilter)
		f.Data.DataTable.AddExpressionColumn("LaborHoursTemp","Hours","Float",v.Local.sFilter)
		'we have the values now we need to sum it up and add it to the dt
		f.Data.DataTable.Compute("LaborHoursTemp","SUM(HOURS)","",V.Local.fTLaborHour)
		f.Data.DataTable.RemoveColumn("LaborHoursTemp","Hours")
	f.Intrinsic.Control.Else
		v.Local.fTLaborHour.Set(0)
	f.Intrinsic.Control.EndIf
	'add the values to the labor hours dt
	f.Intrinsic.Math.Round(v.Local.fTLaborHour,3,v.Local.fTLaborHour)
	f.Data.DataTable.AddRow("LaborHours","Qty",v.DataView.RunQty!RunQtyView(v.Local.iCount).Qty!FieldValFloat,"Labor",v.Local.fTLaborHour)
f.Intrinsic.Control.Next(v.Local.iCount)
f.Data.DataTable.Close("LaborHoursTemp")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("dropdownlistlhrq_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_label_est_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.DropDownListlhrq_change.End

Program.Sub.CreateParts.Start
F.Intrinsic.Control.SetErrorHandler("CreateParts_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sMessage.Declare(String)
V.Local.ssql.Declare(String)
V.Local.sPart.Declare(String)

'The user does not want to create different revs for the different parts.
F.Intrinsic.String.RPad(V.Screen.F_Label_Est!txtFinishPart.Text," ",20,V.Local.sPart)

F.Intrinsic.String.Build("Select PART from V_INVENTORY_MSTR where PART = '{0}' AND LOCATION = '{1}'",V.Local.sPart.Trim,V.Screen.F_Label_Est!txtFinishLoc.Text,V.Local.ssql)
F.ODBC.Connection!con.openrecordsetro("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)
	Function.Global.Inventory.CreatePart(V.Local.sPart.Trim,V.Screen.F_Label_Est!txtHUM.Text,V.Screen.F_Label_Est!txtdesc.Text,V.Screen.F_Label_Est!txtFinishLoc.Text,V.Screen.F_Label_Est!ddlHPL.Text,"","","","","NOMAINT ")
	F.Intrinsic.String.Build("Part {0} has been created.", V.Local.sPart, V.Local.sMessage)
	F.Intrinsic.UI.Msgbox(V.Local.sMessage, "CREATION SUCCESSFUL")
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("Part {0} already exists in inventory. Part was not created.", V.Local.sPart.Trim, V.Local.sMessage)
	F.Intrinsic.UI.Msgbox(V.Local.sMessage, "Part Exists Already")
F.Intrinsic.Control.endif
F.ODBC.con!rst.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("CreateParts_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.CreateParts.End

Program.Sub.Label_Info_Lost_Focus.Start
F.Intrinsic.Control.SetErrorHandler("Label_Info_Lost_Focus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.fAmount.Declare(Float)

f.Intrinsic.Control.SelectCase(v.Args.ControlName)
	'Width and GAp Across
	f.Intrinsic.Control.CaseAny("TXTHLBLWIDTH","TXTOGAPACROSS")
		'We are going to add width and gap to equal liner width
		f.Intrinsic.Math.Add(v.Screen.F_Label_Est!txtHLblWidth.Text.Float,v.Screen.F_Label_Est!txtOGapAcross.Text.Float,v.Local.fAmount)
		Gui.F_Label_Est.txtHLinerWidth.Text(v.Local.fAmount)
	'Depth and Gap Down
	f.Intrinsic.Control.CaseAny("TXTHLBLDEPTH","TXTOGAPDOWN")
		'We are going to add width and gap to equal liner width
		f.Intrinsic.Math.Add(v.Screen.F_Label_Est!txtHLblDepth.Text.Float,v.Screen.F_Label_Est!txtOGapDown.Text.Float,v.Local.fAmount)
		Gui.F_Label_Est.txtHRepeatLen.Text(v.Local.fAmount)
			
f.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Label_Info_Lost_Focus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Label_Info_Lost_Focus.End

Program.Sub.UpchargeButtons.Start
F.Intrinsic.Control.SetErrorHandler("UpchargeButtons_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iRows.Declare(Long)
V.Local.iCount.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.fMarkup.Declare(Float)
V.Local.sText.Declare(String)
V.Local.sBlob.Declare(String)
V.Local.fInitial.Declare(Float)
V.Local.sRet.Declare(String)
V.Local.iCount2.Declare(Long)
V.Local.bExist.Declare(Boolean)
V.Local.iCount3.Declare(Long)

F.Intrinsic.Control.SelectCase(V.Args.ControlName)
	'Applied Grid
	F.Intrinsic.Control.Case("GSGCQTYAPPLIED")
		f.Intrinsic.Control.If(v.Args.Column,=,"Applied")
			'They clicked the applied button so we need to check the box so that the expression column is evaluated
			f.Data.DataTable.SetValue("QtyApplied",v.Args.RowIndex,"Applied",v.Args.CellValue.Not)

			'We need to get the sum of the markup table divided by 100 to get the decimal percentage
			f.Data.DataTable.Compute("Markup","(Sum(Markup) / 100) + 1","",v.Local.fMarkup)
			f.Intrinsic.Control.IIF(v.Local.fMarkup,=,0,1,v.Local.fMarkup,v.Local.fMarkup)
			'Now that we have the decimal percentage we need to delete and recreate the expression column
			f.Data.DataTable.RemoveColumn("QtyApplied","UnitPrice")
			f.Intrinsic.Math.Div(v.Screen.F_Upcharge!txtInitial.Text.Float,100,v.Local.fInitial)
			f.Intrinsic.Math.Add(v.Local.fInitial,1,v.Local.fInitial)
			f.Intrinsic.String.Build("(UnitCost * {0}) * {1}",v.Local.fInitial,v.Local.fMarkup,v.Local.sText)
			f.Data.DataTable.AddExpressionColumn("QtyApplied","UnitPrice","Float",v.Local.sText)
			f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","Qty > 0")
			f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","")
		f.Intrinsic.Control.EndIf
		
	'CellValueChange Markup Grid
	F.Intrinsic.Control.Case("GSFGMARKUP")
		f.Intrinsic.Control.If(v.Args.Column,=,"Markup")
			'Markup was changed so we need to adjust the expression column
			'We need to get the sum of the markup table divided by 100 to get the decimal percentage
			f.Data.DataTable.Compute("Markup","(Sum(Markup) / 100) + 1","",v.Local.fMarkup)
			f.Intrinsic.Control.IIF(v.Local.fMarkup,=,0,1,v.Local.fMarkup,v.Local.fMarkup)
			'Now that we have the decimal percentage we need to delete and recreate the expression column
			f.Data.DataTable.RemoveColumn("QtyApplied","UnitPrice")
			f.Intrinsic.Math.Div(v.Screen.F_Upcharge!txtInitial.Text.Float,100,v.Local.fInitial)
			f.Intrinsic.Math.Add(v.Local.fInitial,1,v.Local.fInitial)
			f.Intrinsic.String.Build("(UnitCost * {0}) * {1}",v.Local.fInitial,v.Local.fMarkup,v.Local.sText)
			f.Data.DataTable.AddExpressionColumn("QtyApplied","UnitPrice","Float",v.Local.sText)
			f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","Qty > 0")
			f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","")
		f.Intrinsic.Control.EndIf
		
	'Initial Value txt box lost focus
	F.Intrinsic.Control.Case("TXTINITIAL")
		'We need to get the sum of the markup table divided by 100 to get the decimal percentage
		f.Data.DataTable.Compute("Markup","(Sum(Markup) / 100) + 1","",v.Local.fMarkup)
		f.Intrinsic.Control.IIF(v.Local.fMarkup,=,0,1,v.Local.fMarkup,v.Local.fMarkup)
		'Now that we have the decimal percentage we need to delete and recreate the expression column
		f.Data.DataTable.RemoveColumn("QtyApplied","UnitPrice")
		f.Intrinsic.Math.Div(v.Screen.F_Upcharge!txtInitial.Text.Float,100,v.Local.fInitial)
		f.Intrinsic.Math.Add(v.Local.fInitial,1,v.Local.fInitial)
		f.Intrinsic.String.Build("(UnitCost * {0}) * {1}",v.Local.fInitial,v.Local.fMarkup,v.Local.sText)
		f.Data.DataTable.AddExpressionColumn("QtyApplied","UnitPrice","Float",v.Local.sText)
		f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","Qty > 0")
		f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","")
		
	'Save button
	F.Intrinsic.Control.Case("CMDMARKSAVE")
		'We are saving the markups
		'We need to get rid of blank markups
		f.Data.DataView.Create("Markup","MarkupTemp",22,"Markup IS NULL","")
		f.Intrinsic.Control.For(v.Local.iCount,v.DataView.Markup!MarkupTemp.RowCount--,0,-1)
			Function.Data.DataTable.DeleteRow("Markup",v.DataView.Markup!MarkupTemp(v.Local.iCount).DataTableIndex)
		f.Intrinsic.Control.Next(v.Local.iCount)
		f.Data.DataView.Close("Markup","MarkupTemp")
		
		'Lets first recalculate to make sure everythign is correct
		'We need to get the sum of the markup table divided by 100 to get the decimal percentage
		f.Data.DataTable.Compute("Markup","(Sum(Markup) / 100) + 1","",v.Local.fMarkup)
		f.Intrinsic.Control.IIF(v.Local.fMarkup,=,0,1,v.Local.fMarkup,v.Local.fMarkup)
		'Now that we have the decimal percentage we need to delete and recreate the expression column
		f.Data.DataTable.RemoveColumn("QtyApplied","UnitPrice")
		f.Intrinsic.Math.Div(v.Screen.F_Upcharge!txtInitial.Text.Float,100,v.Local.fInitial)
		f.Intrinsic.Math.Add(v.Local.fInitial,1,v.Local.fInitial)
		f.Intrinsic.String.Build("(UnitCost * {0}) * {1}",v.Local.fInitial,v.Local.fMarkup,v.Local.sText)
		f.Data.DataTable.AddExpressionColumn("QtyApplied","UnitPrice","Float",v.Local.sText)
		f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","Qty > 0")
		f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","")
		
		'Now we can build the formula
		f.Data.DataView.ToString("Markup","MarkupView","Markup*!*Description","*!*","&!&",v.Local.sText)
		f.Data.DataView.Create("QtyApplied","Applied",22,"Applied = True","")
		f.Data.DataView.ToString("QtyApplied","Applied","Qty","","','",v.Local.sBlob)
		'f.Data.DataView.Close("QtyApplied","Applied")
		f.Intrinsic.String.Build("{0}@!@{1}@!@{2}",v.Screen.F_Upcharge!txtInitial.Text.Float,v.Local.sText.Trim,v.Local.sBlob.Trim,v.Local.sText)
		
		f.Data.DataTable.Compute("Markup","Sum(Markup)","",v.Local.fMarkup)
		f.Intrinsic.Math.Add(v.Local.fMarkup,v.Screen.F_Upcharge!txtInitial.Text.Float,v.Local.fMarkup)
		
		f.Intrinsic.String.Split(v.Local.sBlob,"','",v.Local.sBlob)
		f.Intrinsic.Control.For(v.Local.iCount,v.DataView.QtyApplied!Applied.RowCount--)
			f.Intrinsic.String.Build("Quantity = {0}",v.DataView.QtyApplied!Applied(v.Local.iCount).Qty!FieldValFloat,v.Local.sSQL)
			f.Data.DataTable.Select("Pricing",v.Local.sSQL,v.Local.sSQL)
			f.Intrinsic.String.Split(v.Local.sSQL,"*!*",v.Local.sSQL)
			f.Data.DataTable.SetValue("Pricing",v.Local.sSQL.Long,"Formula",v.Local.sText)
			'We need to set the values back to the pricing grid and let them everything be recalculated based on the change
			F.Intrinsic.Control.CallSub(Gsfgpricinginfo_posttextmatrix,"Column","Markup","RowIndex",v.Local.sSQL.Long,"Markup",v.Local.fMarkup,"UnitPrice",v.DataView.QtyApplied!Applied(v.Local.iCount).UnitPrice!FieldValFloat)
		f.Intrinsic.Control.Next(v.Local.iCount)
		f.Data.DataView.Close("QtyApplied","Applied")

		'We need to loop through pricing and make sure that the qty's we have here are not in any other qty formula other than the ones here? That doesn't make sense.
		'checking to see if qty's other than the ones we have checked have our qty in it. if so take it out of the other formula. better? You'll see what I'm doing in the code. sorry.
		f.Intrinsic.Control.For(v.Local.iCount,v.DataView.Pricing!PricingView.RowCount--)
			'If we have a formula
			f.Intrinsic.Control.If(v.DataView.Pricing!PricingView(v.Local.iCount).Formula!FieldValTrim,<>,"")
				'We have a formula so we need to loop through and first see if qty is not in our list
				v.Local.bExist.Set(False)
				f.Intrinsic.Control.For(v.Local.iCount2,v.Local.sBlob.UBound)
					'Check to see if the qty is the same.
					f.Intrinsic.Control.If(v.Local.sBlob(v.Local.iCount2).Float,=,v.DataView.Pricing!PricingView(v.Local.iCount).Quantity!FieldValFloat)
						'We are looking at a qty from our list so we can skip this loop and go to the next qty
						v.Local.bExist.Set(True)
						f.Intrinsic.Control.ExitFor(v.Local.iCount2)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.Next(v.Local.iCount2)
				'Check to see if the qty existed or not
				f.Intrinsic.Control.If(v.Local.bExist,=,False)
					'The Qty was not one of ours so we need to check it's formula
					v.Local.sRet.Redim(0,0)
					v.Local.sRet.Set("")
					f.Intrinsic.String.Split(v.DataView.Pricing!PricingView(v.Local.iCount).Formula!FieldValTrim,"@!@",v.Local.sRet)
					v.Local.sRet.RedimPreserve(0,2)
					'We need to set position 2 to position 0
					v.Local.sText.Set(v.Local.sRet(2))
					'We can now split sText at ',' to get its different quantities
					f.Intrinsic.String.Split(v.Local.sText,"','",v.Local.sText)
					'We can now loop through and see if any of the numbers match with our values
					f.Intrinsic.Control.For(v.Local.iCount2,v.Local.sBlob.UBound)
						'We need to also loop through the new values
						f.Intrinsic.Control.For(v.Local.iCount3,v.Local.sText.UBound)
							'Check to see if the values match
							f.Intrinsic.Control.If(v.Local.sBlob(v.Local.iCount2).Float,=,v.Local.sText(v.Local.iCount3).Float)
								'The values match so we need to take it away from the formula
								v.Local.sText(v.Local.iCount3).Set("")
							f.Intrinsic.Control.EndIf
						f.Intrinsic.Control.Next(v.Local.iCount3)
					f.Intrinsic.Control.Next(v.Local.iCount2)
					'We are finished updating the qty formula values
					'Delete duplicates mostly blanks so all we have to do is pop the array
					f.Intrinsic.String.RemoveArrayDuplicates(v.Local.sText,v.Local.sText)
					'Sort the array asc so the blanks come to the top
					f.Intrinsic.String.SortAsc(v.Local.sText,v.Local.sText)
					'If the first value is blank then pop the array
					f.Intrinsic.Control.If(v.Local.sText(0).Trim,=,"","AND",v.Local.sText.UBound,>,0)
						f.Intrinsic.Variable.PopArray(v.Local.sText,v.Local.sText)
					f.Intrinsic.Control.EndIf
					'Now that we have everything taken care of we need to put the Qty back into the Formula.
					f.Intrinsic.String.Join(v.Local.sText,"','",v.Local.sRet(2))
					'Join the formula back together and put it back in the table
					f.Intrinsic.String.Join(v.Local.sRet,"@!@",v.Local.sRet)
					f.Data.DataView.SetValue("Pricing","PricingView",v.Local.iCount,"Formula",v.Local.sRet)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.iCount)
	
		'Now that everything is done saving we can clear out the screen for the next time
		Gui.f_Upcharge.txtInitial.Text("")
		f.Data.DataTable.DeleteRow("Markup")
		f.Data.DataTable.DeleteRow("QtyApplied")
	
	
		Gui.F_Upcharge..Visible(False)
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("UpchargeButtons_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.UpchargeButtons.End

Program.Sub.gsfgpricinginfo_mousedown.Start
F.Intrinsic.Control.SetErrorHandler("gsfgpricinginfo_mousedown_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sLines.Declare(String)
V.Local.iCount.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.fMarkup.Declare(Float)
V.Local.fInitial.Declare(Float)

'If they clicked on Markup then we need to open the screen and allow them to put in markup percentages
f.Intrinsic.Control.If(v.Args.Column,=,"Markup")
	v.Global.iPriceRow.Set(v.Args.RowIndex)
	'We need to put the pricing dt to string only bringing in Qty and Unit Cost
	f.Data.DataView.ToString("Pricing","PricingView","Quantity*!*UnitCost","*!*","&!&",v.Local.sRet)
	'Fill qty applied dt with this info
	f.Intrinsic.Control.If(v.DataTable.QtyTemp.Exists,=,True)
		f.Data.DataTable.Close("QtyTemp")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromString("QtyTemp",v.Local.sRet,"Qty*!*UnitCost","Float*!*Float","*!*","&!&",True)
	f.Data.DataTable.DeleteRow("QtyApplied")
	f.Data.DataTable.Merge("QtyTemp","QtyApplied",True,2)
	f.Data.DataTable.Close("QtyTemp")
	f.Data.DataTable.SetValue("QtyApplied",-1,"Applied",False)
	f.Intrinsic.String.Build("Qty = {0}",v.DataTable.Pricing(v.Args.RowIndex).Quantity!FieldValFloat,v.Local.sRet)
	f.Data.DataView.Create("QtyApplied","QtyTemp",22,v.Local.sRet,"")
	f.Data.DataView.SetValue("QtyApplied","QtyTemp",-1,"Applied",True)
	f.Data.DataView.Close("QtyApplied","QtyTemp")
	
	'We need to get the markups from the Formula field
	f.Intrinsic.String.Split(v.DataTable.Pricing(v.Args.RowIndex).Formula!FieldValTrim,"@!@",v.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.UBound,>,0)
		'We have a formula so lets set them
		v.Local.sRet.RedimPreserve(0,2)
		'position 0 is initial value
		Gui.F_Upcharge.txtInitial.Text(v.Local.sRet(0).Float)
		'position 1 is Markup
		f.Intrinsic.Control.If(v.Local.sRet(1).Trim,<>,"")
			f.Intrinsic.Control.If(v.DataTable.QtyTemp.Exists,=,True)
				f.Data.DataTable.Close("QtyTemp")
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.CreateFromString("QtyTemp",v.Local.sRet(1).Trim,"Markup*!*Description","Float*!*String","*!*","&!&",True)
			f.Data.DataTable.DeleteRow("Markup")
			f.Data.DataTable.Merge("QtyTemp","Markup",True,2)
			f.Data.DataTable.Close("QtyTemp")
		f.Intrinsic.Control.EndIf
		'position 2 is Applied
		f.Intrinsic.Control.If(v.Local.sRet(2).Trim,<>,"")
			f.Intrinsic.String.Build("Qty IN ('{0}')",v.Local.sRet(2).Trim,v.Local.sRet(2))
			f.Data.DataView.Create("QtyApplied","Applied",22,v.Local.sRet(2),"Qty Asc")
			f.Data.DataView.SetValue("QtyApplied","Applied",-1,"Applied",True)
			f.Data.DataView.Close("QtyApplied","Applied")
		f.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Else
		'no markups
		'There is no formula so just grab the value in the cell and set it to Initial value
		f.Data.DataTable.DeleteRow("Markup")
		Gui.F_Upcharge.txtInitial.Text(v.Args.CellValue.Float)
	F.Intrinsic.Control.EndIf

	'We need to get the sum of the markup table divided by 100 to get the decimal percentage
	f.Data.DataTable.Compute("Markup","(Sum(Markup) / 100) + 1","",v.Local.fMarkup)
	f.Intrinsic.Control.IIF(v.Local.fMarkup,=,0,1,v.Local.fMarkup,v.Local.fMarkup)
	'Now that we have the decimal percentage we need to delete and recreate the expression column
	f.Data.DataTable.RemoveColumn("QtyApplied","UnitPrice")
	f.Intrinsic.Math.Div(v.Screen.F_Upcharge!txtInitial.Text.Float,100,v.Local.fInitial)
	f.Intrinsic.Math.Add(v.Local.fInitial,1,v.Local.fInitial)
	f.Intrinsic.String.Build("(UnitCost * {0}) * {1}",v.Local.fInitial,v.Local.fMarkup,v.Local.sRet)
	f.Data.DataTable.AddExpressionColumn("QtyApplied","UnitPrice","Float",v.Local.sRet)
	f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","Qty > 0")
	f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","")

	Gui.F_Upcharge..Visible(True)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgpricinginfo_mousedown_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.gsfgpricinginfo_mousedown.End

Program.Sub.ClearGroup1.Start
F.Intrinsic.Control.SetErrorHandler("ClearGroup1_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Clear fields
Gui.F_Label_Est.txtCustomer.Text("")
Gui.F_Label_Est.txtContact.Text("")
Gui.F_Label_Est.chkHContPricing.Value(0)
Gui.F_Label_Est.txtCustBg.Text("")
Gui.F_Label_Est.txtCustName.Text("")
Gui.F_Label_Est.txtCustAddress.Text("")
Gui.F_Label_Est.txtCustCity.Text("")
Gui.F_Label_Est.txtCustState.Text("")
Gui.F_Label_Est.txtCustZip.Text("")
Gui.F_Label_Est.txtCustCountry.Text("")
Gui.F_Label_Est.txtCustPhone.Text("")
Gui.F_Label_Est.txtCustFax.Text("")
Gui.F_Label_Est.txtCustEmail.Text("")
Gui.F_Label_Est.mltCustNotes.Text("")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ClearGroup1_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.ClearGroup1.End

Program.Sub.ClearGroup2.Start
F.Intrinsic.Control.SetErrorHandler("ClearGroup2_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.F_Label_Est.mltHEstNote.Text("")
Gui.F_Label_Est.txtHlblWidth.Text("")
Gui.F_Label_Est.txtHlblDepth.Text("")
Gui.F_Label_Est.txtHLinerWidth.Text("")
Gui.F_Label_Est.txtHFinAcross.Text("")
Gui.F_Label_Est.txtHRepeatLen.Text("")
Gui.F_Label_Est.txtFinishPart.Text("")
Gui.F_Label_Est.txtFinishLoc.Text("")
Gui.F_Label_Est.txtFinishRouter.Text("")
Gui.F_Label_Est.txtFinishRev.Text("")
Gui.F_Label_Est.txtDesc.Text("")
Gui.F_Label_Est.txtMPart.Text("")
Gui.F_Label_Est.txtMPartRev.Text("")
Gui.F_Label_Est.txtMPartDesc.Text("")
Gui.F_Label_Est.ddlMUM.Text("")
Gui.F_Label_Est.ddlMLabelShape.Text("")
Gui.F_Label_Est.txtMWidthF.Text("")
Gui.F_Label_Est.txtMWidthT.Text("")
Gui.F_Label_Est.txtMLengthF.Text("")
Gui.F_Label_Est.txtMLengthT.Text("")
Gui.F_Label_Est.txtMMatUsed.Text("")
Gui.F_Label_Est.txtMACRDie.Text("")
Gui.F_Label_Est.txtMGapAcross.Text("")
Gui.F_Label_Est.txtMGapDown.Text("")
Gui.F_Label_Est.txtMRepeat.Text("")
Gui.F_Label_Est.chkMCreateNonInv.Value(0)
Gui.F_Label_Est.txtLWC.Text("")
Gui.F_Label_Est.txtLWCDesc.Text("")
Gui.F_Label_Est.txtHArea.Text("")
Gui.F_Label_Est.txtHBranch.Text("")
Gui.F_Label_Est.txtHShipVia.Text("")
Gui.F_Label_Est.txtHCarrier.Text("")
Gui.F_Label_Est.ddlHProcessGrp.Text("")
Gui.F_Label_Est.txtHFob.Text("")
Gui.F_Label_Est.txtHTerms.Text("")
Gui.F_Label_Est.txtHProject.Text("")
Gui.F_Label_Est.txtHTrdFreight.Text("")
Gui.F_Label_Est.txtHFreightZone.Text("")
Gui.F_Label_Est.txtHAcrDie.Text("")
Gui.F_Label_Est.txtHAcrPress.Text("")
Gui.F_Label_Est.chk4Color.Value(0)
Gui.F_Label_Est.dtpEstDate.Value(v.Ambient.Date)
gui.F_Label_Est.dtpLastSaved.Value(v.Ambient.Date)
Gui.F_Label_Est.chkPrime.Value(False)
Gui.F_Label_Est.chkPrecision.Value(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ClearGroup2_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.ClearGroup2.End

Program.Sub.WebLaunch.Start
F.Intrinsic.Control.SetErrorHandler("WebLaunch_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iHandle.Declare(Long)

f.Intrinsic.Control.SelectCase(v.Args.ControlName)
	'Material
	f.Intrinsic.Control.Case("GSFGMATERIAL")
	V.Local.sRet.Set(v.DataView.Website!Material(v.Args.RowHandle).Link!FieldVal)
	'Labor
	f.Intrinsic.Control.Case("GSFGLABOR")
	V.Local.sRet.Set(v.DataView.Website!Labor(v.Args.RowHandle).Link!FieldVal)
	'Other
	f.Intrinsic.Control.Case("GSFGOTHER")
	V.Local.sRet.Set(v.DataView.Website!Other(v.Args.RowHandle).Link!FieldVal)
F.Intrinsic.Control.EndSelect

f.Intrinsic.Task.ShellExec(v.Local.iHandle,"Open",v.Local.sRet,"","",1)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("WebLaunch_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(F_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.WebLaunch.End

Program.Sub.OPCodeComments.Start
F.Intrinsic.Control.SetErrorHandler("OPCodeComments_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
v.Local.fTotal.Declare(float)
v.Local.sFormulaM.Declare(String)
v.Local.sLine.Declare(String)
v.Local.iCount.Declare(Long)
v.Local.sRet.Declare(String)


'Case for OK button, Grid control and creating the grid
f.Intrinsic.Control.SelectCase(v.Args.ControlName)
	'OK button was clicked
	f.Intrinsic.Control.Case("CMDOK")
		'We need to create the formula to put in the formulaM line
		f.Data.DataView.Create("OPCode","OPCodeFormula",22,"Selection = TRUE","")
		F.Data.DataView.ToString("OPCode","OPCodeFormula","OPERATION*!*VALUE*!*COUNT","*!*","@!@",v.Local.sRet)
		f.Data.DataView.Close("OPCode","OPCodeFormula")
		f.Intrinsic.String.Build("{0}$!${1}",v.Screen.F_OPCodeComments!txtInitial.Text,v.Local.sRet,v.Local.sRet)
		'We need to Compute the values from the grid plus the initial value
		'If meta data pos 1 is labor we need to to convert the total over to hours from minutes
		f.Intrinsic.Control.If(v.Screen.F_OPCodeComments!txtInitial.MetaData2,=,"Bottom")
			'Then we need to put Total Value in Setup cell based on the metadata information
			f.Data.DataTable.SetValue("FullTable",v.Screen.F_OPCodeComments!txtInitial.MetaData0,"Setup",v.Screen.F_OPCodeComments!txtTotal.Text,"FormulaM",v.Local.sRet)
		f.Intrinsic.Control.Else
			'We are on the top grid so either labor or material
			f.Intrinsic.Control.If(v.Screen.F_OPCodeComments!txtInitial.MetaData1,=,"Labor")
				f.Data.DataView.SetValue("LaborTop","LaborTopView",v.Screen.F_OPCodeComments!txtInitial.MetaData0,"Setup",v.Screen.F_OPCodeComments!txtTotal.Text,"FormulaM",v.Local.sRet)
			f.Intrinsic.Control.Else
				'Materila top grid
				f.Data.DataView.SetValue("MaterialTop","MaterialTopView",v.Screen.F_OPCodeComments!txtInitial.MetaData0,"Setup",v.Screen.F_OPCodeComments!txtTotal.Text,"FormulaM",v.Local.sRet)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		'unload the screen
		f.Intrinsic.Control.CallSub(f_opcodecomments_unload)
		
	'Grid Value Changed
	f.Intrinsic.Control.CaseAny("GSGCOPCOMMENTS","TXTINITIAL")
		'a value on the grid was changed so we need to update the Total Value
		f.Intrinsic.Control.If(v.Args.ControlName,=,"GSGCOPCOMMENTS")
			'We need to see if it is select column 
			f.Intrinsic.Control.If(v.Args.Column,=,"Selection")
				f.Data.DataTable.SetValue("OPCode",v.Args.RowIndex,"Selection",v.DataTable.OPCode(v.Args.RowIndex).Selection.FieldValNot)
			f.Intrinsic.Control.ElseIf(v.Args.EventType,=,"CELLVALUECHANGED")
				'We need to set the value to the grid manually so the calculations will be correct
				f.Data.DataTable.SetValue("OPCode",v.Args.RowIndex,"Count",v.Args.Value)
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		f.Data.DataView.SetFilter("OPCode","OPCodeView","OPERATION <> ''")
		f.Data.DataView.SetFilter("OPCode","OPCodeView","")
		'Because Roger is magic
		f.Data.DataTable.RemoveColumn("OPCode","EXPValue")
		'Need to create an expression column that holds the calculated value if selected
		f.Data.DataTable.AddExpressionColumn("OPCode","EXPValue","Float","IIF(SELECTION = TRUE, VALUE * ISNULL(COUNT,0),0)")
		f.Data.DataTable.Compute("OPCode","SUM(EXPValue)","",v.Local.fTotal)
		f.Intrinsic.Math.Add(v.Local.fTotal,v.Screen.F_OPCodeComments!txtInitial.Text.Float,v.Local.fTotal)
		'If meta data pos 1 is labor we need to convert the total over to hours from minutes
		f.Intrinsic.Control.If(v.Screen.F_OPCodeComments!txtInitial.MetaData1,=,"Labor")
			'We are in a labor grid so we need to convert to hours
			f.Intrinsic.Math.Div(v.Local.fTotal,60,v.Local.fTotal)
		f.Intrinsic.Control.EndIf
		'Lets round to 4 decimals just in case
		f.Intrinsic.Math.Round(v.Local.fTotal,4,v.Local.fTotal)
		'Set the Value to Total field
		Gui.F_OPCodeComments.txtTotal.Text(v.Local.fTotal)
		
	
	'We need to create the Grid and properties
	f.Intrinsic.Control.CaseElse
		'we need to create the data table and all of the grid properties
		'We are getting MVALUE or LVALUE passed as sValue from the MenuClick Sub This tells us if we are in Material or Labor Grid. We don't care Top or Bottom at this point.
		f.Intrinsic.String.Build("SELECT CAST(0 AS BIT) AS Selection, RTRIM(GCG.OPERATION1) AS OPERATION, RTRIM(OP.DESCRIPTION) AS Description, GCG.{0} AS Value, CAST(1 AS DOUBLE) AS {1}Count{1} FROM V_OP_CODES AS OP RIGHT JOIN GCG_3623_OP_CODES AS GCG ON OP.OPERATION = GCG.OPERATION1 WHERE GCG.{0} > 0 ORDER BY GCG.OPERATION1 ASC ",v.Args.sValue,v.Ambient.DblQuote,v.Local.sSQL)
		f.Intrinsic.Control.If(v.DataTable.OPCode.Exists,=,True)
			f.Data.DataTable.Close("OPCode")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromSQL("OPCode","Con",v.Local.sSQL,True)
		f.Data.DataView.Create("OPCode","OPCodeView",22)
		
		'We need to see if they have a formula for this row.
		f.Intrinsic.Control.If(v.Screen.F_OPCodeComments!txtInitial.MetaData2,=,"Bottom")
			'We are on bottom grid so we can use FullTable
			f.Intrinsic.Control.If(v.DataTable.FullTable(v.Screen.F_OPCodeComments!txtInitial.MetaData0).FormulaM.FieldValTrim,<>,"")
				'We have a formula so we need to do stuff
				f.Intrinsic.String.Split(v.DataTable.FullTable(v.Screen.F_OPCodeComments!txtInitial.MetaData0).FormulaM.FieldValTrim,"@!@",v.Local.sFormulaM)
				f.Intrinsic.Control.For(v.Local.iCount,v.Local.sFormulaM.UBound)
					v.Local.sLine.Redim(0,0)
					f.Intrinsic.Control.If(v.Local.iCount,=,0)
						'We are on the first one so lets get the initial value first
						f.Intrinsic.String.Split(v.Local.sFormulaM(v.Local.iCount),"$!$",v.Local.sLine)
						f.Intrinsic.Control.If(v.Local.sLine.UBound,>,0)
							'we have an initial value so set it
							v.Local.sLine.RedimPreserve(0,1)
							f.Intrinsic.Control.BlockEvents
							Gui.F_OPCodeComments.txtInitial.Text(v.Local.sLine(0).Float)
							f.Intrinsic.Control.UnBlockEvents
							'we are goign to set the formula back so that it keeps going as normal without the initial value
							v.Local.sFormulaM(v.Local.iCount).Set(v.Local.sLine(1))
							v.Local.sLine.Redim(0,0)
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.EndIf
					f.Intrinsic.String.Split(v.Local.sFormulaM(v.Local.iCount),"*!*",v.Local.sLine)
					v.Local.sLine.RedimPreserve(0,2)
					F.Intrinsic.String.Build("OPERATION = '{0}' ",V.Local.sLine(0).Trim,V.Local.sRet)
					f.Data.DataTable.Select("OPCode",V.Local.sRet,V.Local.sRet)
					f.Intrinsic.Control.If(v.Local.sRet,<>,"***NORETURN***")
						f.Intrinsic.Control.If(v.Global.bLoadMode,=,True)
							'We are in load mode so we need to set Value to the old value
							f.Data.DataTable.SetValue("OPCode",v.Local.sRet,"Selection",True,"Value",v.Local.sLine(1).Float,"Count",v.Local.sLine(2).Float)
						f.Intrinsic.Control.Else
							'We are not in load mode so we will let it use the new Values from the Maintenance program
							f.Data.DataTable.SetValue("OPCode",v.Local.sRet,"Selection",True,"Count",v.Local.sLine(2).Float)
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.Next(v.Local.iCount)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Else
			'We are on the top grid so either labor or material
			f.Intrinsic.Control.If(v.Screen.F_OPCodeComments!txtInitial.MetaData1,=,"Labor")
				f.Intrinsic.Control.If(v.DataView.LaborTop!LaborTopView(v.Screen.F_OPCodeComments!txtInitial.MetaData0).FormulaM.FieldValTrim,<>,"")
					'We have a formula so we need to do stuff
					f.Intrinsic.String.Split(v.DataView.LaborTop!LaborTopView(v.Screen.F_OPCodeComments!txtInitial.MetaData0).FormulaM.FieldValTrim,"@!@",v.Local.sFormulaM)
					f.Intrinsic.Control.For(v.Local.iCount,v.Local.sFormulaM.UBound)
						v.Local.sLine.Redim(0,0)
						f.Intrinsic.Control.If(v.Local.iCount,=,0)
							'We are on the first one so lets get the initial value first
							f.Intrinsic.String.Split(v.Local.sFormulaM(v.Local.iCount),"$!$",v.Local.sLine)
							f.Intrinsic.Control.If(v.Local.sLine.UBound,>,0)
								'we have an initial value so set it
								v.Local.sLine.RedimPreserve(0,1)
								f.Intrinsic.Control.BlockEvents
								Gui.F_OPCodeComments.txtInitial.Text(v.Local.sLine(0).Float)
								f.Intrinsic.Control.UnBlockEvents
								'we are goign to set the formula back so that it keeps going as normal without the initial value
								v.Local.sFormulaM(v.Local.iCount).Set(v.Local.sLine(1))
								v.Local.sLine.Redim(0,0)
							f.Intrinsic.Control.EndIf
						f.Intrinsic.Control.EndIf
						f.Intrinsic.String.Split(v.Local.sFormulaM(v.Local.iCount),"*!*",v.Local.sLine)
						v.Local.sLine.RedimPreserve(0,2)
						F.Intrinsic.String.Build("OPERATION = '{0}' ",V.Local.sLine(0).Trim,V.Local.sRet)
						f.Data.DataTable.Select("OPCode",V.Local.sRet,V.Local.sRet)
						f.Intrinsic.Control.If(v.Local.sRet,<>,"***NORETURN***")
							f.Intrinsic.Control.If(v.Global.bLoadMode,=,True)
								'We are in load mode so we need to set Value to the old value
								f.Data.DataTable.SetValue("OPCode",v.Local.sRet,"Selection",True,"Value",v.Local.sLine(1).Float,"Count",v.Local.sLine(2).Float)
							f.Intrinsic.Control.Else
								'We are not in load mode so we will let it use the new Values from the Maintenance program
								f.Data.DataTable.SetValue("OPCode",v.Local.sRet,"Selection",True,"Count",v.Local.sLine(2).Float)
							f.Intrinsic.Control.EndIf
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.Next(v.Local.iCount)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.DataView.MaterialTop!MaterialTopView(v.Screen.F_OPCodeComments!txtInitial.MetaData0).FormulaM.FieldValTrim,<>,"")
					'We have a formula so we need to do stuff
					f.Intrinsic.String.Split(v.DataView.MaterialTop!MaterialTopView(v.Screen.F_OPCodeComments!txtInitial.MetaData0).FormulaM.FieldValTrim,"@!@",v.Local.sFormulaM)
					f.Intrinsic.Control.For(v.Local.iCount,v.Local.sFormulaM.UBound)
						v.Local.sLine.Redim(0,0)
						f.Intrinsic.Control.If(v.Local.iCount,=,0)
							'We are on the first one so lets get the initial value first
							f.Intrinsic.String.Split(v.Local.sFormulaM(v.Local.iCount),"$!$",v.Local.sLine)
							f.Intrinsic.Control.If(v.Local.sLine.UBound,>,0)
								'we have an initial value so set it
								v.Local.sLine.RedimPreserve(0,1)
								f.Intrinsic.Control.BlockEvents
								Gui.F_OPCodeComments.txtInitial.Text(v.Local.sLine(0).Float)
								f.Intrinsic.Control.UnBlockEvents
								'we are goign to set the formula back so that it keeps going as normal without the initial value
								v.Local.sFormulaM(v.Local.iCount).Set(v.Local.sLine(1))
								v.Local.sLine.Redim(0,0)
							f.Intrinsic.Control.EndIf
						f.Intrinsic.Control.EndIf
						f.Intrinsic.String.Split(v.Local.sFormulaM(v.Local.iCount),"*!*",v.Local.sLine)
						v.Local.sLine.RedimPreserve(0,2)
						F.Intrinsic.String.Build("OPERATION = '{0}' ",V.Local.sLine(0).Trim,V.Local.sRet)
						f.Data.DataTable.Select("OPCode",V.Local.sRet,V.Local.sRet)
						f.Intrinsic.Control.If(v.Local.sRet,<>,"***NORETURN***")
							f.Intrinsic.Control.If(v.Global.bLoadMode,=,True)
								'We are in load mode so we need to set Value to the old value
								f.Data.DataTable.SetValue("OPCode",v.Local.sRet,"Selection",True,"Value",v.Local.sLine(1).Float,"Count",v.Local.sLine(2).Float)
							f.Intrinsic.Control.Else
								'We are not in load mode so we will let it use the new Values from the Maintenance program
								f.Data.DataTable.SetValue("OPCode",v.Local.sRet,"Selection",True,"Count",v.Local.sLine(2).Float)
							f.Intrinsic.Control.EndIf
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.Next(v.Local.iCount)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		'Need to create an expression column that holds the calculated value if selected
		f.Data.DataTable.AddExpressionColumn("OPCode","EXPValue","Float","IIF(SELECTION = TRUE, VALUE * ISNULL(COUNT,0),0)")
		f.Data.DataTable.Compute("OPCode","SUM(EXPValue)","",v.Local.fTotal)
		f.Intrinsic.Math.Add(v.Local.fTotal,v.Screen.F_OPCodeComments!txtInitial.Text.Float,v.Local.fTotal)
		'If meta data pos 1 is labor we need to convert the total over to hours from minutes
		f.Intrinsic.Control.If(v.Screen.F_OPCodeComments!txtInitial.MetaData1,=,"Labor")
			'We are in a labor grid so we need to convert to hours
			f.Intrinsic.Math.Div(v.Local.fTotal,60,v.Local.fTotal)
		f.Intrinsic.Control.EndIf
		'Lets round to 4 decimals just in case
		f.Intrinsic.Math.Round(v.Local.fTotal,4,v.Local.fTotal)
		'Set the Value to Total field
		Gui.F_OPCodeComments.txtTotal.Text(v.Local.fTotal)
		
		'add the dv to the grid
		Gui.F_OPCodeComments.GsGcOPComments.AddGridviewFromDataview("OPGrid","OPCode","OPCodeView")
		Gui.F_OPCodeComments.GsGcOPComments.MainView("OPGrid")
		
		'Setting Properties
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Selection","ReadOnly",True)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Selection","AllowEdit",False)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Selection","MaxWidth",50)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Selection","HeaderHAlignment","Center")
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","OPERATION","Caption","OP Code")
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","OPERATION","MaxWidth",60)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","OPERATION","ReadOnly",True)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","OPERATION","AllowEdit",False)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Description","MaxWidth",200)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Description","ReadOnly",True)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Description","AllowEdit",False)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Value","MaxWidth",80)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Value","HeaderHAlignment","Center")
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Value","ReadOnly",True)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Value","AllowEdit",False)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Count","ReadOnly",False)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Count","AllowEdit",True)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Count","HeaderHAlignment","Center")
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","Count","MaxWidth",80)
		Gui.F_OPCodeComments.GsGcOPComments.SetColumnProperty("OPGrid","EXPValue","Visible",False)
		
'		Gui.F_OPCodeComments.GsGcOPComments.SetGridviewProperty("OPGrid","EnableAppearanceEvenRow",True)
		Gui.F_OPCodeComments.GsGcOPComments.SetGridviewProperty("OPGrid","EnterKeyNavigation","Vertical")
	
f.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("OPCodeComments_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.OPCodeComments.End

Program.Sub.MenuClick.Start
F.Intrinsic.Control.SetErrorHandler("MenuClick_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.sPos.Declare(String)
v.Local.sRet.Declare(String)
v.Local.iHold.Declare(Long)
v.Local.sFilter.Declare(String)
v.Local.iNew.Declare(long)
v.Local.sOld.Declare(String)
v.Local.iTop.Declare(long)
v.Local.iBottom.Declare(long)
v.Local.iCount.Declare(long)
v.Local.sSel.Declare(string)
v.Local.sSQL.Declare(String)
v.Local.fMinutes.Declare(Float)
V.Local.fMarkup.Declare(Float)
V.Local.fInitial.Declare(Float)
V.Local.sText.Declare(String)
v.Local.iRow.Declare(Long)
V.Local.sRowHandle.Declare(String, "")

f.Intrinsic.Control.SelectCase(v.Args.MenuName)
	'Prev Estimate
	f.Intrinsic.Control.Case("CTXPREVEST")
		
		f.Intrinsic.Control.SelectCase(v.Args.ItemName)
			'Load
			f.Intrinsic.Control.Case("LOAD")
				Gui.F_Label_Est.gsfgHPrevEst.GetSelectedRows("GridPrevEst",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgHPrevEst.GetCellValueByColumnName("GridPrevEst","Est_No",v.Local.sPos.Long,v.Local.sRet)
					'check to see if the estimate is already open by someone else
					F.Intrinsic.String.Build("SELECT * FROM GCG_3623_EST_LOCK WHERE EST_NO = '{0}' ",V.Local.sRet.Trim,V.Local.sSQL)
					F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstLock",V.Local.sSQL)
					F.Intrinsic.Control.If(V.ODBC.Con!rstLock.EOF,=,False)
						'we have something in the recordset so don't open the record
						F.Intrinsic.String.Build("Estimate number {0} is already in use by {1}.",V.ODBC.Con!rstLock.FieldValTrim!EST_NO,V.ODBC.Con!rstLock.FieldValTrim!USR,V.Local.sRet)
						F.ODBC.Con!rstLock.Close
						F.Intrinsic.UI.Msgbox(V.Local.sRet,"Estimate in use")
					F.Intrinsic.Control.Else
						Gui.F_Label_Est..Visible(False)
						f.Intrinsic.Control.CallSub(DataTableCreation)
						f.Intrinsic.Control.CallSub(loadest,"EstNo",v.Local.sRet,"COPY","")
						v.Global.bSaved.Set(True)
						v.Global.bLoadMode.Set(True)
						f.ODBC.Con!rstLock.Close
'						Gui.F_Label_Est.gsfgHPrevEst.GetCellValueByColumnName("GridPrevEst","H_Sales_Rep",v.Local.sPos.Long,v.Local.sRet)
						f.Intrinsic.String.Build("SELECT * FROM GCG_3623_EST WHERE EST_NO = '{0}' ",V.Local.sRet,V.Local.sSQL)
						f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstEst",v.Local.sSQL)
						f.Intrinsic.Control.If(v.ODBC.Con!rstEst.EOF,=,False)
							v.Local.sRet.Set(v.ODBC.Con!rstEst.FieldValTrim!H_SALES_REP)
						F.Intrinsic.Control.EndIf
						F.ODBC.Con!rstEst.Close
						f.Intrinsic.Control.If(v.Local.sRet,=,"Archived")
							v.Global.bArchived.Set(True)
						f.Intrinsic.Control.Else
							v.Global.bArchived.Set(False)
						f.Intrinsic.Control.EndIf
						f.Intrinsic.Control.CallSub(Archived)
						Gui.F_Label_Est..Visible(True)
					F.Intrinsic.Control.Endif
				f.Intrinsic.Control.EndIf
				
			'Copy
			f.Intrinsic.Control.Case("COPY")							
'				f.Intrinsic.Control.If(v.Global.bArchived,=,False)
					Gui.F_Label_Est.gsfgHPrevEst.GetSelectedRows("GridPrevEst",v.Local.sPos)
					f.Intrinsic.Control.If(v.Local.sPos,<>,"")
						f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
						Gui.F_Label_Est.gsfgHPrevEst.GetCellValueByColumnName("GridPrevEst","Est_No",v.Local.sPos.Long,v.Local.sRet)
						Gui.F_Label_Est..Visible(False)
						f.Intrinsic.Control.CallSub(DataTableCreation)
						f.Intrinsic.Control.CallSub(loadest,"EstNo",v.Local.sRet,"COPY","Copy")						
						'we are copying so lets delete the formulas and qty
						f.Intrinsic.Control.If(v.DataTable.FullTable.RowCount,<>,0)

							'Fix (This seems to have fixed the missing QTY and std runtime when a user copies an est)
'							f.Data.DataTable.SetValue("FullTable",-1,"FormulaQ","","Qty",0)
						f.Intrinsic.Control.EndIf
						v.Global.bSaved.Set(False)
						v.Global.bLoadMode.Set(False)
						v.Global.bRouter.Set(False)
						v.Global.bArchived.Set(False)
						f.Intrinsic.Control.CallSub(Archived)
						Gui.F_Label_Est..Visible(True)
					f.Intrinsic.Control.EndIf
'				f.Intrinsic.Control.Else
'					'currently on an archived estimate
'					f.Intrinsic.UI.Msgbox("You are currently on an Archived Estimate. Please leave this estimate before trying to copy.")
'				f.Intrinsic.Control.EndIf
			'Archive
			f.Intrinsic.Control.Case("ARCHIVE")				
				'We are going to reuse H_Sales_Rep as the Archive field
				Gui.F_Label_Est.gsfgHPrevEst.GetSelectedRows("GridPrevEst",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos, "*!*", V.Local.sPos)
					V.Local.sRet.Redim(0,V.Local.sPos.UBound)
					F.Intrinsic.Control.For(V.Local.iCount, 0, V.Local.sPos.UBound, 1)
						Gui.F_Label_Est.gsfgHPrevEst.GetCellValueByColumnName("GridPrevEst","Est_No",v.Local.sPos(V.Local.iCount).Long,v.Local.sRet(V.Local.iCount))
					F.Intrinsic.Control.Next(V.Local.iCount)
					
					F.Intrinsic.String.Join(V.Local.sRet, "','",V.Local.sRet)
					
					f.Intrinsic.String.Build("Are you sure you want to Archive Estimates '{0}'?",v.Local.sRet,v.Local.sSel)
					f.Intrinsic.UI.Msgbox(v.Local.sSel,"Warning",4,v.Local.iHold)
					'If they pressed Yes then we need to set H_Sales_Rep as Archived
					f.Intrinsic.Control.If(v.Local.iHold,=,6)
						'f.Data.DataTable.SetValue("PrevEst",v.DataView.PrevEst!PrevEstView(v.Local.sPos.Long).DataTableIndex,"H_Sales_Rep","Archived")
'						f.Data.DataTable.SetValue("PrevEst",v.Local.sPos.Long,"H_Sales_Rep","Archived")
						F.Intrinsic.String.Build("[EST_NO] in ('{0}')", V.Local.sRet, V.Local.sFilter)
						F.Data.DataView.Create("PrevEst", "dvTemp", 22, V.Local.sFilter, "")
						F.Data.DataView.SetValue("PrevEst", "dvTemp", -1, "H_Sales_Rep", "Archived")
						F.Data.DataView.Close("PrevEst", "dvTemp")
						
'						f.Data.DataView.SetFilter("PrevEst","PrevEstView","")
'						f.Data.DataView.SetFilter("PrevEst","PrevEstView","H_SALES_REP <> 'Archived'")
						f.Intrinsic.String.Build("UPDATE GCG_3623_EST SET H_SALES_REP = 'Archived' WHERE EST_NO in ('{0}') ",v.Local.sRet,v.Local.sSel)
						F.ODBC.Connection!Con.Execute(v.Local.sSel)
					f.Intrinsic.Control.EndIf	
		
				f.Intrinsic.Control.EndIf

'				'We are going to reuse H_Sales_Rep as the Archive field
'				Gui.F_Label_Est.gsfgHPrevEst.GetSelectedRows("GridPrevEst",v.Local.sPos)
'				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
'					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
'					Gui.F_Label_Est.gsfgHPrevEst.GetCellValueByColumnName("GridPrevEst","Est_No",v.Local.sPos.Long,v.Local.sRet)
'					f.Intrinsic.String.Build("Are you sure you want to Archive Estimate {0}",v.Local.sRet,v.Local.sSel)
'					f.Intrinsic.UI.Msgbox(v.Local.sSel,"Warning",4,v.Local.iHold)
'					'If they pressed Yes then we need to set H_Sales_Rep as Archived
'					f.Intrinsic.Control.If(v.Local.iHold,=,6)
'						'f.Data.DataTable.SetValue("PrevEst",v.DataView.PrevEst!PrevEstView(v.Local.sPos.Long).DataTableIndex,"H_Sales_Rep","Archived")
'						f.Data.DataTable.SetValue("PrevEst",v.Local.sPos.Long,"H_Sales_Rep","Archived")
''						f.Data.DataView.SetFilter("PrevEst","PrevEstView","")
''						f.Data.DataView.SetFilter("PrevEst","PrevEstView","H_SALES_REP <> 'Archived'")
'						f.Intrinsic.String.Build("UPDATE GCG_3623_EST SET H_SALES_REP = 'Archived' WHERE EST_NO = '{0}' ",v.Local.sRet,v.Local.sSel)
'						F.ODBC.Connection!Con.Execute(v.Local.sSel)
'					f.Intrinsic.Control.EndIf
'				f.Intrinsic.Control.EndIf

			f.Intrinsic.Control.Case("DELETE")
				'We are going to reuse H_Sales_Rep as the Archive field
				Gui.F_Label_Est.gsfgHPrevEst.GetSelectedRows("GridPrevEst",v.Local.sPos)
								
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos, "*!*", V.Local.sPos)
					F.Intrinsic.String.SortDesc(V.Local.sPos, V.Local.sPos)
					V.Local.sRet.Redim(0,V.Local.sPos.UBound)
					F.Intrinsic.Control.For(V.Local.iCount, 0, V.Local.sPos.UBound, 1)
						Gui.F_Label_Est.gsfgHPrevEst.GetCellValueByColumnName("GridPrevEst","Est_No",v.Local.sPos(V.Local.iCount).Long,v.Local.sRet(V.Local.iCount))

					F.Intrinsic.Control.Next(V.Local.iCount)
					
					F.Intrinsic.String.Join(V.Local.sRet, "','",V.Local.sRet)
					
					f.Intrinsic.String.Build("Are you sure you want to Delete Estimates '{0}'?",v.Local.sRet,v.Local.sSel)
					f.Intrinsic.UI.Msgbox(v.Local.sSel,"Warning",4,v.Local.iHold)
					'If they pressed Yes then we need to set H_Sales_Rep as Archived
					f.Intrinsic.Control.If(v.Local.iHold,=,6)
						
						F.Intrinsic.Control.For(V.Local.iCount, 0, V.Local.sPos.UBound, 1)
							F.Data.DataTable.DeleteRow("PrevEst", V.Local.sPos(V.Local.iCount).Long)
							
						F.Intrinsic.Control.Next(V.Local.iCount)
						
'						f.Data.DataView.SetFilter("PrevEst","PrevEstView","")
'						f.Data.DataView.SetFilter("PrevEst","PrevEstView","H_SALES_REP <> 'Archived'")
						f.Intrinsic.String.Build("Delete GCG_3623_EST WHERE EST_NO in ('{0}') ",v.Local.sRet,v.Local.sSel)
'						f.Intrinsic.String.Build("UPDATE GCG_3623_EST SET H_SALES_REP = 'Deleted' WHERE EST_NO in ('{0}') ",v.Local.sRet,v.Local.sSel)
						
						F.ODBC.Connection!Con.Execute(v.Local.sSel)
						
					f.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
		f.Intrinsic.Control.EndSelect
	
	'Material Bottom
	f.Intrinsic.Control.Case("CTXMATERIALBOTTOM")
		f.Intrinsic.Control.SelectCase(v.Args.ItemName)
			'Delete
			f.Intrinsic.Control.Case("DELETE")
				Gui.F_Label_Est.gsfgMaterialBottom.GetSelectedRows("GridMaterialBottom",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgMaterialBottom.GetCellValueByColumnName("GridMaterialBottom","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)					
					f.Data.DataTable.DeleteRow("FullTable",v.Local.sRet)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Intrinsic.Control.For(v.Local.iCount,0,v.DataView.FullTable!Summary.RowCount--,1)
						f.Intrinsic.Math.Add(v.Local.iCount,1,v.Local.iHold)
						f.Data.DataView.SetValue("FullTable","Summary",v.Local.iCount,"Pos",v.Local.iHold)
					f.Intrinsic.Control.Next(v.Local.iCount)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Data.DataView.SetSort("FullTable","MaterialBottom","")
					f.Data.DataView.SetSort("FullTable","MaterialBottom","Pos asc")
					f.Data.DataTable.AcceptChanges("FullTable")
				f.Intrinsic.Control.EndIf
			'Copy
			f.Intrinsic.Control.Case("COPY")
				Gui.F_Label_Est.gsfgMaterialBottom.GetSelectedRows("GridMaterialBottom",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgMaterialBottom.GetCellValueByColumnName("GridMaterialBottom","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iBottom)
					f.Data.DataTable.Compute("FullTable","Max(Row) + 1","LMO = 'M'",v.Local.iRow)
					f.Data.DataTable.AddRow("FullTable","Row",v.Local.iRow,"Pos",v.Local.iBottom,"Est_No",v.DataTable.FullTable(v.Local.sRet).Est_No!FieldValLong,"Router",v.DataTable.FullTable(v.Local.sRet).Router!FieldVal,"Seq",v.DataTable.FullTable(v.Local.sRet).Seq!FieldVal,"LMO",v.DataTable.FullTable(v.Local.sRet).LMO!FieldVal,"Part",v.DataTable.FullTable(v.Local.sRet).Part!FieldVal,"Rev",v.DataTable.FullTable(v.Local.sRet).Rev!FieldVal,"Loc",v.DataTable.FullTable(v.Local.sRet).Loc!FieldVal,"Code",v.DataTable.FullTable(v.Local.sRet).Code!FieldVal,"Description",v.DataTable.FullTable(v.Local.sRet).Description!FieldVal,"Freq",v.DataTable.FullTable(v.Local.sRet).Freq!FieldValFloat,"Width",v.DataTable.FullTable(v.Local.sRet).Width!FieldValFloat,"Weight",v.DataTable.FullTable(v.Local.sRet).Weight!FieldValFloat,"Length",v.DataTable.FullTable(v.Local.sRet).Length!FieldValFloat,"Cost",v.DataTable.FullTable(v.Local.sRet).Cost!FieldValFloat,"ShowCost",v.DataTable.FullTable(v.Local.sRet).ShowCost!FieldValFloat,"MSI",v.DataTable.FullTable(v.Local.sRet).MSI!FieldValFloat,"Qty",v.DataTable.FullTable(v.Local.sRet).Qty!FieldValFloat,"UM",v.DataTable.FullTable(v.Local.sRet).UM!FieldVal,"StdCost",v.DataTable.FullTable(v.Local.sRet).StdCost!FieldValFloat,"CrewSize",v.DataTable.FullTable(v.Local.sRet).CrewSize!FieldValFloat,"Setup",v.DataTable.FullTable(v.Local.sRet).Setup!FieldValFloat,"Cost/um",v.DataTable.FullTable(v.Local.sRet).Cost/um!FieldValFloat,"TotalCost",v.DataTable.FullTable(v.Local.sRet).TotalCost!FieldValFloat,"DirCost",v.DataTable.FullTable(v.Local.sRet).DirCost!FieldValFloat,"OHCost",v.DataTable.FullTable(v.Local.sRet).OHCost!FieldValFloat,"LbrHrs",v.DataTable.FullTable(v.Local.sRet).LbrHrs!FieldValFloat,"MinCost",v.DataTable.FullTable(v.Local.sRet).MinCost!FieldValFloat,"Comments",v.DataTable.FullTable(v.Local.sRet).Comments!FieldVal,"FormulaM",v.DataTable.FullTable(v.Local.sRet).FormulaM!FieldVal,"FormulaQ",v.DataTable.FullTable(v.Local.sRet).FormulaQ!FieldVal)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Data.DataTable.AcceptChanges("FullTable")
				f.Intrinsic.Control.EndIf
			'Change
			f.Intrinsic.Control.Case("CHANGE")
				'Sets current row selection
								
				Gui.F_Label_Est.gsfgMaterialBottom.GetSelectedRows("GridMaterialBottom",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgMaterialBottom.GetCellValueByColumnName("GridMaterialBottom","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					v.Global.lBottomRow.Set(v.Local.sRet.Long)
					'Call Browser
					f.Intrinsic.Control.CallSub(stdbrowsers,"ControlName","CMDPART")
					v.Global.lBottomRow.Set(-1)
				f.Intrinsic.Control.EndIf
				
			'Comment
			f.Intrinsic.Control.Case("COMMENT")
				'We are going to open the Comment OP Code screen
				'We need to get the Value from the Setup column and set it to Initial value
				Gui.F_Label_Est.gsfgMaterialBottom.GetSelectedRows("GridMaterialBottom",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgMaterialBottom.GetCellValueByColumnName("GridMaterialBottom","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					f.Intrinsic.Control.BlockEvents
					Gui.F_OPCodeComments.txtInitial.Text(v.DataTable.FullTable(v.Local.sRet).Setup.FieldValFloat)
					f.Intrinsic.Control.UnBlockEvents
					'we are clearing the meta data which holds the ordinal
					Gui.F_OPCodeComments.txtInitial.ClearMetadata
					'setting the ordinal, Tab, Position
					Gui.F_OPCodeComments.txtInitial.SetMetaData(v.Local.sRet,"Material","Bottom")
					f.Intrinsic.Control.CallSub(opcodecomments,"sValue","MVALUE")
					Gui.F_OPCodeComments..Show
				f.Intrinsic.Control.EndIf
				
		f.Intrinsic.Control.EndSelect
		
	'Material Top
	f.Intrinsic.Control.Case("CTXMATERIALTOP")
		F.Intrinsic.Control.SelectCase(V.Args.ItemName)
			'Comment
			f.Intrinsic.Control.Case("COMMENT")
				'We are going to open the Comment OP Code screen
				'We need to get the Value from the Setup column and set it to Initial value
				f.Intrinsic.Control.If(v.DataView.MaterialTop!MaterialTopView.RowCount,>,0)
					f.Intrinsic.Control.BlockEvents
					Gui.F_OPCodeComments.txtInitial.Text(v.DataView.MaterialTop!MaterialTopView(v.DataView.MaterialTop!MaterialTopView.RowCount--).Setup.FieldValFloat)
					f.Intrinsic.Control.UnBlockEvents
					'we are clearing the meta data which holds the ordinal
					Gui.F_OPCodeComments.txtInitial.ClearMetadata
					'setting the ordinal, Tab, Position
					Gui.F_OPCodeComments.txtInitial.SetMetaData(v.DataView.MaterialTop!MaterialTopView.RowCount--,"Material","Top")
					f.Intrinsic.Control.CallSub(opcodecomments,"sValue","MVALUE")
					Gui.F_OPCodeComments..Show
				f.Intrinsic.Control.EndIf
				
		f.Intrinsic.Control.EndSelect
		
	'Labor Bottom
	f.Intrinsic.Control.Case("CTXLABORBOTTOM")
		f.Intrinsic.Control.SelectCase(v.Args.ItemName)
			'Delete
			f.Intrinsic.Control.Case("DELETE")
				
				Gui.F_Label_Est.gsfgLaborBottom.GetSelectedRows("GridLaborBottom",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgLaborBottom.GetCellValueByColumnName("GridLaborBottom","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					f.Data.DataTable.DeleteRow("FullTable",v.Local.sRet)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Intrinsic.Control.For(v.Local.iCount,0,v.DataView.FullTable!Summary.RowCount--,1)
						f.Intrinsic.Math.Add(v.Local.iCount,1,v.Local.iHold)
						f.Data.DataView.SetValue("FullTable","Summary",v.Local.iCount,"Pos",v.Local.iHold)
					f.Intrinsic.Control.Next(v.Local.iCount)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Data.DataView.SetSort("FullTable","LaborBottom","")
					f.Data.DataView.SetSort("FullTable","LaborBottom","Pos asc")
					f.Data.DataTable.AcceptChanges("FullTable")
				f.Intrinsic.Control.EndIf
			'Copy
			f.Intrinsic.Control.Case("COPY")

				Gui.F_Label_Est.gsfgLaborBottom.GetSelectedRows("GridLaborBottom",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgLaborBottom.GetCellValueByColumnName("GridLaborBottom","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iBottom)
					f.Data.DataTable.Compute("FullTable","Max(Row) + 1","LMO = 'L'",v.Local.iRow)
					f.Data.DataTable.AddRow("FullTable","Row",v.Local.iRow,"Pos",v.Local.iBottom,"Est_No",v.DataTable.FullTable(v.Local.sRet).Est_No!FieldValLong,"Router",v.DataTable.FullTable(v.Local.sRet).Router!FieldVal,"Seq",v.DataTable.FullTable(v.Local.sRet).Seq!FieldVal,"LMO",v.DataTable.FullTable(v.Local.sRet).LMO!FieldVal,"Part",v.DataTable.FullTable(v.Local.sRet).Part!FieldVal,"Rev",v.DataTable.FullTable(v.Local.sRet).Rev!FieldVal,"Loc",v.DataTable.FullTable(v.Local.sRet).Loc!FieldVal,"Code",v.DataTable.FullTable(v.Local.sRet).Code!FieldVal,"Description",v.DataTable.FullTable(v.Local.sRet).Description!FieldVal,"Freq",v.DataTable.FullTable(v.Local.sRet).Freq!FieldValFloat,"Width",v.DataTable.FullTable(v.Local.sRet).Width!FieldValFloat,"Weight",v.DataTable.FullTable(v.Local.sRet).Weight!FieldValFloat,"Length",v.DataTable.FullTable(v.Local.sRet).Length!FieldValFloat,"Cost",v.DataTable.FullTable(v.Local.sRet).Cost!FieldValFloat,"ShowCost",v.DataTable.FullTable(v.Local.sRet).ShowCost!FieldValFloat,"MSI",v.DataTable.FullTable(v.Local.sRet).MSI!FieldValFloat,"Qty",v.DataTable.FullTable(v.Local.sRet).Qty!FieldValFloat,"UM",v.DataTable.FullTable(v.Local.sRet).UM!FieldVal,"StdCost",v.DataTable.FullTable(v.Local.sRet).StdCost!FieldValFloat,"CrewSize",v.DataTable.FullTable(v.Local.sRet).CrewSize!FieldValFloat,"Setup",v.DataTable.FullTable(v.Local.sRet).Setup!FieldValFloat,"Cost/um",v.DataTable.FullTable(v.Local.sRet).Cost/um!FieldValFloat,"TotalCost",v.DataTable.FullTable(v.Local.sRet).TotalCost!FieldValFloat,"DirCost",v.DataTable.FullTable(v.Local.sRet).DirCost!FieldValFloat,"OHCost",v.DataTable.FullTable(v.Local.sRet).OHCost!FieldValFloat,"LbrHrs",v.DataTable.FullTable(v.Local.sRet).LbrHrs!FieldValFloat,"MinCost",v.DataTable.FullTable(v.Local.sRet).MinCost!FieldValFloat,"Comments",v.DataTable.FullTable(v.Local.sRet).Comments!FieldVal,"FormulaM",v.DataTable.FullTable(v.Local.sRet).FormulaM!FieldVal,"FormulaQ",v.DataTable.FullTable(v.Local.sRet).FormulaQ!FieldVal)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Data.DataTable.AcceptChanges("FullTable")
				f.Intrinsic.Control.EndIf
			'Change
			f.Intrinsic.Control.Case("CHANGE")
				'Sets current row selection
				Gui.F_Label_Est.gsfgLaborBottom.GetSelectedRows("GridLaborBottom",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgLaborBottom.GetCellValueByColumnName("GridLaborBottom","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					v.Global.lBottomRow.Set(v.Local.sRet.Long)
					'Call Browser
					f.Intrinsic.Control.CallSub(stdbrowsers,"ControlName","CMDWC")
					v.Global.lBottomRow.Set(-1)
				f.Intrinsic.Control.EndIf
				
			'Comment
			f.Intrinsic.Control.Case("COMMENT")
				'We are going to open the Comment OP Code screen
				'We need to get the Value from the Setup column and set it to Initial value
				Gui.F_Label_Est.gsfgLaborBottom.GetSelectedRows("GridLaborBottom",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgLaborBottom.GetCellValueByColumnName("GridLaborBottom","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					'This is labor so we need to convert value from hours to minutes and put it in the initial value
					f.Intrinsic.Math.Mult(v.DataTable.FullTable(v.Local.sRet).Setup.FieldValFloat,60,v.Local.fMinutes)
					f.Intrinsic.Control.BlockEvents
					Gui.F_OPCodeComments.txtInitial.Text(v.Local.fMinutes)
					f.Intrinsic.Control.UnBlockEvents
					'we are clearing the meta data which holds the ordinal
					Gui.F_OPCodeComments.txtInitial.ClearMetadata
					'setting the ordinal, Tab, Position
					Gui.F_OPCodeComments.txtInitial.SetMetaData(v.Local.sRet,"Labor","Bottom")
					f.Intrinsic.Control.CallSub(opcodecomments,"sValue","LVALUE")
					Gui.F_OPCodeComments..Show
				f.Intrinsic.Control.EndIf
				
		f.Intrinsic.Control.EndSelect
		
	'Labor Top
	f.Intrinsic.Control.Case("CTXLABORTOP")
		F.Intrinsic.Control.SelectCase(V.Args.ItemName)
			'Comment
			f.Intrinsic.Control.Case("COMMENT")
				'We are going to open the Comment OP Code screen
				'We need to get the Value from the Setup column and set it to Initial value
				'This is labor so we need to convert value from hours to minutes and put it in the initial value
				f.Intrinsic.Control.If(v.DataView.LaborTop!LaborTopView.RowCount,>,0)
					f.Intrinsic.Math.Mult(v.DataView.LaborTop!LaborTopView(v.DataView.LaborTop!LaborTopView.RowCount--).Setup.FieldValFloat,60,v.Local.fMinutes)
					f.Intrinsic.Control.BlockEvents
					Gui.F_OPCodeComments.txtInitial.Text(v.Local.fMinutes)
					f.Intrinsic.Control.UnBlockEvents
					'we are clearing the meta data which holds the ordinal
					Gui.F_OPCodeComments.txtInitial.ClearMetadata
					'setting the ordinal, Tab, Position
					Gui.F_OPCodeComments.txtInitial.SetMetaData(v.DataView.LaborTop!LaborTopView.RowCount--,"Labor","Top")
					f.Intrinsic.Control.CallSub(opcodecomments,"sValue","LVALUE")
					Gui.F_OPCodeComments..Show
				f.Intrinsic.Control.EndIf
				
		f.Intrinsic.Control.EndSelect
		
	'Summary Top
	f.Intrinsic.Control.Case("CTXSUMMARYTOP")
		f.Intrinsic.Control.SelectCase(v.Args.ItemName)
			'Delete
			f.Intrinsic.Control.Case("DELETE")
				
				Gui.F_Label_Est.gsfgSummaryTop.GetSelectedRows("GridSummary",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgSummaryTop.GetCellValueByColumnName("GridSummary","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					f.Data.DataTable.DeleteRow("FullTable",v.Local.sRet)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Intrinsic.Control.For(v.Local.iCount,0,v.DataView.FullTable!Summary.RowCount--,1)
						f.Intrinsic.Math.Add(v.Local.iCount,1,v.Local.iHold)
						f.Data.DataView.SetValue("FullTable","Summary",v.Local.iCount,"Pos",v.Local.iHold)
					f.Intrinsic.Control.Next(v.Local.iCount)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Data.DataTable.AcceptChanges("FullTable")
				f.Intrinsic.Control.EndIf
				
			'Copy
			f.Intrinsic.Control.Case("COPY")

				Gui.F_Label_Est.gsfgSummaryTop.GetSelectedRows("GridSummary",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgSummaryTop.GetCellValueByColumnName("GridSummary","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iBottom)
					f.Intrinsic.String.Build("LMO = '{0}' ",v.DataTable.FullTable(v.Local.sRet).LMO!FieldValTrim,v.Local.sFilter)
					f.Data.DataTable.Compute("FullTable","Max(Row) + 1",v.Local.sFilter,v.Local.iRow)
					f.Data.DataTable.AddRow("FullTable","Row",v.Local.iRow,"Pos",v.Local.iBottom,"Est_No",v.DataTable.FullTable(v.Local.sRet).Est_No!FieldValLong,"Router",v.DataTable.FullTable(v.Local.sRet).Router!FieldVal,"Seq",v.DataTable.FullTable(v.Local.sRet).Seq!FieldVal,"LMO",v.DataTable.FullTable(v.Local.sRet).LMO!FieldVal,"Part",v.DataTable.FullTable(v.Local.sRet).Part!FieldVal,"Rev",v.DataTable.FullTable(v.Local.sRet).Rev!FieldVal,"Loc",v.DataTable.FullTable(v.Local.sRet).Loc!FieldVal,"Code",v.DataTable.FullTable(v.Local.sRet).Code!FieldVal,"Description",v.DataTable.FullTable(v.Local.sRet).Description!FieldVal,"Freq",v.DataTable.FullTable(v.Local.sRet).Freq!FieldValFloat,"Width",v.DataTable.FullTable(v.Local.sRet).Width!FieldValFloat,"Weight",v.DataTable.FullTable(v.Local.sRet).Weight!FieldValFloat,"Length",v.DataTable.FullTable(v.Local.sRet).Length!FieldValFloat,"Cost",v.DataTable.FullTable(v.Local.sRet).Cost!FieldValFloat,"ShowCost",v.DataTable.FullTable(v.Local.sRet).ShowCost!FieldValFloat,"MSI",v.DataTable.FullTable(v.Local.sRet).MSI!FieldValFloat,"Qty",v.DataTable.FullTable(v.Local.sRet).Qty!FieldValFloat,"UM",v.DataTable.FullTable(v.Local.sRet).UM!FieldVal,"StdCost",v.DataTable.FullTable(v.Local.sRet).StdCost!FieldValFloat,"CrewSize",v.DataTable.FullTable(v.Local.sRet).CrewSize!FieldValFloat,"Setup",v.DataTable.FullTable(v.Local.sRet).Setup!FieldValFloat,"Cost/um",v.DataTable.FullTable(v.Local.sRet).Cost/um!FieldValFloat,"TotalCost",v.DataTable.FullTable(v.Local.sRet).TotalCost!FieldValFloat,"DirCost",v.DataTable.FullTable(v.Local.sRet).DirCost!FieldValFloat,"OHCost",v.DataTable.FullTable(v.Local.sRet).OHCost!FieldValFloat,"LbrHrs",v.DataTable.FullTable(v.Local.sRet).LbrHrs!FieldValFloat,"MinCost",v.DataTable.FullTable(v.Local.sRet).MinCost!FieldValFloat,"Comments",v.DataTable.FullTable(v.Local.sRet).Comments!FieldVal,"FormulaM",v.DataTable.FullTable(v.Local.sRet).FormulaM!FieldVal,"FormulaQ",v.DataTable.FullTable(v.Local.sRet).FormulaQ!FieldVal)
					f.Data.DataView.SetSort("FullTable","Summary","")
					f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
					f.Data.DataTable.AcceptChanges("FullTable")
				f.Intrinsic.Control.EndIf
			'UP 1
			f.Intrinsic.Control.Case("UP1")
			
				'Moving the selection up 1 and the one above down one
				Gui.F_Label_Est.gsfgSummaryTop.GetSelectedRows("GridSummary",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgSummaryTop.GetCellValueByColumnName("GridSummary","Pos",v.Local.sPos,v.Local.sRet)
					f.Data.DataTable.Compute("FullTable","Min(Pos)","",v.Local.iTop)
					f.Intrinsic.Control.If(v.Local.sRet.Long,<>,v.Local.iTop)
						f.Intrinsic.Math.Sub(v.Local.sRet.Long,1,v.Local.iHold)
						f.Intrinsic.String.Build("Pos = {0}",v.Local.iHold,v.Local.sFilter)
						f.Data.DataTable.AcceptChanges("FullTable")
						f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.iNew)
						f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet.Long,v.Local.sFilter)
						f.Data.DataTable.AcceptChanges("FullTable")
						f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sOld)
						f.Data.DataTable.SetValue("FullTable",v.Local.iNew,"Pos",v.Local.sRet.Long)
						f.Data.DataTable.SetValue("FullTable",v.Local.sOld,"Pos",v.Local.iHold)
						f.Data.DataView.SetSort("FullTable","Summary","")
						f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
						f.Data.DataTable.AcceptChanges("FullTable")
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			'Down 1
			f.Intrinsic.Control.Case("DOWN1")
				'Moving the selection down 1 and the one above up one
				Gui.F_Label_Est.gsfgSummaryTop.GetSelectedRows("GridSummary",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgSummaryTop.GetCellValueByColumnName("GridSummary","Pos",v.Local.sPos,v.Local.sRet)
					f.Data.DataTable.Compute("FullTable","Max(Pos)","",v.Local.iBottom)
					f.Intrinsic.Control.If(v.Local.sRet.Long,<>,v.Local.iBottom)
						f.Intrinsic.Math.Add(v.Local.sRet.Long,1,v.Local.iHold)
						f.Intrinsic.String.Build("Pos = {0}",v.Local.iHold,v.Local.sFilter)
						f.Data.DataTable.AcceptChanges("FullTable")
						f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.iNew)
						f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet.Long,v.Local.sFilter)
						f.Data.DataTable.AcceptChanges("FullTable")
						f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sOld)
						f.Data.DataTable.SetValue("FullTable",v.Local.iNew,"Pos",v.Local.sRet.Long)
						f.Data.DataTable.SetValue("FullTable",v.Local.sOld,"Pos",v.Local.iHold)
						f.Data.DataView.SetSort("FullTable","Summary","")
						f.Data.DataView.SetSort("FullTable","Summary","Pos asc")
						f.Data.DataTable.AcceptChanges("FullTable")
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			'Top
			f.Intrinsic.Control.Case("TOP")
				f.Intrinsic.UI.Msgbox("Not added yet")
				
			'Bottom
			f.Intrinsic.Control.Case("BOTTOM")
				f.Intrinsic.UI.Msgbox("Not added yet")
			
			f.Intrinsic.Control.Case("COMMENTS")
				'Adding comments to the row
				Gui.F_Label_Est.gsfgSummaryTop.GetSelectedRows("GridSummary",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					Gui.F_Label_Est.gsfgSummaryTop.GetCellValueByColumnName("GridSummary","Pos",v.Local.sPos,v.Local.sRet)
					f.Intrinsic.String.Build("Pos = {0}",v.Local.sRet,v.Local.sFilter)
					f.Data.DataTable.AcceptChanges("FullTable")
					f.Data.DataTable.Select("FullTable",v.Local.sFilter,v.Local.sRet)
					F.Intrinsic.UI.InputboxExt("Enter Sequence Comments",v.DataTable.FullTable(v.Local.sRet).Comments!FieldVal,1)
					'They entered the comments so save it back if not canceled
					F.Intrinsic.Control.If(V.Ambient.AltBoxClick,<>,-1)
						f.Data.DataTable.SetValue("FullTable",v.Local.sRet,"Comments",v.Ambient.AltBoxVal.Left500)
					F.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
				
				
			'export
			f.Intrinsic.Control.Case("EXPORT")
				'We are going to export the summary grid with the comments
				f.Intrinsic.UI.ShowSaveFileDialog("","Excel | *.xlsx","",v.Local.sRet)
				f.Intrinsic.Control.If(v.Local.sRet,<>,"***CANCEL***")
'					Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Comments","Visible",True)
'					Gui.F_Label_Est.gsfgSummaryTop.Export(v.Local.sRet,"xlsx")
'					Gui.F_Label_Est.gsfgSummaryTop.SetColumnProperty("GridSummary","Comments","Visible",False)
					
					
					f.Data.DataView.ToString("FullTable","Summary","Pos*!*Seq*!*LMO*!*Part*!*Rev*!*Loc*!*Code*!*Setup*!*Qty*!*ShowCost*!*Freq*!*Description*!*UM*!*TotalCost*!*DirCost*!*OHCost*!*LbrHrs*!*MinCost*!*Comments","*!*","$!$",v.Local.sText)
					f.Intrinsic.String.Build("Position*!*Seq*!*LMO*!*Part*!*Rev*!*Loc*!*OP*!*Setup*!*Runtime*!*Rate*!*Freq*!*Desc*!*UM*!*TotalCost*!*DirCost*!*OHCost*!*LbrHrs*!*MinCost*!*Comments$!${0}",v.Local.sText,v.Local.sText)
					
					f.Data.DataView.ToString("Pricing","PricingView","Router*!*Quantity*!*Direct*!*Material*!*Outside*!*Labor*!*LaborHrs*!*Overhead*!*TotalCost*!*UnitCost*!*Markup*!*UnitPrice*!*Total*!*MarginP*!*MarginD","*!*","$!$",v.Local.sFilter)
					f.Intrinsic.String.Build("Router*!*Quantity*!*Direct*!*Material*!*Outside*!*Labor*!*Labor Hrs*!*Overhead*!*Total Cost*!*Unit Cost*!*Markup*!*Unit Price*!*Total*!*Margin %*!*Margin $$!${0}",v.Local.sFilter,v.Local.sFilter)
					
					f.Intrinsic.String.Build("{1}&^&{0}",v.Local.sText,v.Local.sFilter,v.Local.sText)
					f.Automation.MSExcel.WriteSpreadsheet(v.Local.sRet,v.Local.sText)
				f.Intrinsic.Control.EndIf
				
				
		f.Intrinsic.Control.EndSelect
		
	f.Intrinsic.Control.Case("CTXMARKUP")
		f.Intrinsic.Control.SelectCase(v.Args.ItemName)
			'Add
			f.Intrinsic.Control.Case("ADD")
				f.Data.DataTable.AddRow("Markup","Description","")
			'Delete
			f.Intrinsic.Control.Case("DELETE")
				Gui.F_Upcharge.gsfgMarkup.GetSelectedRows("GridMarkup",v.Local.sPos)
				f.Intrinsic.Control.If(v.Local.sPos,<>,"")
					f.Intrinsic.String.Split(v.Local.sPos,"*!*",v.Local.sPos)
					f.Data.DataTable.DeleteRow("Markup",v.DataView.Markup!MarkupView(v.Local.sPos.Long).DataTableIndex)
					'Deleted so lets recalculate
					'We need to get the sum of the markup table divided by 100 to get the decimal percentage
					f.Data.DataTable.Compute("Markup","(Sum(Markup) / 100) + 1","",v.Local.fMarkup)
					f.Intrinsic.Control.IIF(v.Local.fMarkup,=,0,1,v.Local.fMarkup,v.Local.fMarkup)
					'Now that we have the decimal percentage we need to delete and recreate the expression column
					f.Data.DataTable.RemoveColumn("QtyApplied","UnitPrice")
					f.Intrinsic.Math.Div(v.Screen.F_Upcharge!txtInitial.Text.Float,100,v.Local.fInitial)
					f.Intrinsic.Math.Add(v.Local.fInitial,1,v.Local.fInitial)
					f.Intrinsic.String.Build("(UnitCost * {0}) * {1}",v.Local.fInitial,v.Local.fMarkup,v.Local.sText)
					f.Data.DataTable.AddExpressionColumn("QtyApplied","UnitPrice","Float",v.Local.sText)
					f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","Qty > 0")
					f.Data.DataView.SetFilter("QtyApplied","QtyAppliedView","")
				f.Intrinsic.Control.EndIf
				
		f.Intrinsic.Control.EndSelect
		
	f.Intrinsic.Control.Case("CTXPRICING")
		'took out of code because all done on summary export.
		Gui.F_Label_Est..ContextMenuCreate("ctxPricing")
		Gui.F_Label_Est..ContextMenuAddItem("ctxPricing","Export",0,"Export")
		Gui.F_Label_Est..ContextMenuSetItemEventHandler("ctxPricing","Export","MenuClick")
		Gui.F_Label_Est.gsfgPricingInfo.ContextMenuAttach("ctxPricing")
		
		f.Intrinsic.Control.SelectCase(v.Args.ItemName)
			'Export
			f.Intrinsic.Control.Case("EXPORT")
				'We are going to export the summary grid with the comments
				f.Intrinsic.UI.ShowSaveFileDialog("","Excel | *.xlsx","",v.Local.sRet)
				f.Intrinsic.Control.If(v.Local.sRet,<>,"***CANCEL***")
					Gui.F_Label_Est.gsfgPricingInfo.Export(v.Local.sRet,"xlsx")
				f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndSelect
		
f.Intrinsic.Control.EndSelect

Gui.F_Label_Est.chkFreeze.Value(0)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("MenuClick_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.MenuClick.End

Program.Sub.MLGrid_Click.Start
F.Intrinsic.Control.SetErrorHandler("MLGrid_Click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.fAmount.Declare(Float)
V.Local.sFormula.Declare(String)
v.Local.gsfgMaterialTop.Declare(String,"MaterialTop")
v.Local.gsfgMaterialBottom.Declare(String,"FullTable")
v.Local.gsfgLaborTop.Declare(String,"LaborTop")
v.Local.gsfgLaborBottom.Declare(String,"FullTable")
v.Local.sDataTable.Declare(String)
v.Local.iCount.Declare(Long)
v.Local.bExist.Declare(Boolean)
v.Local.sRet.Declare(String)
v.Local.sEval.Declare(String)
v.Local.iCount2.Declare(Long)

F.Intrinsic.Control.SelectCase(V.Args.ControlName)
	'Top Material Grid
	F.Intrinsic.Control.CaseAny("GSFGMATERIALTOP","GSFGMATERIALBOTTOM","GSFGLABORTOP","GSFGLABORBOTTOM")
		'either column 10 Qty
			F.Intrinsic.Control.SelectCase(V.Args.Column)
				'Col 10 Qty
				F.Intrinsic.Control.Case("Qty")
					v.Local.sDataTable.Set(v.Local.[v.Args.ControlName])
					'Set meta data on override so we can use it later on the Ok button.
					Gui.f_Formulas.txtOverride.SetMetaData(v.Args.ControlName,v.Args.RowIndex)
					
					'Check to see if we have a formula first
					f.Intrinsic.Control.If(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).FormulaQ!FieldVal,=,"")
					
						'We will get the formula from the OP Code that is on the line
						f.Intrinsic.String.Build("SELECT FORMULA_T1, FORMULA_N1, FORMULA_S2, FORMULA_T2, FORMULA_N2, FORMULA_S3, FORMULA_T3, FORMULA_N3, FORMULA_S4, FORMULA_T4, FORMULA_N4, FORMULA_S5, FORMULA_T5, FORMULA_N5, FORMULA_S6, FORMULA_T6, FORMULA_N6, FORMULA_S7, FORMULA_T7, FORMULA_N7 FROM V_OP_CODES WHERE OPERATION = '{0}'",V.DataTable.[v.Local.sDataTable](v.Args.RowIndex).Code!FieldVal,v.Local.sSQL)
						f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstFormula",v.Local.sSQL)
						f.Intrinsic.Control.If(v.ODBC.Con!rstFormula.EOF,=,False)
							v.Local.iCount2.Set(1)
							'We have a formula so lets put it in the fields
							f.Intrinsic.Control.For(v.Local.iCount,1,7)
								'Set Labels
								Gui.f_Formulas.lblF[v.Local.iCount2].Caption(v.ODBC.Con!rstFormula.FieldValTrim!FORMULA_T[v.Local.iCount])
								'Set Values
								f.Intrinsic.Control.SelectCase(v.ODBC.Con!rstFormula.FieldValTrim!FORMULA_T[v.Local.iCount])
'									f.Intrinsic.Control.Case("#/CS")
									'Number per Case	UM: CS; Rolls: Labels/Roll * Rolls/Box; Fanfold: Labels/Stack * Stacks/Box; Sheets: Sheets/Stack * Stacks/Box
										
									f.Intrinsic.Control.Case("#/PK")
									'Number per Pack	Other -> Sheets/Stack
										Gui.f_Formulas.txtf[v.Local.iCount2].Text(v.Screen.F_Label_Est!txtSSheetStack.Text.Float)
										
									f.Intrinsic.Control.Case("#ACR")
										Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.Screen.F_Label_Est!txtHAcrPress.Text.Float)	
										
'									f.Intrinsic.Control.Case("%COV")
									'% Ink Coverage	Other -> % Coverage (could be different if INK vs VARNISH)
									
									f.Intrinsic.Control.Case("%RW")
										'% Run Waste
										'add together front and back colors
										f.Intrinsic.Math.Add(v.Screen.F_Label_Est!txtOColorFront.Text.Float,v.Screen.F_Label_Est!txtOColorBack.Text.Float,v.Local.fAmount)
										f.Intrinsic.String.Build("SELECT * FROM GCG_3623_COLOR WHERE NUM_COLOR = '{0}'",v.Local.fAmount,v.Local.sSQL)
										f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstColor",v.Local.sSQL)
										f.Intrinsic.Control.If(v.ODBC.Con!rstColor.EOF,=,False)
											f.Intrinsic.Control.If(v.Screen.F_Label_Est!chk4Color.Value,=,1)
												Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.ODBC.Con!rstColor.FieldValFloat!RW_4CP)
											f.Intrinsic.Control.Else
												Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.ODBC.Con!rstColor.FieldValFloat!RW)
											f.Intrinsic.Control.EndIf
										f.Intrinsic.Control.EndIf
										f.ODBC.Con!rstColor.Close
										
									f.Intrinsic.Control.Case("(#1)")
										'This is a formula.... Constant 0.0133 * #/PK + Constant 0.667
										'We have a formulas so we need to push it out on the fields
										Gui.f_Formulas.txtF[v.Local.iCount2].Text(0.0133)
										Gui.f_Formulas.txtF[v.Local.iCount2].SetMetaData("(")
										f.Intrinsic.Math.Add(v.Local.iCount2,1,v.Local.iCount2)
										Gui.f_Formulas.lblF[v.Local.iCount2].Caption("#/PK")
										Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.Screen.F_Label_Est!txtSSheetStack.Text.Float)
										Gui.f_Formulas.txtS[v.Local.iCount2].Text("*")
										f.Intrinsic.Math.Add(v.Local.iCount2,1,v.Local.iCount2)
										Gui.f_Formulas.lblF[v.Local.iCount2].Caption("(#1)")
										Gui.f_Formulas.txtF[v.Local.iCount2].Text(0.667)
										Gui.f_Formulas.txtF[v.Local.iCount2].SetMetaData(")")
										Gui.f_Formulas.txtS[v.Local.iCount2].Text("+")
										Gui.f_Formulas.lblLB.Visible(True)
										Gui.f_Formulas.lblRB.Visible(True)
										
'									f.Intrinsic.Control.Case("CW")
									'Carrier Width	Is this always the same as liner width? If so, will update all formulas to use LW abbreviation
									
'									f.Intrinsic.Control.Case("FT/R")
									'Feet per Roll	UM: RL; (Repeat Length * Labels Per Roll)/12
									
'									f.Intrinsic.Control.Case("IN/R")
									'Inches per Roll	UM:RL; (Repeat Length * Labels Per Roll)
									
									f.Intrinsic.Control.Case("LW")
									'Liner Width	Label Finish Info -> Liner Width
										Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.Screen.F_Label_Est!txtHLinerWidth.Text.Float)
										
'									f.Intrinsic.Control.Case("M/CS")
									'Thousands/Case	(#/CS)/1000
									
'									f.Intrinsic.Control.Case("RBL")
									'Ribbon Length	TBD by Estimator
									
									f.Intrinsic.Control.Case("RL")
										Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.Screen.F_Label_Est!txtHRepeatLen.Text.Float)
										
									f.Intrinsic.Control.Case("RSPD")
										'Run Speed	TBD by estimator; no default value
										f.Intrinsic.Math.Add(v.Screen.F_Label_Est!txtOColorFront.Text.Float,v.Screen.F_Label_Est!txtOColorBack.Text.Float,v.Local.fAmount)
										f.Intrinsic.String.Build("SELECT * FROM GCG_3623_COLOR WHERE NUM_COLOR = '{0}'",v.Local.fAmount,v.Local.sSQL)
										f.ODBC.Connection!Con.OpenLocalRecordsetRO("rstColor",v.Local.sSQL)
										f.Intrinsic.Control.If(v.ODBC.Con!rstColor.EOF,=,False)
											f.Intrinsic.Control.If(v.Screen.F_Label_Est!chk4Color.Value,=,1)
												Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.ODBC.Con!rstColor.FieldValFloat!RSPD_4CP)
											f.Intrinsic.Control.Else
												Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.ODBC.Con!rstColor.FieldValFloat!RSPD)
											f.Intrinsic.Control.EndIf
										f.Intrinsic.Control.EndIf
										f.ODBC.Con!rstColor.Close
									
									f.Intrinsic.Control.Case("SHTL")
									'Sheet Length	Label Finish Info -> Depth (Rpt Length would also work here)
										Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.Screen.F_Label_Est!txtHlblDepth.Text.Float)
									f.Intrinsic.Control.CaseElse
										Gui.f_Formulas.txtF[v.Local.iCount2].Text(v.ODBC.con!rstFormula.FieldValFloat!FORMULA_N[v.Local.iCount])
								f.Intrinsic.Control.EndSelect
								
								f.Intrinsic.Control.If(v.Local.iCount,>,1)
									'Set Operators
									Gui.f_Formulas.txtS[v.Local.iCount2].Text(v.ODBC.Con!rstFormula.FieldValTrim!FORMULA_S[v.Local.iCount])
								f.Intrinsic.Control.EndIf
								f.Intrinsic.Math.Add(v.Local.iCount2,1,v.Local.iCount2)
							f.Intrinsic.Control.Next(v.Local.iCount)
							
						f.Intrinsic.Control.EndIf
						f.ODBC.Con!rstFormula.Close

					f.Intrinsic.Control.Else
						'We do have a formula 
						f.Intrinsic.String.Split(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).FormulaQ!FieldVal,"*!*",v.Local.sFormula)
						v.Local.sFormula.RedimPreserve(0,20)
						f.Intrinsic.Control.If(v.Local.sFormula(0).Trim,=,"(#1)")
							Gui.f_Formulas.txtF1.SetMetaData("(")
							Gui.f_Formulas.txtF3.SetMetaData(")")
							Gui.f_Formulas.lblLB.Visible(True)
							Gui.f_Formulas.lblRB.Visible(True)
						f.Intrinsic.Control.EndIf
						
						Gui.f_Formulas.lblF1.Caption(v.Local.sFormula(0).Trim)
						Gui.f_Formulas.txtF1.Text(v.Local.sFormula(1).Trim)
						Gui.f_Formulas.txtS2.Text(v.Local.sFormula(2).Trim)
						Gui.f_Formulas.lblF2.Caption(v.Local.sFormula(3).Trim)
						Gui.f_Formulas.txtF2.Text(v.Local.sFormula(4).Trim)
						Gui.f_Formulas.txtS3.Text(v.Local.sFormula(5).Trim)
						Gui.f_Formulas.lblF3.Caption(v.Local.sFormula(6).Trim)
						Gui.f_Formulas.txtF3.Text(v.Local.sFormula(7).Trim)
						Gui.f_Formulas.txtS4.Text(v.Local.sFormula(8).Trim)
						Gui.f_Formulas.lblF4.Caption(v.Local.sFormula(9).Trim)
						Gui.f_Formulas.txtF4.Text(v.Local.sFormula(10).Trim)
						Gui.f_Formulas.txtS5.Text(v.Local.sFormula(11).Trim)
						Gui.f_Formulas.lblF5.Caption(v.Local.sFormula(12).Trim)
						Gui.f_Formulas.txtF5.Text(v.Local.sFormula(13).Trim)
						Gui.f_Formulas.txtS6.Text(v.Local.sFormula(14).Trim)
						Gui.f_Formulas.lblF6.Caption(v.Local.sFormula(15).Trim)
						Gui.f_Formulas.txtF6.Text(v.Local.sFormula(16).Trim)
						Gui.f_Formulas.txtS7.Text(v.Local.sFormula(17).Trim)
						Gui.f_Formulas.lblF7.Caption(v.Local.sFormula(18).Trim)
						Gui.f_Formulas.txtF7.Text(v.Local.sFormula(19).Trim)
						Gui.f_Formulas.txtOverride.Text(v.Local.sFormula(20).Trim)
								
					f.Intrinsic.Control.EndIf
					
					'We have now set all of our values to the screen
					'We need to disable all of the unused ones
					'Lets loop backwards and disable the fields
					f.Intrinsic.Control.For(v.Local.iCount,7,1,-1)
						f.Intrinsic.Control.If(v.Screen.f_Formulas!lblF[v.Local.iCount].Caption,=,"")
							'Label is blank so disable the fields
							Gui.f_Formulas.txtF[v.Local.iCount].Enabled(False)
							Gui.f_Formulas.txtF[v.Local.iCount].Text("")
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.Next(v.Local.iCount)
					
					'We need to compute the values on the screen
					f.Intrinsic.Control.For(v.Local.iCount,1,7)
						f.Intrinsic.Control.If(v.Local.iCount,=,1)
							'We need to just set the value in the variable to start
							''v.Local.sEval.Set(v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float)
							f.Intrinsic.String.Build("{0}{1}",v.Screen.f_Formulas!txtF[v.Local.iCount].MetaData0,v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,v.Local.sEval)
						f.Intrinsic.Control.Else
							'We need to do what the operator says
							f.Intrinsic.Control.If(v.Screen.f_Formulas!txtOverride.Text.Trim,=,"")
								f.Intrinsic.Control.If(v.Screen.f_Formulas!txtS[v.Local.iCount].Text,<>,"")
									f.Intrinsic.String.Build("{0} {1} {2}{3}",v.Local.sEval,v.Screen.f_Formulas!txtS[v.Local.iCount].Text,v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,v.Screen.f_Formulas!txtF[v.Local.iCount].MetaData0,v.Local.sEval)
								f.Intrinsic.Control.EndIf
							f.Intrinsic.Control.EndIf
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.Next(v.Local.iCount)
					'We are done with the loop so that means we have our final amount and formula
					f.Intrinsic.Control.If(v.Screen.f_Formulas!txtOverride.Text.Trim,=,"")	
						'We don't have override so use the calculation
						f.Intrinsic.Control.Try
							f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
						f.Intrinsic.Control.CatchWhen(700)
							v.Local.fAmount.Set(0)
						f.Intrinsic.Control.EndTry
						Gui.f_Formulas.txtTotal.Text(v.Local.fAmount)
					f.Intrinsic.Control.Else
						Gui.f_Formulas.txtTotal.Text(v.Screen.f_Formulas!txtOverride.Text.Float)
					f.Intrinsic.Control.EndIf
					
					
					Gui.f_Formulas..Show
					Gui.f_Formulas.txtF1.SetFocus					
					
				f.Intrinsic.Control.Case("Code")
					v.Local.sDataTable.Set(v.Local.[v.Args.ControlName])
					'Op Code field was pressed
					'We need to open the browser based on the browser we selected
					f.Intrinsic.String.IsInString(v.Args.ControlName,"LABOR",True,v.Local.bExist)
					f.Intrinsic.Control.If(v.Local.bExist,=,True)
						'our query is for Labor
						V.Local.sSQL.Set("SELECT RTRIM(OPERATION) AS OPERATION, RTRIM(DESCRIPTION) AS DESCRIPTION FROM V_OP_CODES WHERE LMO = 'L'")
					f.Intrinsic.Control.Else
						'our query is for Material
						V.Local.sSQL.SET("SELECT RTRIM(OPERATION) AS OPERATION, RTRIM(DESCRIPTION) AS DESCRIPTION FROM V_OP_CODES WHERE LMO = 'M'")
					f.Intrinsic.Control.EndIf
					'Open the browser for OP Code
					f.Intrinsic.UI.Browser("OP Code","Con",v.Local.sSQL,"OP Code*!*Description","200*!*500",v.Local.sRet)
					f.Intrinsic.Control.If(v.Local.sRet,<>,"***CANCEL***")
						'They selected something so we need to put it in the OP Code field
						f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
						f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"Code",v.Local.sRet(0).Trim,"Qty",0,"FormulaQ","")
'						f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"Code",v.Local.sRet(0).Trim)
					f.Intrinsic.Control.Else
						'they canceled the browser, ask if they want to delete the op code
						f.Intrinsic.Control.If(v.DataTable.[v.Local.sDataTable](v.Args.RowIndex).Code!FieldValTrim,<>,"")
							f.Intrinsic.UI.Msgbox("Would you like to remove the OP Code?","Attention",4,v.Local.sRet)
							f.Intrinsic.Control.If(v.Local.sRet.Long,=,6)
								'they want to delete the op code
								f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"Code","","Qty",0,"FormulaQ","")
							f.Intrinsic.Control.EndIf
						f.Intrinsic.Control.EndIf
					f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndSelect
			

	'Formula Ok button
	F.Intrinsic.Control.Case("CMDOK")
		'Added by FEQ. Textfields, while 
		F.Intrinsic.Control.CallSub("FormulaValidation")
		'Check to make sure the Value isn't zero after a div / symbol
		f.Intrinsic.Control.For(v.Local.iCount,2,7)
			f.Intrinsic.Control.If(v.Screen.f_Formulas!txtS[v.Local.iCount].Text,=,"/")
				'We are dividing so we need to make sure the field is not a 0
				f.Intrinsic.Control.If(v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,=,0,"AND",v.Screen.f_Formulas!txtOverride.Text.Trim,=,"")
					'Value is zero and we are not override so select all to indicate the value needs to be changed
					Gui.f_Formulas.txtF[v.Local.iCount].SelectAll
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.iCount)
		
		'Meta Data 0 is Control Name
		'Meta Data 1 is RowIndex
		'We got past the divide by zero check so lets keep going
		v.Local.sDataTable.Set(v.Local.[v.Screen.f_Formulas!txtOverride.MetaData0])
		
		'We need to do our calculations and create the formula
		f.Intrinsic.Control.For(v.Local.iCount,1,7)
			f.Intrinsic.Control.If(v.Local.iCount,=,1)
				'We need to just set the value in the variable to start
				f.Intrinsic.String.Build("{0}{1}",v.Screen.f_Formulas!txtF[v.Local.iCount].MetaData0,v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,v.Local.sEval)
				f.Intrinsic.String.Build("{0}*!*{1}",v.Screen.f_Formulas!lblF[v.Local.iCount].Caption,v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,v.Local.sFormula)
			f.Intrinsic.Control.Else
				'We need to do what the operator says
				f.Intrinsic.Control.If(v.Screen.f_Formulas!txtOverride.Text.Trim,=,"")
					f.Intrinsic.Control.If(v.Screen.f_Formulas!txtS[v.Local.iCount].Text,<>,"")
						f.Intrinsic.String.Build("{0} {1} {2}{3}",v.Local.sEval,v.Screen.f_Formulas!txtS[v.Local.iCount].Text,v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,v.Screen.f_Formulas!txtF[v.Local.iCount].MetaData0,v.Local.sEval)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
				'Adding to the Formula
				f.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",v.Local.sFormula,v.Screen.f_Formulas!txtS[v.Local.iCount].Text,v.Screen.f_Formulas!lblF[v.Local.iCount].Caption,v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,v.Local.sFormula)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.iCount)
		'We are done with the loop so that means we have our final amount and formula
		'We just need to add the OpCode to the beginning of it and the override to the end of it
		f.Intrinsic.String.Build("{0}*!*{1}",v.Local.sFormula,v.Screen.f_Formulas!txtOverride.Text.Trim,v.Local.sFormula)
		f.Intrinsic.Control.If(v.Screen.f_Formulas!txtOverride.Text.Trim,=,"")	
			'We don't have override so use the calculation
			f.Intrinsic.Control.Try
				f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
			f.Intrinsic.Control.CatchWhen(700)
				v.Local.fAmount.Set(0)
			f.Intrinsic.Control.EndTry
			f.Data.DataTable.SetValue(v.Local.sDataTable,v.Screen.f_Formulas!txtOverride.MetaData1,"Qty",v.Local.fAmount,"FormulaQ",v.Local.sFormula)
		f.Intrinsic.Control.Else
			'We have override so set it
			f.Data.DataTable.SetValue(v.Local.sDataTable,v.Screen.f_Formulas!txtOverride.MetaData1,"Qty",v.Screen.f_Formulas!txtOverride.Text.Float,"FormulaQ",v.Local.sFormula)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Screen.f_Formulas!txtOverride.MetaData0.UCase,=,"GSFGLABORBOTTOM")
			f.Intrinsic.Control.CallSub(dropdownlistlhrq_change)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.CallSub(f_formulas_unload)

		
	f.Intrinsic.Control.CaseElse
		'Lose focus sub
		'We need to compute the values on the screen
		f.Intrinsic.Control.For(v.Local.iCount,1,7)
			f.Intrinsic.Control.If(v.Local.iCount,=,1)
				'We need to just set the value in the variable to start
				f.Intrinsic.String.Build("{0}{1}",v.Screen.f_Formulas!txtF[v.Local.iCount].MetaData0,v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,v.Local.sEval)
			f.Intrinsic.Control.Else
				'We need to do what the operator says
				f.Intrinsic.Control.If(v.Screen.f_Formulas!txtOverride.Text.Trim,=,"")
					f.Intrinsic.Control.If(v.Screen.f_Formulas!txtS[v.Local.iCount].Text,<>,"")
						f.Intrinsic.String.Build("{0} {1} {2}{3}",v.Local.sEval,v.Screen.f_Formulas!txtS[v.Local.iCount].Text,v.Screen.f_Formulas!txtF[v.Local.iCount].Text.Float,v.Screen.f_Formulas!txtF[v.Local.iCount].MetaData0,v.Local.sEval)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.iCount)
		'We are done with the loop so that means we have our final amount and formula
		f.Intrinsic.Control.If(v.Screen.f_Formulas!txtOverride.Text.Trim,=,"")	
			'We don't have override so use the calculation
			f.Intrinsic.Control.Try
				f.Intrinsic.Math.Evaluate(v.Local.sEval,v.Local.fAmount)
			f.Intrinsic.Control.CatchWhen(700)
			'Divide by 0 error
				v.Local.fAmount.Set(0)
			f.Intrinsic.Control.EndTry
			Gui.f_Formulas.txtTotal.Text(v.Local.fAmount)
		f.Intrinsic.Control.Else
			Gui.f_Formulas.txtTotal.Text(v.Screen.f_Formulas!txtOverride.Text.Float)
		f.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("MLGrid_Click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.MLGrid_Click.End

Program.Sub.gsfgLaborBottom_CellValueChanged.Start
F.Intrinsic.Control.SetErrorHandler("gsfgLaborBottom_CellValueChanged_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.gsfgLaborTop.Declare(String,"LaborTop")
v.Local.gsfgLaborBottom.Declare(String,"FullTable")
v.Local.sDataTable.Declare(String)

f.Intrinsic.Control.SelectCase(v.Args.ControlName)
	'Setup
	f.Intrinsic.Control.CaseAny("GSFGLABORTOP","GSFGLABORBOTTOM")
		f.Intrinsic.Control.If(v.Args.Column,=,"Setup")
			'They changed Setup so blank out the formula
			v.Local.sDataTable.Set(v.Local.[v.Args.ControlName])
			f.Data.DataTable.SetValue(v.Local.sDataTable,v.Args.RowIndex,"FormulaM","")
			f.Intrinsic.Control.If(v.Args.ControlName,=,"GSFGLABORBOTTOM")
				f.Intrinsic.Control.CallSub(dropdownlistlhrq_change)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
	f.Intrinsic.Control.Case("GSFGRUNQUANTITIES")
		'They changed a qty so update the drop down labor hours list
		f.Intrinsic.Control.CallSub(dropdownlistlhrq_change)

f.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgLaborBottom_CellValueChanged_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.gsfgLaborBottom_CellValueChanged.End

Program.Sub.MaterialButtons.Start
F.Intrinsic.Control.SetErrorHandler("MaterialButtons_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iCount.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.iRows.Declare(Long)
V.Local.iPos.Declare(Long)
V.Local.iCount2.Declare(Long)
V.Local.fHold.Declare(Float)
V.Local.sVal.Declare(String)
V.Local.iSplit.Declare(Long)
V.Local.iSplitLoop.Declare(Long)
V.Local.sSQL.Declare(String)
v.Local.iRow.Declare(Long)

F.Intrinsic.Control.SelectCase(V.Args.ControlName)
'Material Add button
	F.Intrinsic.Control.Case("CMDMADD")
		f.Intrinsic.Control.If(v.DataView.MaterialTop!MaterialTopView.RowCount,>,0)
			'If non inventory part only get left 19 and add * to the end of the part
			F.Intrinsic.Control.If(V.Screen.F_Label_Est!chkMCreateNonInv.Value,=,1)
				v.Local.sRet.Set(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal)
				F.Intrinsic.String.Build("*{0}",v.Local.sRet.Left19,v.Local.sRet)
				f.Data.DataTable.SetValue("MaterialTop",v.DataTable.MaterialTop.RowCount--,"Part",v.Local.sRet.Trim)
			F.Intrinsic.Control.EndIf
				
			'Check to see if we need to make a split for setup and runtime
			F.Intrinsic.String.Build("SELECT PRODUCT_LINE FROM V_INVENTORY_MSTR WHERE PART = '{0}' AND LOCATION = '{1}' AND PRODUCT_LINE = 'RM' ",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal,V.Local.sSQL)
			F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstPL",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.Con!rstPL.EOF,=,False)
				'It is RM
				F.Intrinsic.Control.If(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Qty!FieldValFloat,>,0,"AND",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Setup!FieldValFloat,>,0)
					'Both are set so we need to split it
					V.Local.iSplit.Set(1)
				F.Intrinsic.Control.Else
					'We only have one so don't split it
					V.Local.iSplit.Set(0)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				'It is not RM
				V.Local.iSplit.Set(0)

				'PL <> RM SO CALCULATE PRICE IF QTY IS 0
				F.Intrinsic.Control.If(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Qty!FieldValFloat,=,0)
					'Setup/Freq * Cost = Price
					F.Intrinsic.Control.If(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,<>,0)
						F.Intrinsic.Math.Div(v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Setup!FieldValFloat,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,v.Local.fHold)
						F.Intrinsic.Math.Mult(v.Local.fHold,v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).ShowCost!FieldValFloat,v.Local.fHold)
						f.Data.DataTable.SetValue("MaterialTop",v.DataTable.MaterialTop.RowCount--,"Cost/um",v.Local.fHold)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstPL.Close

			f.Intrinsic.Control.If(v.Local.iSplit,=,1)
				'We have setup and Qty split
				'Setup
				f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iSplitLoop)
				f.Data.DataTable.Compute("FullTable","Max(Row) + 1","LMO = 'M'",v.Local.iRow)
				f.Intrinsic.Control.IIf(v.Local.iSplitLoop,=,0,1,v.Local.iSplitLoop,v.Local.iSplitLoop)
				f.Intrinsic.Control.IIf(v.Local.iRow,=,0,1,v.Local.iRow,v.Local.iRow)
				f.Data.DataTable.AddRow("FullTable","LMO","M","Row",v.Local.iRow,"Pos",v.Local.iSplitLoop,"Part",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,"Loc",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal,"Code","","Description",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Description!FieldVal,"Freq",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,"Width",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Width!FieldValFloat,"Weight",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Weight!FieldValFloat,"Length",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Length!FieldValFloat,"Cost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost!FieldValFloat,"ShowCost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).ShowCost!FieldValFloat,"MSI",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).MSI!FieldValFloat,"Qty",0,"UM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).UM!FieldVal,"Setup",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Setup!FieldValFloat,"Cost/um",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost/um!FieldValFloat,"FormulaM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).FormulaM!FieldVal,"FormulaQ","")
				'Runtime
				f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iSplitLoop)
				f.Data.DataTable.Compute("FullTable","Max(Row) + 1","LMO = 'M'",v.Local.iRow)
				f.Data.DataTable.AddRow("FullTable","LMO","M","Row",v.Local.iRow,"Pos",v.Local.iSplitLoop,"Part",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,"Loc",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal,"Code",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Code!FieldVal,"Description",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Description!FieldVal,"Freq",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,"Width",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Width!FieldValFloat,"Weight",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Weight!FieldValFloat,"Length",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Length!FieldValFloat,"Cost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost!FieldValFloat,"ShowCost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).ShowCost!FieldValFloat,"MSI",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).MSI!FieldValFloat,"Qty",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Qty!FieldValFloat,"UM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).UM!FieldVal,"Setup",0,"Cost/um",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost/um!FieldValFloat,"FormulaM","","FormulaQ",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).FormulaQ!FieldVal)
			f.Intrinsic.Control.Else
				'Don't need to split
				f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iSplitLoop)
				f.Data.DataTable.Compute("FullTable","Max(Row) + 1","LMO = 'M'",v.Local.iRow)
				f.Intrinsic.Control.IIf(v.Local.iSplitLoop,=,0,1,v.Local.iSplitLoop,v.Local.iSplitLoop)
				f.Intrinsic.Control.IIf(v.Local.iRow,=,0,1,v.Local.iRow,v.Local.iRow)
				f.Data.DataTable.AddRow("FullTable","LMO","M","Row",v.Local.iRow,"Pos",v.Local.iSplitLoop,"Part",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Part!FieldVal,"Loc",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Loc!FieldVal,"Code",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Code!FieldVal,"Description",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Description!FieldVal,"Freq",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Freq!FieldValFloat,"Width",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Width!FieldValFloat,"Weight",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Weight!FieldValFloat,"Length",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Length!FieldValFloat,"Cost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost!FieldValFloat,"ShowCost",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).ShowCost!FieldValFloat,"MSI",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).MSI!FieldValFloat,"Qty",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Qty!FieldValFloat,"UM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).UM!FieldVal,"Setup",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Setup!FieldValFloat,"Cost/um",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).Cost/um!FieldValFloat,"FormulaM",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).FormulaM!FieldVal,"FormulaQ",v.DataTable.MaterialTop(v.DataTable.MaterialTop.RowCount--).FormulaQ!FieldVal)
			f.Intrinsic.Control.EndIf
			
			'delete the MaterialTop
			f.Data.DataTable.DeleteRow("MaterialTop")

			'remove the info from the screen
			Gui.F_Label_Est.txtMPart.Text("")
			Gui.F_Label_Est.txtMPartRev.Text("")
			Gui.F_Label_Est.txtMPartDesc.Text("")
			Gui.F_Label_Est.ddlMLabelShape.Text("")
			Gui.F_Label_Est.ddlMUM.text("")
			Gui.F_Label_Est.txtMACRDie.Text("")
			Gui.F_Label_Est.txtMGapAcross.Text("")
			Gui.F_Label_Est.txtMGapDown.Text("")
			Gui.F_Label_Est.txtMLengthF.Text("")
			Gui.F_Label_Est.txtMLengthT.Text("")
			Gui.F_Label_Est.txtMRepeat.Text("")
			Gui.F_Label_Est.txtMWidthF.Text("")
			Gui.F_Label_Est.txtMWidthT.Text("")
			Gui.F_Label_Est.txtMMatUsed.Text("")
			Gui.F_Label_Est.chkMCreateNonInv.Value(0)
			
		F.Intrinsic.Control.EndIf

	'Material Clear Button
	F.Intrinsic.Control.Case("CMDMCLEAR")
		'We are goign to clear out the MaterialTop flexgrid and the Part-Rev, and Description fields
		Gui.F_Label_Est.txtMPart.Text("")
		Gui.F_Label_Est.txtMPartRev.Text("")
		Gui.F_Label_Est.txtMPartDesc.Text("")
		Gui.F_Label_Est.ddlMLabelShape.Text("")
		Gui.F_Label_Est.ddlMUM.text("")
		Gui.F_Label_Est.txtMACRDie.Text("")
		Gui.F_Label_Est.txtMGapAcross.Text("")
		Gui.F_Label_Est.txtMGapDown.Text("")
		Gui.F_Label_Est.txtMLengthF.Text("")
		Gui.F_Label_Est.txtMLengthT.Text("")
		Gui.F_Label_Est.txtMRepeat.Text("")
		Gui.F_Label_Est.txtMWidthF.Text("")
		Gui.F_Label_Est.txtMWidthT.Text("")
		Gui.F_Label_Est.txtMMatUsed.Text("")
		Gui.F_Label_Est.chkMCreateNonInv.Value(0)
		f.Data.DataTable.DeleteRow("MaterialTop")

	F.Intrinsic.Control.Case("CHKMCREATENONINV")
		'Check box for non inventory Part was checked
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!chkMCreateNonInv.Value,=,1)
			'Yes it is a non inventory part so make the grid visible and blank
			Gui.F_Label_Est.txtMPart.Text("")
			Gui.F_Label_Est.txtMPartRev.Text("")
			Gui.F_Label_Est.txtMPartDesc.Text("")
			Gui.F_Label_Est.ddlMLabelShape.Text("")
			Gui.F_Label_Est.ddlMUM.text("")
			Gui.F_Label_Est.txtMACRDie.Text("")
			Gui.F_Label_Est.txtMGapAcross.Text("")
			Gui.F_Label_Est.txtMGapDown.Text("")
			Gui.F_Label_Est.txtMLengthF.Text("")
			Gui.F_Label_Est.txtMLengthT.Text("")
			Gui.F_Label_Est.txtMRepeat.Text("")
			Gui.F_Label_Est.txtMWidthF.Text("")
			Gui.F_Label_Est.txtMWidthT.Text("")
			Gui.F_Label_Est.txtMMatUsed.Text("")
			f.Data.DataTable.DeleteRow("MaterialTop")
			f.Data.DataTable.AddRow("MaterialTop","Part","","Loc","","Code","","Description","","Freq",0,"Width",0,"Weight",0,"Length",0,"Cost",0,"ShowCost",0,"MSI",0,"Qty",0,"UM","","Setup",0,"Cost/um",0,"FormulaM","","FormulaQ","")
		F.Intrinsic.Control.Else
			'Not inventory part so clear everything out
			Gui.F_Label_Est.txtMPart.Text("")
			Gui.F_Label_Est.txtMPartRev.Text("")
			Gui.F_Label_Est.txtMPartDesc.Text("")
			Gui.F_Label_Est.ddlMLabelShape.Text("")
			Gui.F_Label_Est.ddlMUM.text("")
			Gui.F_Label_Est.txtMACRDie.Text("")
			Gui.F_Label_Est.txtMGapAcross.Text("")
			Gui.F_Label_Est.txtMGapDown.Text("")
			Gui.F_Label_Est.txtMLengthF.Text("")
			Gui.F_Label_Est.txtMLengthT.Text("")
			Gui.F_Label_Est.txtMRepeat.Text("")
			Gui.F_Label_Est.txtMWidthF.Text("")
			Gui.F_Label_Est.txtMWidthT.Text("")
			Gui.F_Label_Est.txtMMatUsed.Text("")
			f.Data.DataTable.DeleteRow("MaterialTop")
			
		f.Intrinsic.Control.EndIf

f.Intrinsic.Control.EndSelect
f.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("MaterialButtons_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.MaterialButtons.End

Program.Sub.LaborButtons.Start
F.Intrinsic.Control.SetErrorHandler("LaborButtons_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iCount.Declare(Long)
V.Local.iRows.Declare(Long)
V.Local.iPos.Declare(Long)
V.Local.iCount2.Declare(Long)
V.Local.sVal.Declare(String)
V.Local.bExist.Declare(Boolean,False)
V.Local.iCurr.Declare(Long)
v.Local.iRow.Declare(Long)
v.Local.iSplit.Declare(Long)
v.Local.iSplitLoop.Declare(Long)

'case statement to handle all of the buttons on the Labor tab
F.Intrinsic.Control.SelectCase(V.Args.ControlName)
	'This handles the Add button
	F.Intrinsic.Control.Case("CMDLADD")
		
		'Will hotfixes work?
		F.Intrinsic.Control.If(Variable.Screen.F_Label_Est!txtLWC.Text,=,"")
			F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Local.bExist,=,False)
			F.Intrinsic.Control.If(V.Global.lBottomRow,>=,0)
				V.Global.sDropdownlist(V.Global.lBottomRow).Set(V.Screen.F_Label_Est!txtLWC.Text)
				V.Local.iCurr.Set(V.Global.lBottomRow)
			F.Intrinsic.Control.Else
				'For some reason the AddToArray function is broke. Apparently it was fixed in a hotfix, but I will go ahead and make the appropriate modifications not to have to rely on that
				F.Intrinsic.Math.Add(V.Global.sDropdownlist.UBound, 1, V.Local.iCurr)
				V.Global.sDropdownlist.RedimPreserve(0, V.Local.iCurr)
				V.Global.sDropdownlist(V.Local.iCurr).Set(V.Screen.F_Label_Est!txtLWC.Text)
'				F.Intrinsic.Variable.AddToArray(V.Global.sDropdownlist,V.Screen.F_Label_Est!txtLWC.Text)
				V.Local.iCurr.Set(V.Global.sDropdownlist.UBound)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		Gui.F_Label_Est.dropdownlistLHRQ.AddItem(V.Global.sDropdownlist(V.Local.iCurr),V.Local.iCurr)
		'We will add LaborTop to LaborBottom and clear out all of the text boxes and the top flexgrid
		'Check to see if we have qty and setup
		F.Intrinsic.Control.If(v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Qty!FieldValFloat,>,0,"AND",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Setup!FieldValFloat,>,0)
			'Both are set so we need to split it
			V.Local.iSplit.Set(1)
		F.Intrinsic.Control.Else
			'We only have one so don't split it
			V.Local.iSplit.Set(0)
		F.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.iSplit,=,1)
			'We have setup and Qty split
			'Setup
			f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iSplitLoop)
			f.Data.DataTable.Compute("FullTable","Max(Row) + 1","LMO = 'L'",v.Local.iRow)
			f.Intrinsic.Control.IIf(v.Local.iSplitLoop,=,0,1,v.Local.iSplitLoop,v.Local.iSplitLoop)
			f.Intrinsic.Control.IIf(v.Local.iRow,=,0,1,v.Local.iRow,v.Local.iRow)
			f.Data.DataTable.AddRow("FullTable","LMO","L","Row",v.Local.iRow,"Pos",v.Local.iSplitLoop,"Part",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Part!FieldVal,"Code","","Description",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Description!FieldVal,"StdCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).StdCost!FieldValFloat,"ShowCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).ShowCost!FieldValFloat,"Qty",0,"CrewSize",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).CrewSize!FieldValFloat,"Setup",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Setup!FieldValFloat,"FormulaM",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).FormulaM!FieldVal,"FormulaQ","")
			'Runtime
			f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iSplitLoop)
			f.Data.DataTable.Compute("FullTable","Max(Row) + 1","LMO = 'L'",v.Local.iRow)
			f.Data.DataTable.AddRow("FullTable","LMO","L","Row",v.Local.iRow,"Pos",v.Local.iSplitLoop,"Part",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Part!FieldVal,"Code",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Code!FieldVal,"Description",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Description!FieldVal,"StdCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).StdCost!FieldValFloat,"ShowCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).ShowCost!FieldValFloat,"Qty",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Qty!FieldValFloat,"CrewSize",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).CrewSize!FieldValFloat,"Setup",0,"FormulaM","","FormulaQ",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).FormulaQ!FieldVal)
		f.Intrinsic.Control.Else
			'Don't need to split
			f.Data.DataTable.Compute("FullTable","Max(Pos) + 1","",v.Local.iSplitLoop)
			f.Data.DataTable.Compute("FullTable","Max(Row) + 1","LMO = 'L'",v.Local.iRow)
			f.Intrinsic.Control.IIf(v.Local.iSplitLoop,=,0,1,v.Local.iSplitLoop,v.Local.iSplitLoop)
			f.Intrinsic.Control.IIf(v.Local.iRow,=,0,1,v.Local.iRow,v.Local.iRow)
			f.Data.DataTable.AddRow("FullTable","LMO","L","Row",v.Local.iRow,"Pos",v.Local.iSplitLoop,"Part",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Part!FieldVal,"Code",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Code!FieldVal,"Description",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Description!FieldVal,"StdCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).StdCost!FieldValFloat,"ShowCost",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).ShowCost!FieldValFloat,"Qty",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Qty!FieldValFloat,"CrewSize",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).CrewSize!FieldValFloat,"Setup",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).Setup!FieldValFloat,"FormulaM",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).FormulaM!FieldVal,"FormulaQ",v.DataTable.LaborTop(v.DataTable.LaborTop.RowCount--).FormulaQ!FieldVal)
		f.Intrinsic.Control.EndIf
		
		'remove the infor from the screen
		Gui.F_Label_Est.txtLWC.Text("")
		Gui.F_Label_Est.txtLWCDesc.Text("")
		f.Data.DataTable.DeleteRow("LaborTop")
		f.Intrinsic.Control.CallSub(dropdownlistlhrq_change)

	'This handles the Clear button
	F.Intrinsic.Control.Case("CMDLCLEAR")
		'We will clear out the text boxes and and flexgrid top
		Gui.F_Label_Est.txtLWC.Text("")
		Gui.F_Label_Est.txtLWCDesc.Text("")
		f.Data.DataTable.DeleteRow("LaborTop")
				
f.Intrinsic.Control.EndSelect
f.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("LaborButtons_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.LaborButtons.End

Program.Sub.gsfgSummaryTop_CellValueChanged.Start
F.Intrinsic.Control.SetErrorHandler("LaborButtons_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.fPos.Declare(Float)
v.Local.iCount.Declare(Long)

'Value was changed in summary so we need to see if the value has a remainder to see if they positions it correctly.
f.Intrinsic.Math.Mod(v.Args.Value.Float,1,v.Local.fPos)
f.Intrinsic.Control.If(v.Local.fPos,=,0)
	'They didn't position it so we need to
	f.Intrinsic.Control.If(v.Args.Value.Float,=,1)
		f.Intrinsic.Math.Sub(v.Args.Value.Float,0.5,v.Local.fPos)
	f.Intrinsic.Control.Else
		f.Intrinsic.Math.Add(v.Args.Value.Float,0.5,v.Local.fPos)
	f.Intrinsic.Control.EndIf
'	f.Data.DataView.SetValue("FullTable","Summary",v.Args.RowHandle,"Pos",v.Local.fPos)
	f.Data.DataTable.SetValue("FullTable",v.Args.RowIndex,"Pos",v.Local.fPos)
	Gui.F_Label_Est.gsfgSummaryTop.Visible(False)
	Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
	f.Data.DataView.Create("FullTable","SumTemp",22,"","Pos Asc")
	f.Intrinsic.Control.For(v.Local.iCount,v.DataView.FullTable!SumTemp.RowCount--,0,-1)
		f.Intrinsic.Math.Add(v.Local.iCount,1.5,v.Local.fPos)
		Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
		f.Data.DataView.SetValue("FullTable","SumTemp",v.Local.iCount,"Pos",v.Local.fPos)
		Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
	f.Intrinsic.Control.Next(v.Local.iCount)
	
	f.Intrinsic.Control.For(v.Local.iCount,v.DataView.FullTable!SumTemp.RowCount--,0,-1)
		f.Intrinsic.Math.Add(v.Local.iCount,1,v.Local.fPos)
		Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
		f.Data.DataView.SetValue("FullTable","SumTemp",v.Local.iCount,"Pos",v.Local.fPos)
		Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
	f.Intrinsic.Control.Next(v.Local.iCount)
	f.Data.DataView.Close("FullTable","SumTemp")
	Gui.F_Label_Est.gsfgSummaryTop.Visible(True)
	
	
	
'	f.Data.DataView.SetSort("FullTable","Summary","Pos Desc")
'	f.Data.DataView.SetSort("FullTable","Summary","Pos Asc")
'	Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
'	f.Data.DataView.SetSeries("FullTable","Summary","Pos",0.5,0.5)
''f.Data.DataView.SetSort("FullTable","Summary","Pos Desc")
''	f.Data.DataView.SetSeries("FullTable","Summary","Pos",v.DataView.FullTable!Summary.RowCount,-1)
'	Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
'	f.Data.DataView.SetSort("FullTable","Summary","Pos Asc")
'	f.Data.DataView.SetSeries("FullTable","Summary","Pos",1,1)
'	Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
'	f.Data.DataView.SetSort("FullTable","Summary","Pos Asc")
f.Intrinsic.Control.Else
	'They already positioned it so just reorder everything.
'	f.Data.DataView.SetSeries("FullTable","Summary","Pos",1,1)
'	Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
Gui.F_Label_Est.gsfgSummaryTop.Visible(False)
	Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
	f.Data.DataView.Create("FullTable","SumTemp",22,"","Pos Asc")
	f.Intrinsic.Control.For(v.Local.iCount,v.DataView.FullTable!SumTemp.RowCount--,0,-1)
		f.Intrinsic.Math.Add(v.Local.iCount,1.5,v.Local.fPos)
		Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
		f.Data.DataView.SetValue("FullTable","SumTemp",v.Local.iCount,"Pos",v.Local.fPos)
		Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
	f.Intrinsic.Control.Next(v.Local.iCount)
	
	f.Intrinsic.Control.For(v.Local.iCount,v.DataView.FullTable!SumTemp.RowCount--,0,-1)
		f.Intrinsic.Math.Add(v.Local.iCount,1,v.Local.fPos)
		Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
		f.Data.DataView.SetValue("FullTable","SumTemp",v.Local.iCount,"Pos",v.Local.fPos)
		Gui.F_Label_Est.gsfgSummaryTop.MainView("GridSummary")
	f.Intrinsic.Control.Next(v.Local.iCount)
	f.Data.DataView.Close("FullTable","SumTemp")
	Gui.F_Label_Est.gsfgSummaryTop.Visible(True)
f.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("LaborButtons_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.gsfgSummaryTop_CellValueChanged.End

Program.Sub.Archived.Start
F.Intrinsic.Control.SetErrorHandler("Archived_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

f.Intrinsic.Control.If(v.Global.bArchived,=,True)
	'it is archived so set things to enabled false
	Gui.F_Label_Est.frm_FinishPart.Enabled(False)
	Gui.F_Label_Est.cmdSave.Enabled(False)
f.Intrinsic.Control.Else
	'it is not arvhied so enable things
	Gui.F_Label_Est.frm_FinishPart.Enabled(True)
	Gui.F_Label_Est.cmdSave.Enabled(True)
f.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Archived_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Archived.End

Program.Sub.DeleteQuote.Start
F.Intrinsic.Control.SetErrorHandler("DeleteQuote_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.sTables.Declare(String)
v.Local.sSQL.Declare(String)
v.Local.iCount.Declare(String)

f.Intrinsic.String.Split("QUOTE_HEADER*!*QUOTE_HF_TEXT*!*QUOTE_LINES*!*QUOTE_BILL_TO*!*QUOTE_CONFIG*!*QUOTE_SHIP_TO*!*QUOTE_TAX","*!*",v.Local.sTables)
'looping through the quote tables and deleting the existance of the quote number
f.Intrinsic.Control.For(v.Local.iCount,v.Local.sTables.UBound)
	F.Intrinsic.String.Build("DELETE FROM {0} WHERE QUOTE_NO = '{1}' ",V.Local.sTables(v.Local.iCount),v.Screen.F_Label_Est!txtQuoteNo.Text,v.Local.sSQL)
	f.ODBC.Connection!Con.Execute(v.Local.sSQL)
f.Intrinsic.Control.Next(v.Local.iCount)

'of course it has a different name
F.Intrinsic.String.Build("DELETE FROM {0} WHERE QUOTE_NUMBER = '{1}' ","QUOTE_LN_TEXT",v.Screen.F_Label_Est!txtQuoteNo.Text,v.Local.sSQL)
f.ODBC.Connection!Con.Execute(v.Local.sSQL)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("DeleteQuote_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.DeleteQuote.End

Program.Sub.PackagingChkbox.Start
F.Intrinsic.Control.SetErrorHandler("PackagingChkbox_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

f.Intrinsic.Control.SelectCase(v.Args.ControlName)
	'Rolls checkbox clicked
	f.Intrinsic.Control.Case("CHKROLLS")
		f.Intrinsic.Control.BlockEvents
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!chkRolls.Value,=,1)
			Gui.F_Label_Est.chkFanfold.Value(0)
			Gui.F_Label_Est.chkSheets.Value(0)
			f.Intrinsic.Control.CallSub(Txt_Lost_Focus,"ControlName","TXTRCORESIZE")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.UnBlockEvents
		
	'Fanfold checkbox clicked
	f.Intrinsic.Control.Case("CHKFANFOLD")
		f.Intrinsic.Control.BlockEvents
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!CHKFANFOLD.Value,=,1)
			Gui.F_Label_Est.chkRolls.Value(0)
			Gui.F_Label_Est.chkSheets.Value(0)
			f.Intrinsic.Control.CallSub(Txt_Lost_Focus,"ControlName","TXTFLBLFOLD")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.UnBlockEvents
		
	'Sheets checkbox clicked
	f.Intrinsic.Control.Case("CHKSHEETS")
		f.Intrinsic.Control.BlockEvents
		f.Intrinsic.Control.If(v.Screen.F_Label_Est!CHKSHEETS.Value,=,1)
			Gui.F_Label_Est.chkFanfold.Value(0)
			Gui.F_Label_Est.chkRolls.Value(0)
			f.Intrinsic.Control.CallSub(Txt_Lost_Focus,"ControlName","TXTSSHEETSTACK")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.UnBlockEvents
		
f.Intrinsic.Control.EndSelect
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("PackagingChkbox_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3623_EST_DT.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub(f_new_open_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.PackagingChkbox.End

Program.Sub.PrevEstProperties.Start
Gui.F_Label_Est.gsfgHPrevEst.SuspendLayout
'Preview Column Properties
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","H_SALES_REP","Visible",False)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","Caption","Est Num")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","Width","150")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_NO","VisibleIndex", 1)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","Caption","Customer")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","Width","150")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CUSTOMER","VisibleIndex", 2)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","Caption","Finish Part")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","Width","350")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISH_PART","VisibleIndex", 3)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","Caption","Width")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","Width","100")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_WIDTH","VisibleIndex", 4)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","Caption","Label Depth")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","Width","150")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","LBL_DEPTH","VisibleIndex", 5)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","Caption","Colors")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","Width","100")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","NUM_COLORS","VisibleIndex", 6)

'#3 mod
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","Caption","Material")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","Width","150")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FOR_MATL","VisibleIndex", 7)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","Caption","Streams")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","Width","100")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","HACRPRESS","VisibleIndex", 8)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","ROLLS","Visible",False)
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FANFOLD","Visible",False)
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","SHEETS","Visible",False)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","Caption","Finishing")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","Width","150")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","FINISHING","VisibleIndex", 9)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","Caption","Press")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","Width","100")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","PRESS_WC","VisibleIndex", 10)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","Caption","Estimator")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","Width","150")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","CREATED_BY","VisibleIndex", 11)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","Caption","Est Date")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","DisplayCustomDateTime","d")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","Width","125")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","EST_DATE","VisibleIndex", 12)

Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","HeaderHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","Caption","Quote Num")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","CellHAlignment","Center")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","CellBorderColor","Black")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","Width","150")
Gui.F_Label_Est.gsfgHPrevEst.SetColumnProperty("GridPrevEst","QUOTE_NO","VisibleIndex", 13)

'Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","EnableAppearanceEvenRow",True)
Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","Editable",False)
Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","ReadOnly",True)
Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","ShowGroupPanel",True)

Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","OptionsViewShowAutoFilterRow",True)

Gui.F_Label_Est.gsfgHPrevEst.SetGridviewProperty("GridPrevEst","OptionsSelectionEnableAppearanceFocusedRow",False)

Gui.F_Label_Est.gsfgHPrevEst.AddStyleFormatCondition("GridPrevEst","H_SALES_REP","Archived","Equal","Archived")
Gui.F_Label_Est.gsfgHPrevEst.SetStyleFormatConditionProperty("GridPrevEst","H_SALES_REP","Archived","BackColor","Moccasin")
Gui.F_Label_Est.gsfgHPrevEst.SetStyleFormatConditionProperty("GridPrevEst","H_SALES_REP","Archived","ApplyToRow",True)

Gui.F_Label_Est.gsfgHPrevEst.ResumeLayout

Program.Sub.PrevEstProperties.End

Program.Sub.PartReqs.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")
V.Local.sSql.Declare(String, "")
V.Local.sEstimate.Declare(String, "")

'This subroutine checks to make sure the requirements to create a new part are there.
'set the estimate (Quote number) to a local variable and global variable
V.Local.sestimate.Set(V.Screen.F_Label_Est!txtEstimate.Text)
V.Global.sRouter.Set(V.Screen.F_Label_Est!txtFinishPart.Text.UCase)
'Check to see if Router is blank if it is then stop and notify them
F.Intrinsic.Control.If(V.Global.sRouter,=,"")
	F.Intrinsic.UI.Msgbox("Finish Part on the Header tab is blank.","Warning")
	F.Intrinsic.Variable.AddRV("BAD","True")
	F.Intrinsic.Control.ExitSub
f.Intrinsic.Control.Else
	f.Intrinsic.Variable.AddRV("BAD","False")
F.Intrinsic.Control.EndIf
'Check to see if Partno is entered
F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtFinishPart.Text,=,"")
	F.Intrinsic.UI.Msgbox("Partno is not filled in.","Warning")
	F.Intrinsic.Variable.AddRV("BAD","True")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.Variable.AddRV("BAD","False")
F.Intrinsic.Control.EndIf
'Check to see if parts desc is entered
F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtdesc.Text,=,"")
	F.Intrinsic.UI.Msgbox("Parts desc is not filled in.","Warning")
	F.Intrinsic.Variable.AddRV("BAD","True")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.Variable.AddRV("BAD","False")
F.Intrinsic.Control.EndIf
'Check to see if Productline is entered
F.Intrinsic.Control.If(V.Screen.F_Label_Est!ddlHPL.Text,=,"")
	F.Intrinsic.UI.Msgbox("Product line is not filled in.","Warning")
	F.Intrinsic.Variable.AddRV("BAD","True")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.Variable.AddRV("BAD","False")
F.Intrinsic.Control.EndIf
'Check to see if Um is there
F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtHUM.Text,=,"")
	F.Intrinsic.UI.Msgbox("Header Unit of Measure is not filled in.","Warning")
	F.Intrinsic.Variable.AddRV("BAD","True")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.Variable.AddRV("BAD","False")
F.Intrinsic.Control.EndIf
'Check to see if Location is valid
f.Intrinsic.String.Build("SELECT LOCATION FROM V_LOCATIONS WHERE UCASE(LOCATION) = '{0}'",V.Screen.F_Label_Est!txtFinishLoc.Text,v.Local.sSQL)
f.ODBC.Connection!Con.OpenLocalRecordSetRO("rstLoc",v.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstLoc.EOF,=,True)
	F.Intrinsic.UI.Msgbox("Location is not a valid Location.","Warning")
	F.Intrinsic.Variable.AddRV("BAD","True")
	f.ODBC.Con!rstLoc.Close
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.Variable.AddRV("BAD","False")
F.Intrinsic.Control.EndIf
f.ODBC.Con!rstLoc.Close

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.PartReqs.End

Program.Sub.FormulaValidation.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")
V.Local.sTemp.Declare(String, "")

F.Intrinsic.String.Replace(V.Screen.f_Formulas!txtF1.Text, "+", "", V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp, "-", "", V.Local.sTemp)
Gui.f_Formulas.txtF1.Text(V.Local.sTemp.Float)

F.Intrinsic.String.Replace(V.Screen.f_Formulas!txtF2.Text, "+", "", V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp, "-", "", V.Local.sTemp)
Gui.f_Formulas.txtF2.Text(V.Local.sTemp.Float)

F.Intrinsic.String.Replace(V.Screen.f_Formulas!txtF3.Text, "+", "", V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp, "-", "", V.Local.sTemp)
Gui.f_Formulas.txtF3.Text(V.Local.sTemp.Float)

F.Intrinsic.String.Replace(V.Screen.f_Formulas!txtF4.Text, "+", "", V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp, "-", "", V.Local.sTemp)
Gui.f_Formulas.txtF4.Text(V.Local.sTemp.Float)

F.Intrinsic.String.Replace(V.Screen.f_Formulas!txtF5.Text, "+", "", V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp, "-", "", V.Local.sTemp)
Gui.f_Formulas.txtF5.Text(V.Local.sTemp.Float)

F.Intrinsic.String.Replace(V.Screen.f_Formulas!txtF6.Text, "+", "", V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp, "-", "", V.Local.sTemp)
Gui.f_Formulas.txtF6.Text(V.Local.sTemp.Float)

F.Intrinsic.String.Replace(V.Screen.f_Formulas!txtF7.Text, "+", "", V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp, "-", "", V.Local.sTemp)
Gui.f_Formulas.txtF7.Text(V.Local.sTemp.Float)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.FormulaValidation.End

Program.Sub.FinshedPartChng.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")


F.Intrinsic.Control.SelectCase(V.Args.ControlName)
	F.Intrinsic.Control.Calse("TXTFINISHPART")
		F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtFinishPart.Text, <>, "")
			Gui.F_Label_Est.txtFinishRouter.Text(V.Screen.F_Label_Est!txtFinishPart.Text.Trim)
			Gui.F_Label_Est.txtFinishRev.Text("")	
		F.Intrinsic.Control.EndIf	
		
	F.Intrinsic.Control.Case("TXTHACRDIE")
		Gui.F_Label_Est.txtHAcrPress.Text(V.Screen.F_Label_Est!txtHAcrDie.Text.Trim)
	
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.FinshedPartChng.End

Program.Sub.Cancel_Rt.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")

'This will fire if the user hits on cancel or x for the router creation options. In all these cases, we set up the bad flag so the project jumps out of the subroutine, and we set up the flag so the project jumps out of the wait loop
Gui.F_RTRev..Visible(False)
Gui.F_RtSave..Visible(False)
Gui.F_Label_Est..Show

F.Intrinsic.Variable.AddRV("BAD", True)
V.Global.bRTFlag.Set(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.Cancel_Rt.End

Program.Sub.OverrideRT.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")

'If they are just saving the router changes to the original router, we leave it all alone
Gui.F_RTRev..Visible(False)
Gui.F_RtSave..Visible(False)
Gui.F_Label_Est..Show

F.Intrinsic.Variable.AddRV("BAD", False)
V.Global.bRTFlag.Set(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.OverrideRT.End

Program.Sub.RTSubroutine.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")
V.Local.sRouter.Declare(String, "")
V.Local.sSql.Declare(String, "")
V.Local.sRet.Declare(String, "")

Gui.F_RTRev..Visible(False)

'When they are trying to create a new rev for the router, we need to check to make sure that the router rev are not duplicate
F.Intrinsic.String.GSSPartString(V.Screen.F_RTRev!txtRTRout.Text, V.Screen.F_RTRev!txtRtRev.Text, V.Local.sRouter)
F.Intrinsic.String.Build("Select Router from V_ROUTER_HEADER where ROUTER = '{0}'", V.Local.sRouter, V.Local.sSql)
F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstCheck", V.Local.sSql)

F.Intrinsic.Control.If(V.ODBC.Con!rstCheck.EOF, =, False)
	F.Intrinsic.String.Build("Router/Rev {0} already exists. {1}Please select a different revision to create a new router.", V.Local.sRouter, V.Ambient.NewLine, V.Local.sSql)
	F.Intrinsic.UI.Msgbox(V.Local.sSql, "!!!Duplicate Router!!!")
	Gui.F_RTRev.txtRtRev.Text("")
	Gui.F_RTRev..Show
	
F.Intrinsic.Control.Else
	Gui.F_Label_Est.txtFinishRev.Text(V.Screen.F_RTRev!txtRtRev.Text)
	F.Intrinsic.Variable.AddRV("BAD", False)
	V.Global.bRTFlag.Set(True)
	
F.Intrinsic.Control.EndIf

F.ODBC.Con!rstCheck.Close

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.RTSubroutine.End

Program.Sub.New_RT.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")

Gui.F_RtSave..Visible(False)

'When they select that they need a new router, we populate the router on the router textbox and clear the rev textbox, and then show the form and wait for their input
Gui.F_RTRev.txtRTRout.Text(V.Screen.F_Label_Est!txtFinishRouter.Text)
Gui.F_RTRev.txtRtRev.Text("")

Gui.F_RtSave..Visible(False)
Gui.F_RTRev..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.New_RT.End

Program.Sub.LabelCheck.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")

'Added by FEQ. We added two new checkboxes that will act as radio buttons. This subroutine simply unchecks the other checkbox when the other is changed.
F.Intrinsic.Control.BlockEvents

F.Intrinsic.Control.SelectCase(V.Args.ControlName)
F.Intrinsic.Control.Case("CHKPRECISION")
	Gui.F_Label_Est.chkPrime.Value(False)
F.Intrinsic.Control.Case("CHKPRIME")
	Gui.F_Label_Est.chkPrecision.Value(False)
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.UnblockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.LabelCheck.End

Program.Sub.ReCostClick.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")

F.Intrinsic.Control.If(V.Screen.F_Label_Est!txtEstimate.Text, =, "")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'This is fired when the ReCost button is pressed. It is for #4 Mod of the final development list. We are going to gather the current Cost of the Material sequences and Labor sequences and repopulate the grids on teh DICE
'We create dictionaries to fill the cost for the material used and the labor
'Labor Dictionary
F.Data.DataTable.CreateFromSQL("dtForCostingLabor", "Con", "SELECT Distinct RTRIM(WC.MACHINE) AS PART, ISNULL(WC.STANDARD_COST,0) AS STDCOST, ISNULL(WC.STANDARD_BILL,0) AS SHOWCOST FROM V_WORKCENTERS AS WC", True)

F.Data.Dictionary.CreateFromDataTable("dicLabor", "dtForCostingLabor", "Part", "STDCOST")
F.Data.Dictionary.SetDefaultReturn("dicLabor", 0.00)

F.Data.DataTable.FillFromDictionary("FullTable", "DicLabor", "PART", "StdCost")

F.Data.Dictionary.Close("DicLabor")

F.Data.Dictionary.CreateFromDataTable("DicBill", "dtForCostingLabor", "Part", "SHOWCOST")
F.Data.Dictionary.SetDefaultReturn("DicBill", 0.00)

F.Data.DataTable.FillFromDictionary("FullTable", "DicBill", "PART", "ShowCost")

F.Data.Dictionary.Close("DicBill")

F.Data.DataTable.Close("dtForCostingLabor")

'might need to add the revision too
'F.Data.DataTable.CreateFromSQL("dtMatCostTemp", "Con", "SELECT Distinct RTRIM(MST.PART) AS PART, RTRIM(MST.LOCATION) AS LOC, ISNULL(MST.AMT_COST,0.00) AS COST FROM V_INVENTORY_MSTR AS MST")
F.Data.DataTable.CreateFromSQL("dtMatCostTemp", "Con", "SELECT Distinct RTRIM(MST.PART) AS PART, RTRIM(MST.LOCN) AS LOC, ISNULL(MST.COST,0.00) AS COST FROM V_INVENTORY_COST AS MST")
F.Data.DataTable.AddExpressionColumn("dtMatCostTemp", "PartLoc", "String", "[Part]+'-'+[Loc]")

F.Data.Dictionary.CreateFromDataTable("DicMatl", "dtMatCostTemp", "PartLoc", "Cost")
F.Data.Dictionary.SetDefaultReturn("DicMatl", 0.00)

F.Data.DataTable.AddExpressionColumn("FullTable", "PartLoc", "String", "[Part]+'-'+[Loc]")

F.Data.Datatable.FillFromDictionary("FullTable", "DicMatl", "PartLoc", "Cost")

F.Data.DataTable.RemoveColumn("FullTable", "PartLoc")

F.Data.Dictionary.Close("DicMatl")
F.Data.DataTable.Close("dtMatCostTemp")

F.Data.DataTable.AddExpressionColumn("FullTable", "AltCost", "Float", "IIF([LMO] = 'L',[ShowCost],IIF([LMO] = 'M' OR [LMO] = 'O', [Cost], 0.00))")
F.Data.Dictionary.CreatefromDataTable("dicShowCost", "FullTable", "Seq", "AltCost")
F.Data.Dictionary.SetDefaultReturn("dicShowCost", 0.00)

F.Data.DataTable.FillFromDictionary("FullTable", "dicShowCost", "Seq", "ShowCost")

F.Data.Dictionary.Close("dicShowCost")
F.Data.DataTable.RemoveColumn("FullTable", "AltCost")

Gui.F_Label_Est.chkFreeze.Value(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.ReCostClick.End

Program.Sub.Comments.Start
${$0$}$DLS_SCREEN_MOCKUP$}$SUPERVSR$}$8/12/2015$}$True
${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$This will be a custom project that at time of shipment will, based on the Serial Numbers being shipped, retrieve the document control pdf.  Once the pdf are retrieved each file will be split into individual pages, the page size changed to legal, and a watermark added to the bottom right of the page that includes the Customer PO, Serial Number of Finished Goods, Sales Order Number, and Batch ID.  After the Split files are generated for all the document control PDF the user can then select either print, email, or save the collection to the shipment, and any combination can be selected.

Program.Sub.Comments.End
